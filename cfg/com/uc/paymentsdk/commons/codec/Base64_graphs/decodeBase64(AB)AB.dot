digraph "CFG forcom.uc.paymentsdk.commons.codec.Base64.decodeBase64([B)[B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lbyte[] r15 = discardNonBase64(r15)l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|lif (r15.length != 0) goto L40l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\lORIG_RETURN\l|lreturn new byte[0]l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|lint r1 = r15.length \/ 4lbyte[] r0 = (byte[]) nulllr4 = 0lint r6 = r15.lengthl}"];
Node_7 [shape=record,label="{7\:\ 0x001c|LOOP_START\lPHI: r6l  0x001c: PHI (r6v1 'i5' int) = (r6v0 'i5' int), (r6v5 'i5' int) binds: [B:6:0x000d, B:14:?] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001c\-\>B:14:?\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|lif (r15[r6 \- 1] == 61) goto L46l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|lint r6 = r6 + (\-1)l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|lif (r6 != 0) goto L60l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|SYNTHETIC\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|lreturn new byte[0]l}"];
Node_14 [shape=record,label="{14\:\ ?|LOOP_END\lSYNTHETIC\lLOOP:0: B:7:0x001c\-\>B:14:?\l|l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|SYNTHETIC\l|l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|lbyte[] r0 = new byte[r6 \- r1]lr6 = 0l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|LOOP_START\lPHI: r4 r6l  0x0028: PHI (r4v1 'i3' int) = (r4v0 'i3' int), (r4v2 'i3' int) binds: [B:16:0x0023, B:23:0x0075] A[DONT_GENERATE, DONT_INLINE]l  0x0028: PHI (r6v3 'i5' int) = (r6v2 'i5' int), (r6v4 'i5' int) binds: [B:16:0x0023, B:23:0x0075] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:17:0x0028\-\>B:23:0x0075\l|lif (r6 \< r1) goto L49l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|lint r5 = r6 * 4lr2 = r15[r5 + 2]lr3 = r15[r5 + 3]lr7 = com.uc.paymentsdk.commons.codec.Base64.base64Alphabet[r15[r5]]lr8 = com.uc.paymentsdk.commons.codec.Base64.base64Alphabet[r15[r5 + 1]]l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|lif (r2 == 61) goto L54l}"];
Node_20 [shape=record,label="{20\:\ 0x004d|lif (r3 == 61) goto L54l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|lr9 = com.uc.paymentsdk.commons.codec.Base64.base64Alphabet[r2]lr10 = com.uc.paymentsdk.commons.codec.Base64.base64Alphabet[r3]lr0[r4] = (byte) ((r7 \<\< 2) \| (r8 \>\> 4))lr0[r4 + 1] = (byte) (((r8 & 15) \<\< 4) \| ((r9 \>\> 2) & 15))lr0[r4 + 2] = (byte) ((r9 \<\< 6) \| r10)l}"];
Node_22 [shape=record,label="{22\:\ 0x0075|SYNTHETIC\l|l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|LOOP_END\lLOOP:1: B:17:0x0028\-\>B:23:0x0075\l|lint r4 = r4 + 3lint r6 = r6 + 1l}"];
Node_24 [shape=record,label="{24\:\ 0x007a|lif (r2 != 61) goto L56l}"];
Node_25 [shape=record,label="{25\:\ 0x007c|lr0[r4] = (byte) ((r7 \<\< 2) \| (r8 \>\> 4))l}"];
Node_26 [shape=record,label="{26\:\ 0x0075|SYNTHETIC\l|l}"];
Node_27 [shape=record,label="{27\:\ 0x0085|lif (r3 != 61) goto L64l}"];
Node_28 [shape=record,label="{28\:\ 0x0087|lr9 = com.uc.paymentsdk.commons.codec.Base64.base64Alphabet[r2]lr0[r4] = (byte) ((r7 \<\< 2) \| (r8 \>\> 4))lr0[r4 + 1] = (byte) (((r8 & 15) \<\< 4) \| ((r9 \>\> 2) & 15))l}"];
Node_29 [shape=record,label="{29\:\ 0x0075|SYNTHETIC\l|l}"];
Node_30 [shape=record,label="{30\:\ 0x0075|SYNTHETIC\l|l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|SYNTHETIC\l|l}"];
Node_32 [shape=record,label="{32\:\ 0x002a|l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|lreturn r0l}"];
MethodNode[shape=record,label="{public static byte[] com.uc.paymentsdk.commons.codec.Base64.decodeBase64((r15v0 'paramArrayOfByte' byte[] A[D('paramArrayOfByte' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:32:0x002a \-\> B:4:0x000c, BACK_EDGE: B:23:0x0075 \-\> B:17:0x0028, CROSS_EDGE: B:25:0x007c \-\> B:23:0x0075, CROSS_EDGE: B:27:0x0085 \-\> B:23:0x0075, CROSS_EDGE: B:28:0x0087 \-\> B:23:0x0075, CROSS_EDGE: B:19:0x004b \-\> B:24:0x007a, BACK_EDGE: B:10:0x002e \-\> B:7:0x001c, CROSS_EDGE: B:12:0x0030 \-\> B:4:0x000c\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_5;
Node_14 -> Node_7;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_31[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_17;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_23;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_23;
Node_30 -> Node_23;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_5;
}

