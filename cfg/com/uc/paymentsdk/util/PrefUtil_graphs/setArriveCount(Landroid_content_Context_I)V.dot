digraph "CFG forcom.uc.paymentsdk.util.PrefUtil.setArriveCount(Landroid\/content\/Context;I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|lmonitor\-enter(com.uc.paymentsdk.util.PrefUtil.class)l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x000a), top: B:3:0x0003 \}\lCatch: all \-\> 0x001b\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|lif (com.uc.paymentsdk.util.PrefUtil.sPref != null) goto L22l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|TryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x000a), top: B:3:0x0003 \}\lCatch: all \-\> 0x001b\l|linit(r3)     \/\/ Catch: java.lang.Throwable \-\> L1bl}"];
Node_7 [shape=record,label="{7\:\ 0x000a|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x000a), top: B:3:0x0003 \}\lCatch: all \-\> 0x001b\l|lcom.uc.paymentsdk.util.PrefUtil.sPref.edit().putInt(com.uc.paymentsdk.util.PrefUtil.P_ARRIVE_COUNT, r4).commit()     \/\/ Catch: java.lang.Throwable \-\> L1bl}"];
Node_8 [shape=record,label="{8\:\ 0x0019|lmonitor\-exit(com.uc.paymentsdk.util.PrefUtil.class)l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|RETURN\l|lreturnl}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|REMOVE\lExcHandler: all \-\> 0x001b\l|ljava.lang.Throwable r1 = move\-exceptionl}"];
Node_13 [shape=record,label="{13\:\ 0x001d|REMOVE\l|lthrow r1l}"];
MethodNode[shape=record,label="{private static synchronized void com.uc.paymentsdk.util.PrefUtil.setArriveCount((r3v0 'paramContext' android.content.Context A[D('paramContext' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'paramInt' int A[D('paramInt' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:13:0x001d \-\> B:10:?, CROSS_EDGE: B:5:0x0005 \-\> B:7:0x000a, CROSS_EDGE: B:3:0x0003 \-\> B:12:0x001b\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_10;
}

