digraph "CFG forcom.uc.paymentsdk.util.PrefUtil.setAvailablePayType(Landroid\/content\/Context;Ljava\/lang\/String;)V" {
subgraph cluster_Region_1982144317 {
label = "R(3:(1:3)|(6:6|(2:(1:10)(1:(1:15)(0))|12)|19|(1:21)|(1:25)|26)|27)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1791234076 {
label = "IF [B:2:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|lif (com.uc.paymentsdk.util.PrefUtil.sPref == null) goto L34l}"];
subgraph cluster_Region_900011864 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|linit(r9)l}"];
}
}
subgraph cluster_IfRegion_994933707 {
label = "IF [B:5:0x0013] THEN: R(6:6|(2:(1:10)(1:(1:15)(0))|12)|19|(1:21)|(1:25)|26) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|lif (r10.indexOf(\"sms\") \> r10.indexOf(r10)) goto L37l}"];
subgraph cluster_Region_1765667425 {
label = "R(6:6|(2:(1:10)(1:(1:15)(0))|12)|19|(1:21)|(1:25)|26)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|ljava.lang.String[] java.lang.String[] r0 = r10.split(com.uc.paymentsdk.util.Constants.TERM)lint r1 = 0lint int r2 = r0.lengthl}"];
subgraph cluster_LoopRegion_1877119336 {
label = "LOOP:0: (2:(1:10)(1:(1:15)(0))|12)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|LOOP_START\lADDED_TO_REGION\lPHI: r1l  0x001d: PHI (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:6:0x0015, B:12:0x0063] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001d\-\>B:12:0x0063\l|lif (r1 \< r2) goto L47l}"];
subgraph cluster_Region_1352506170 {
label = "R(2:(1:10)(1:(1:15)(0))|12)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1295193592 {
label = "IF [B:9:0x0055] THEN: R(1:10) ELSE: R(1:(1:15)(0))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0055|lif (\"sms\".equals(r0[r1]) != false) goto L49l}"];
subgraph cluster_Region_1195315177 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0057|lr0[r1] = r0[r2 \- 1]lr0[r2 \- 1] = \"sms\"l}"];
}
subgraph cluster_Region_1699694440 {
label = "R(1:(1:15)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1015254027 {
label = "IF [B:14:0x006e] THEN: R(1:15) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x006e|lif (com.uc.paymentsdk.model.TypeFactory.TYPE_PAY_UPOINT.equals(r0[r1]) != false) goto L53l}"];
subgraph cluster_Region_975953664 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0070|lr0[r1] = r0[0]lr0[0] = com.uc.paymentsdk.model.TypeFactory.TYPE_PAY_UPOINTl}"];
}
subgraph cluster_Region_792854317 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x0063|LOOP_END\lLOOP:0: B:7:0x001d\-\>B:12:0x0063\l|lr1++l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x001f|ljava.lang.StringBuilder java.lang.StringBuilder r4 = new java.lang.StringBuilder()lint r2 = 0ll}"];
subgraph cluster_LoopRegion_851653194 {
label = "LOOP:1: (1:21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0026|LOOP_START\lADDED_TO_REGION\lPHI: r2l  0x0026: PHI (r2v2 'j' int) = (r2v1 'j' int), (r2v3 'j' int) binds: [B:19:0x001f, B:21:0x0079] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:20:0x0026\-\>B:21:0x0079\l|ljava.lang.String lif (r2 \< r3) goto L54l}"];
subgraph cluster_Region_1885251318 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0079|LOOP_END\lLOOP:1: B:20:0x0026\-\>B:21:0x0079\l|lr4.append(r0).append(com.uc.paymentsdk.util.Constants.TERM)lr2++l}"];
}
}
subgraph cluster_IfRegion_350856226 {
label = "IF [B:24:0x002f] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x002f|lif (r4.indexOf(com.uc.paymentsdk.util.Constants.TERM) != (\-1)) goto L43l}"];
subgraph cluster_Region_1878728198 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0031|lr4.deleteCharAt(r4.length() \- 1)l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x0039|ljava.lang.String r10 = r4.toString()l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x003d|PHI: r10l  0x003d: PHI (r10v1 'paramString' java.lang.String) = (r10v0 'paramString' java.lang.String), (r10v2 'paramString' java.lang.String) binds: [B:5:0x0013, B:26:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|lcom.uc.paymentsdk.util.PrefUtil.sPref.edit().putString(com.uc.paymentsdk.util.PrefUtil.P_AVAILABLE_PAY_TYPE, r10).commit()l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x004d|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0063|SYNTHETIC\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0066|l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0063|SYNTHETIC\l|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0063|SYNTHETIC\l|l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x001f|SYNTHETIC\l|l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0028|SYNTHETIC\l|l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0028|l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x004c|l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{private static void com.uc.paymentsdk.util.PrefUtil.setAvailablePayType((r9v0 'paramContext' android.content.Context A[D('paramContext' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'paramString' java.lang.String A[D('paramString' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:24:0x002f \-\> B:26:0x0039, BACK_EDGE: B:21:0x0079 \-\> B:20:0x0026, BACK_EDGE: B:12:0x0063 \-\> B:7:0x001d, CROSS_EDGE: B:14:0x006e \-\> B:12:0x0063, CROSS_EDGE: B:15:0x0070 \-\> B:12:0x0063, CROSS_EDGE: B:5:0x0013 \-\> B:27:0x003d, CROSS_EDGE: B:2:0x0004 \-\> B:4:0x0009\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_27[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_18[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_12 -> Node_7;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_20;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_16 -> Node_12;
Node_17 -> Node_12;
Node_18 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_28 -> Node_29;
}

