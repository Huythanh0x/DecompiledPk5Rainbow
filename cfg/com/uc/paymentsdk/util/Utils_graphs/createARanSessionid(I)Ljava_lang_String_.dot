digraph "CFG forcom.uc.paymentsdk.util.Utils.createARanSessionid(I)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|llong r5 = java.lang.System.currentTimeMillis()lr0 = 1lr7 = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|LOOP_START\lPHI: r0 r7l  0x0009: PHI (r0v1 'range' long) = (r0v0 'range' long), (r0v2 'range' long) binds: [B:1:0x0000, B:3:0x002b] A[DONT_GENERATE, DONT_INLINE]l  0x0009: PHI (r7v1 'x' int) = (r7v0 'x' int), (r7v2 'x' int) binds: [B:1:0x0000, B:3:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0009\-\>B:3:0x002b\l|lif (r7 \< r13) goto L22l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|LOOP_END\lLOOP:0: B:2:0x0009\-\>B:3:0x002b\l|llong r0 = r0 * 10lint r7 = r7 + 1l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|SYNTHETIC\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|llong r2 = getRan(r0)ljava.lang.String r4 = java.lang.String.valueOf(r2)l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|LOOP_START\lPHI: r4l  0x0013: PHI (r4v1 'rdmstr' java.lang.String) = (r4v0 'rdmstr' java.lang.String), (r4v2 'rdmstr' java.lang.String) binds: [B:5:0x000b, B:8:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x0013\-\>B:8:0x002f\l|l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|lif (r4.length() \< r13) goto L23l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|LOOP_END\lLOOP:1: B:6:0x0013\-\>B:8:0x002f\l|ljava.lang.String r4 = new java.lang.StringBuilder(java.lang.String.valueOf(r4)).append(getRan(10)).toString()l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|SYNTHETIC\l|l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|RETURN\l|lreturn new java.lang.StringBuilder(java.lang.String.valueOf(r5)).append(r4).toString()l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{public static java.lang.String com.uc.paymentsdk.util.Utils.createARanSessionid((r13v0 'number' int A[D('number' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:8:0x002f \-\> B:6:0x0013, BACK_EDGE: B:3:0x002b \-\> B:2:0x0009\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_2;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

