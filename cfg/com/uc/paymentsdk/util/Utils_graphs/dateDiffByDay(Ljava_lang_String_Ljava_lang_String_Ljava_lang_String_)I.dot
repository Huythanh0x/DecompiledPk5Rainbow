digraph "CFG forcom.uc.paymentsdk.util.Utils.dateDiffByDay(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|ljava.text.SimpleDateFormat r7 = new java.text.SimpleDateFormat(r14)l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x001e, blocks: (B:3:0x0008), top: B:2:0x0008 \}\lCatch: Exception \-\> 0x001e\l|llong r2 = r7.parse(r13).getTime() \- r7.parse(r12).getTime()     \/\/ Catch: java.lang.Exception \-\> L1ellong r0 = r2 \/ 86400000     \/\/ Catch: java.lang.Exception \-\> L1el}"];
Node_4 [shape=record,label="{4\:\ 0x001c|l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|RETURN\lORIG_RETURN\l|lreturn (int) r0l}"];
Node_6 [shape=record,label="{6\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|ExcHandler: Exception \-\> 0x001e\l|l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|lreturn \-1l}"];
MethodNode[shape=record,label="{public static int com.uc.paymentsdk.util.Utils.dateDiffByDay((r12v0 'starttime' java.lang.String A[D('starttime' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'endtime' java.lang.String A[D('endtime' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'format' java.lang.String A[D('format' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x001e, blocks: (B:3:0x0008), top: B:2:0x0008 \}\lCROSS_EDGE: B:9:0x001f \-\> B:5:0x001d, CROSS_EDGE: B:2:0x0008 \-\> B:8:0x001e\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_6;
}

