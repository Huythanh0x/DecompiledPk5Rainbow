digraph "CFG fordm.Ms.create3Array([B)[[[B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lint r2 = dm.Ms.skipldm.Ms.skip = r2 + 1lbyte[][][] r0 = new byte[getLen_byte(r5[r2])][]lr1 = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|LOOP_START\lPHI: r1l  0x000f: PHI (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:1:0x0000, B:4:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x000f\-\>B:4:0x0013\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|lif (r1 \< r0.length) goto L14l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|LOOP_END\lLOOP:0: B:2:0x000f\-\>B:4:0x0013\l|lr0[r1] = create2Array(r5)lint r1 = r1 + 1l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|lreturn r0l}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{public byte[][][] dm.Ms.create3Array((r4v0 'this' dm.Ms A[IMMUTABLE_TYPE, THIS]), (r5v0 'data' byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:4:0x0013 \-\> B:2:0x000f\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_2;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

