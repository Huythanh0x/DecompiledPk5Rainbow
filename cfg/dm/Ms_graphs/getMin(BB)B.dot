digraph "CFG fordm.Ms.getMin(BB)B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lif (r2 \<= r3) goto L12l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|RETURN\lORIG_RETURN\l|lreturn r3l}"];
Node_4 [shape=record,label="{4\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x0004|l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|lreturn r2l}"];
MethodNode[shape=record,label="{public byte dm.Ms.getMin((r1v0 'this' dm.Ms A[IMMUTABLE_TYPE, THIS]), (r2v0 'i0' byte A[D('i0' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'i1' byte A[D('i1' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:5:0x0004 \-\> B:3:0x0003\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_4;
}

