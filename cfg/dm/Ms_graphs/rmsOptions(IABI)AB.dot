digraph "CFG fordm.Ms.rmsOptions(I[BI)[B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|lif (dm.Ms.rms != null) goto L41l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|ldm.Ms.rms = javax.microedition.rms.RecordStore.openRecordStore(main.Constants_H.RMS_NAME, true)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_6 [shape=record,label="{6\:\ 0x000f|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|lif (dm.Ms.rms.getNumRecords() != 0) goto L44l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|lsetRmsInit(true)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_9 [shape=record,label="{9\:\ 0x001b|lif (r8 == 0) goto L51l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|lif (r8 != 1) goto L48l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|RETURN\lORIG_RETURN\l|lreturn dm.Ms.rms.getRecord(r6)l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|lif (r8 != 2) goto L52l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|ldm.Ms.rms.setRecord(r6, r7, 0, r7.length)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_17 [shape=record,label="{17\:\ 0x0033|l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|lif (r8 != 3) goto L58l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|lsetRmsInit(false)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_20 [shape=record,label="{20\:\ 0x0041|l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|lif (r8 != 4) goto L63l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|lif (dm.Ms.rms == null) goto L51l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|ldm.Ms.rms.closeRecordStore()     \/\/ Catch: java.lang.Exception \-\> L3bldm.Ms.rms = null     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_25 [shape=record,label="{25\:\ 0x0051|l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|lif (r8 != 5) goto L51l}"];
Node_27 [shape=record,label="{27\:\ 0x0054|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|landroid.util.Log.e(\"rms.getSizeAvailable() = \", new java.lang.StringBuilder().append(dm.Ms.rms.getSizeAvailable()).toString())     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_28 [shape=record,label="{28\:\ 0x006c|l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|lreturn nulll}"];
Node_30 [shape=record,label="{30\:\ 0x0031|l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|lreturn nulll}"];
Node_32 [shape=record,label="{32\:\ 0x003b|ExcHandler: Exception \-\> 0x003b\l|ljava.lang.Exception r1 = move\-exceptionl}"];
Node_33 [shape=record,label="{33\:\ 0x003c|lr1.printStackTrace()l}"];
MethodNode[shape=record,label="{public byte[] dm.Ms.rmsOptions((r5v0 'this' dm.Ms A[IMMUTABLE_TYPE, THIS]), (r6v0 'recordId' int A[D('recordId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'info' byte[] A[D('info' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'flag' int A[D('flag' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCROSS_EDGE: B:30:0x0031 \-\> B:12:0x0026, CROSS_EDGE: B:19:0x0036 \-\> B:30:0x0031, CROSS_EDGE: B:23:0x0046 \-\> B:30:0x0031, CROSS_EDGE: B:24:0x0048 \-\> B:30:0x0031, CROSS_EDGE: B:26:0x0052 \-\> B:30:0x0031, CROSS_EDGE: B:28:0x006c \-\> B:12:0x0026, CROSS_EDGE: B:9:0x001b \-\> B:30:0x0031, CROSS_EDGE: B:7:0x0015 \-\> B:9:0x001b, CROSS_EDGE: B:4:0x0004 \-\> B:6:0x000f, CROSS_EDGE: B:33:0x003c \-\> B:30:0x0031\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_32;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_30;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_30;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_30;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_30;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_13;
Node_30 -> Node_31;
Node_31 -> Node_13;
Node_32 -> Node_33;
Node_33 -> Node_30;
}

