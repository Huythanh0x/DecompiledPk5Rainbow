digraph "CFG fordm.Ms.rmsOptions(I[BI)[B" {
subgraph cluster_Region_1056391042 {
label = "R(2:(3:(1:5)|(1:8)|(1:(2:(1:12)|(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29))))))))|31)";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1681503140 {
label = "Try: R(3:(1:5)|(1:8)|(1:(2:(1:12)|(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29)))))))) catches: R(2:32|33)";
node [shape=record,color=blue];
subgraph cluster_Region_136409941 {
label = "R(3:(1:5)|(1:8)|(1:(2:(1:12)|(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_339479727 {
label = "IF [B:4:0x0004] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|lif (dm.Ms.rms == null) goto L40l}"];
subgraph cluster_Region_330312325 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0006|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|ldm.Ms.rms = javax.microedition.rms.RecordStore.openRecordStore(main.Constants_H.RMS_NAME, true)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
}
}
subgraph cluster_IfRegion_985468868 {
label = "IF [B:7:0x0015] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|lif (dm.Ms.rms.getNumRecords() == 0) goto L43l}"];
subgraph cluster_Region_965044253 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|lsetRmsInit(true)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
}
}
subgraph cluster_IfRegion_1294488310 {
label = "IF [B:9:0x001b] THEN: R(1:(2:(1:12)|(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29))))))) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001b|lif (r8 != 0) goto L45l}"];
subgraph cluster_Region_1608433108 {
label = "R(1:(2:(1:12)|(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_231692996 {
label = "R(2:(1:12)|(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_530058976 {
label = "IF [B:10:0x001d] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001d|lif (r8 == 1) goto L46l}"];
subgraph cluster_Region_271077383 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0026|RETURN\lORIG_RETURN\l|lreturn dm.Ms.rms.getRecord(r6)l}"];
}
}
subgraph cluster_Region_984776651 {
label = "R(1:(1:16)(1:(1:19)(1:(1:(1:24))(1:(2:27|29)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1297877795 {
label = "IF [B:15:0x0028] THEN: R(1:16) ELSE: R(1:(1:19)(1:(1:(1:24))(1:(2:27|29))))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0028|lif (r8 == 2) goto L50l}"];
subgraph cluster_Region_309125990 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002a|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|ldm.Ms.rms.setRecord(r6, r7, 0, r7.length)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
}
subgraph cluster_Region_1083584836 {
label = "R(1:(1:19)(1:(1:(1:24))(1:(2:27|29)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1777550010 {
label = "IF [B:18:0x0034] THEN: R(1:19) ELSE: R(1:(1:(1:24))(1:(2:27|29))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0034|lif (r8 == 3) goto L54l}"];
subgraph cluster_Region_1146833332 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0036|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|lsetRmsInit(false)     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
}
subgraph cluster_Region_836363658 {
label = "R(1:(1:(1:24))(1:(2:27|29))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1085603556 {
label = "IF [B:21:0x0042] THEN: R(1:(1:24)) ELSE: R(1:(2:27|29)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|lif (r8 == 4) goto L60l}"];
subgraph cluster_Region_857838298 {
label = "R(1:(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_766082019 {
label = "IF [B:23:0x0046] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0046|lif (dm.Ms.rms != null) goto L62l}"];
subgraph cluster_Region_1394753129 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0048|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|ldm.Ms.rms.closeRecordStore()     \/\/ Catch: java.lang.Exception \-\> L3bldm.Ms.rms = null     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
}
}
}
subgraph cluster_Region_872851767 {
label = "R(1:(2:27|29)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_185489967 {
label = "IF [B:26:0x0052] THEN: R(2:27|29) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0052|lif (r8 == 5) goto L65l}"];
subgraph cluster_Region_1830706894 {
label = "R(2:27|29)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0054|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|landroid.util.Log.e(\"rms.getSizeAvailable() = \", new java.lang.StringBuilder().append(dm.Ms.rms.getSizeAvailable()).toString())     \/\/ Catch: java.lang.Exception \-\> L3bl}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|lreturn nulll}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_797828210 {
label = "R(2:32|33) | ExcHandler: Exception \-\> 0x003b\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x003b|ExcHandler: Exception \-\> 0x003b\l|l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|lr1.printStackTrace()l}"];
}
}
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|lreturn nulll}"];
}
subgraph cluster_Region_797828210 {
label = "R(2:32|33) | ExcHandler: Exception \-\> 0x003b\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x003b|ExcHandler: Exception \-\> 0x003b\l|l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|lr1.printStackTrace()l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0002|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001f|TryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0027|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0033|l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0041|l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0044|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCatch: Exception \-\> 0x003b\l|l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0051|l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x006c|l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0031|l}"];
MethodNode[shape=record,label="{public byte[] dm.Ms.rmsOptions((r5v0 'this' dm.Ms A[IMMUTABLE_TYPE, THIS]), (r6v0 'recordId' int A[D('recordId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'info' byte[] A[D('info' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'flag' int A[D('flag' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{l DEBUG: l \-\> TODO: convert one arg to string using `String.valueOf()`, args: (wrap:int:INVOKE)\}\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x003b, blocks: (B:3:0x0002, B:5:0x0006, B:6:0x000f, B:8:0x0017, B:11:0x001f, B:16:0x002a, B:19:0x0036, B:22:0x0044, B:24:0x0048, B:27:0x0054), top: B:2:0x0002 \}\lCROSS_EDGE: B:30:0x0031 \-\> B:12:0x0026, CROSS_EDGE: B:19:0x0036 \-\> B:30:0x0031, CROSS_EDGE: B:23:0x0046 \-\> B:30:0x0031, CROSS_EDGE: B:24:0x0048 \-\> B:30:0x0031, CROSS_EDGE: B:26:0x0052 \-\> B:30:0x0031, CROSS_EDGE: B:28:0x006c \-\> B:12:0x0026, CROSS_EDGE: B:9:0x001b \-\> B:30:0x0031, CROSS_EDGE: B:7:0x0015 \-\> B:9:0x001b, CROSS_EDGE: B:4:0x0004 \-\> B:6:0x000f, CROSS_EDGE: B:33:0x003c \-\> B:30:0x0031\l}"];
MethodNode -> Node_0;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_30[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_30;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_21 -> Node_22;
Node_21 -> Node_25[style=dashed];
Node_23 -> Node_30[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_30;
Node_26 -> Node_30[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_13;
Node_32 -> Node_33;
Node_33 -> Node_30;
Node_31 -> Node_13;
Node_32 -> Node_33;
Node_33 -> Node_30;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_32;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

