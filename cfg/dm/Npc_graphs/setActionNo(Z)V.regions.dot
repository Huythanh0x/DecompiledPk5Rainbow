digraph "CFG fordm.Npc.setActionNo(Z)V" {
subgraph cluster_Region_1589142286 {
label = "R(1:(1:(2:(1:10)(1:(1:19)(1:23))|11)))";
node [shape=record,color=blue];
subgraph cluster_Region_403406526 {
label = "R(1:(2:(1:10)(1:(1:19)(1:23))|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_365194827 {
label = "IF [B:2:0x0005] THEN: R(2:(1:10)(1:(1:19)(1:23))|11) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|lif (r4.bdir == false) goto L30l}"];
subgraph cluster_Region_1934345168 {
label = "R(2:(1:10)(1:(1:19)(1:23))|11)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1300109560 {
label = "IF [B:6:0x000a] THEN: R(1:10) ELSE: R(1:(1:19)(1:23))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|lif (r4.dir == 2) goto L32l}"];
subgraph cluster_Region_1346609738 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0011|PHI: r1l  0x0011: PHI (r1v10 byte A[IMMUTABLE_TYPE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr4.other[7] = r5 ? (byte) 3 : (byte) 0l}"];
}
subgraph cluster_Region_335464562 {
label = "R(1:(1:19)(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_637426288 {
label = "IF [B:15:0x0024] THEN: R(1:19) ELSE: R(1:23) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0024|lif (r4.dir == 1) goto L40l}"];
subgraph cluster_Region_419053551 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x002b|PHI: r1l  0x002b: PHI (r1 I:byte A[IMMUTABLE_TYPE]) = (r1v5 byte) binds: [B:18:0x002a] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|lr4.other[7] = r5 ? (byte) 4 : (byte) 1l}"];
}
subgraph cluster_Region_1432784712 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0033|PHI: r1l  0x0033: PHI (r1v2 byte A[IMMUTABLE_TYPE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr4.other[7] = r5 ? (byte) 5 : (byte) 2l}"];
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0013|lbyte[] byte[] r0 = r4.otherlr0[7] = (byte) (r0[7] + (r4.npc_num * 6))l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007|ORIG_RETURN\l|l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0008|l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000c|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000e|l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0010|l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0020|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0022|l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0026|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0028|l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x002a|l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x002e|l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0030|l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0032|l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0036|l}"];
MethodNode[shape=record,label="{public void dm.Npc.setActionNo((r4v0 'this' dm.Npc A[IMMUTABLE_TYPE, THIS]), (r5v0 'mode' boolean A[D('mode' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:11:0x0013 \-\> B:3:0x0007, CROSS_EDGE: B:13:0x0020 \-\> B:10:0x0011, CROSS_EDGE: B:19:0x002b \-\> B:11:0x0013, CROSS_EDGE: B:17:0x0028 \-\> B:19:0x002b, CROSS_EDGE: B:23:0x0033 \-\> B:11:0x0013, CROSS_EDGE: B:24:0x0036 \-\> B:23:0x0033\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_14[style=dashed];
Node_10 -> Node_11;
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_19 -> Node_11;
Node_23 -> Node_11;
Node_11 -> Node_12;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_12 -> Node_4;
Node_13 -> Node_10;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_23;
}

