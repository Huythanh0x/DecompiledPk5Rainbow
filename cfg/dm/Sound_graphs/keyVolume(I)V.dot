digraph "CFG fordm.Sound.keyVolume(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|lif (r6 != 0) goto L35l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|lbyte r0 = (byte) (r5.volume + 30)lr5.volume = r0l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|lif (r0 \<= 90) goto L31l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|lr5.volume = 0l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|lif (r5.volume != 0) goto L46l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|lr5.sound_on = falselsoundStop()l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|lr5.sound_on = truel}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_13 [shape=record,label="{13\:\ 0x001b|lif (r6 != 1) goto L31l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|lif (dm.Ms.i().key_Right() == false) goto L31l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|lbyte r0 = (byte) (r5.volume + 30)lr5.volume = r0l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|lif (r0 \<= 90) goto L41l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|lr5.volume = 0l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|lif (dm.Ms.i().key_Left() == false) goto L31l}"];
Node_21 [shape=record,label="{21\:\ 0x003d|lbyte r0 = (byte) (r5.volume \- 30)lr5.volume = r0l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|lif (r0 \>= 0) goto L31l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|lr5.volume = 90l}"];
MethodNode[shape=record,label="{public void dm.Sound.keyVolume((r5v0 'this' dm.Sound A[IMMUTABLE_TYPE, THIS]), (r6v0 'mode' int A[D('mode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:11:0x004a \-\> B:9:0x001a, CROSS_EDGE: B:4:0x000d \-\> B:6:0x0011, CROSS_EDGE: B:13:0x001b \-\> B:6:0x0011, CROSS_EDGE: B:15:0x0025 \-\> B:6:0x0011, CROSS_EDGE: B:18:0x0030 \-\> B:6:0x0011, CROSS_EDGE: B:20:0x003b \-\> B:6:0x0011, CROSS_EDGE: B:22:0x0045 \-\> B:6:0x0011, CROSS_EDGE: B:23:0x0047 \-\> B:6:0x0011\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_10;
Node_13 -> Node_6;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_6;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_6;
Node_19 -> Node_20;
Node_20 -> Node_6;
Node_20 -> Node_21[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_6;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_6;
}

