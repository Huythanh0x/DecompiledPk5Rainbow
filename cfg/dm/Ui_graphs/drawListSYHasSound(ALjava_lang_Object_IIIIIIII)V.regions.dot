digraph "CFG fordm.Ui.drawListSYHasSound([Ljava\/lang\/Object;IIIIIIII)V" {
subgraph cluster_Region_1017155847 {
label = "R(2:1|(1:10))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|lbyte r7 = 0l}"];
subgraph cluster_LoopRegion_674833958 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|ADDED_TO_REGION\l|lif (r7 \< r9.length) goto L23l}"];
subgraph cluster_Region_232480908 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0028|LOOP_END\lPHI: r5l  0x0028: PHI (r5v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0001\-\>B:10:0x0028\l|ldrawString(r9[r7].toString(), r10 + (r12 \>\> 1), (r7 * r13) + r11 + 2, r9[r7].toString().equals(main.Constants_H.PAUSE_TXT_6) ? 20 : 17, r7 == r14 ? r15 : r16, r17)lbyte r7 = (byte) (r7 + 1)l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0001|LOOP_START\lPHI: r7l  0x0001: PHI (r7v1 'd' byte) = (r7v0 'd' byte), (r7v2 'd' byte) binds: [B:1:0x0000, B:10:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0001\-\>B:10:0x0028\l|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0020|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0022|l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0025|PHI: r4l  0x0025: PHI (r4v2 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0027|l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0028|SYNTHETIC\l|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0036|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0028|SYNTHETIC\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0032|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004|SYNTHETIC\l|l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0004|l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{public void dm.Ui.drawListSYHasSound((r8v0 'this' dm.Ui A[IMMUTABLE_TYPE, THIS]), (r9v0 'menu' java.lang.Object[] A[D('menu' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'w' int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'sh' int A[D('sh' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'sel' int A[D('sel' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'c0' int A[D('c0' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'c1' int A[D('c1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'strT' int A[D('strT' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:10:0x0028 \-\> B:2:0x0001, CROSS_EDGE: B:11:0x0036 \-\> B:10:0x0028, CROSS_EDGE: B:13:0x0032 \-\> B:7:0x0025\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_14[style=dashed];
Node_10 -> Node_2;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_10;
Node_13 -> Node_7;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

