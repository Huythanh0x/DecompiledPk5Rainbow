digraph "CFG forjavax.microedition.lcdui.Graphics.drawImage(Ljavax\/microedition\/lcdui\/Image;III)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|lif ((r9 & 8) == 0) goto L26l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|lint r7 = r7 \- r6.getWidth()l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r7l  0x0009: PHI (r7v2 'x' int) = (r7v0 'x' int), (r7v1 'x' int), (r7v3 'x' int) binds: [B:14:0x0024, B:15:0x0026, B:3:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|lif ((r9 & 32) == 0) goto L29l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|lint r8 = r8 \- r6.getHeight()l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|PHI: r8l  0x0012: PHI (r8v2 'y' int) = (r8v0 'y' int), (r8v1 'y' int), (r8v3 'y' int) binds: [B:11:0x0030, B:12:0x0032, B:6:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|lr5.canvas.drawBitmap(r6.getBitMapInpackage(), (float) r7, (float) r8, r5.font.tmpPaint)l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|RETURN\l|lreturnl}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|lif ((r9 & 2) == 0) goto L24l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|lint r8 = r8 \- (r6.getHeight() \/ 2)l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|lif ((r9 & 1) == 0) goto L21l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|lint r7 = r7 \- (r6.getWidth() \/ 2)l}"];
MethodNode[shape=record,label="{public void javax.microedition.lcdui.Graphics.drawImage((r5v0 'this' javax.microedition.lcdui.Graphics A[IMMUTABLE_TYPE, THIS]), (r6v0 'img' javax.microedition.lcdui.Image A[D('img' javax.microedition.lcdui.Image), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'anchor' int A[D('anchor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:11:0x0030 \-\> B:7:0x0012, CROSS_EDGE: B:12:0x0032 \-\> B:7:0x0012, CROSS_EDGE: B:14:0x0024 \-\> B:4:0x0009, CROSS_EDGE: B:15:0x0026 \-\> B:4:0x0009\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_7;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_7;
Node_13 -> Node_14;
Node_14 -> Node_4;
Node_14 -> Node_15[style=dashed];
Node_15 -> Node_4;
}

