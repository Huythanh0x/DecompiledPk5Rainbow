digraph "CFG forjavax.microedition.lcdui.Graphics.drawString(Ljava\/lang\/String;III)V" {
subgraph cluster_Region_2144903159 {
label = "R(5:1|(1:3)|(1:6)(1:(1:21)(1:(1:24)))|(1:9)(1:(1:15)(1:(1:18)))|10)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|lint int r7 = r7 \- 5l}"];
subgraph cluster_IfRegion_1761560835 {
label = "IF [B:2:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0002|lif (r8 == 0) goto L29l}"];
subgraph cluster_Region_1199297391 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|lr8 = 20l}"];
}
}
subgraph cluster_IfRegion_1341159212 {
label = "IF [B:5:0x0008] THEN: R(1:6) ELSE: R(1:(1:21)(1:(1:24)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|lif ((r8 & 16) != 0) goto L32l}"];
subgraph cluster_Region_377392936 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|lr7 \-= r4.font.getMetricsInt().topl}"];
}
subgraph cluster_Region_1598507326 {
label = "R(1:(1:21)(1:(1:24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1298314372 {
label = "IF [B:20:0x002e] THEN: R(1:21) ELSE: R(1:(1:24)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x002e|lif ((r8 & 32) != 0) goto L40l}"];
subgraph cluster_Region_725567451 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0030|lr7 \-= r4.font.getMetricsInt().bottoml}"];
}
subgraph cluster_Region_1411118828 {
label = "R(1:(1:24)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_404664916 {
label = "IF [B:23:0x003c] THEN: R(1:24) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x003c|lif ((r8 & 2) != 0) goto L43l}"];
subgraph cluster_Region_579979743 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x003e|lr7 += ((r4.font.getMetricsInt().descent \- r4.font.getMetricsInt().ascent) \/ 2) \- r4.font.getMetricsInt().descentl}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_2113214160 {
label = "IF [B:8:0x0015] THEN: R(1:9) ELSE: R(1:(1:15)(1:(1:18)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|lif ((r8 & 1) != 0) goto L35l}"];
subgraph cluster_Region_627788670 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0017|lr4.font.tmpPaint.setTextAlign(android.graphics.Paint.Align.CENTER)l}"];
}
subgraph cluster_Region_785151401 {
label = "R(1:(1:15)(1:(1:18))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1127083574 {
label = "IF [B:14:0x005e] THEN: R(1:15) ELSE: R(1:(1:18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x005e|lif ((r8 & 8) != 0) goto L46l}"];
subgraph cluster_Region_381367061 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0060|lr4.font.tmpPaint.setTextAlign(android.graphics.Paint.Align.RIGHT)l}"];
}
subgraph cluster_Region_1777641991 {
label = "R(1:(1:18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_618195885 {
label = "IF [B:17:0x006c] THEN: R(1:18) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x006c|lif ((r8 & 4) != 0) goto L49l}"];
subgraph cluster_Region_145292638 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x006e|lr4.font.tmpPaint.setTextAlign(android.graphics.Paint.Align.LEFT)l}"];
}
}
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x0020|lr4.canvas.drawText(r5, r6, r7, r4.font.tmpPaint)l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006|PHI: r8l  0x0006: PHI (r8v1 'anchor' int) = (r8v0 'anchor' int), (r8v2 'anchor' int) binds: [B:2:0x0002, B:3:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013|PHI: r7l  0x0013: PHI (r7v4 'y' int) = (r7v1 'y' int), (r7v2 'y' int), (r7v3 'y' int), (r7v5 'y' int) binds: [B:23:0x003c, B:24:0x003e, B:21:0x0030, B:6:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002b|l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x005c|l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x006a|l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x002c|l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003a|l}"];
MethodNode[shape=record,label="{public void javax.microedition.lcdui.Graphics.drawString((r4v0 'this' javax.microedition.lcdui.Graphics A[IMMUTABLE_TYPE, THIS]), (r5v0 'str' java.lang.String A[D('str' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'anchor' int A[D('anchor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:15:0x0060 \-\> B:10:0x0020, CROSS_EDGE: B:17:0x006c \-\> B:10:0x0020, CROSS_EDGE: B:18:0x006e \-\> B:10:0x0020, CROSS_EDGE: B:21:0x0030 \-\> B:7:0x0013, CROSS_EDGE: B:23:0x003c \-\> B:7:0x0013, CROSS_EDGE: B:24:0x003e \-\> B:7:0x0013, CROSS_EDGE: B:2:0x0002 \-\> B:4:0x0006\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_19[style=dashed];
Node_6 -> Node_7;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_7;
Node_23 -> Node_7[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_13[style=dashed];
Node_9 -> Node_10;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_10;
Node_17 -> Node_10[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_10;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_22 -> Node_23;
}

