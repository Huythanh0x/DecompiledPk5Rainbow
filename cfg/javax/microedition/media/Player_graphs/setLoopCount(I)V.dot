digraph "CFG forjavax.microedition.media.Player.setLoopCount(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|lif (r3.state != 400) goto L22l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|lthrow new java.lang.IllegalStateException(\"player is close\")l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|lif (r4 != 0) goto L25l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|lthrow new java.lang.IllegalArgumentException(\"loopcount is 0\")l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|lif (r4 == (\-1)) goto L28l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|lif (r4 \<= 1) goto L30l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|landroid.util.Log.e(\"Player\", \"Loop count \< \-1\")l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_14 [shape=record,label="{14\:\ 0x001e|lr3.mp.setLooping(true)lr3.loopCount = r4l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|RETURN\lORIG_RETURN\l|lreturnl}"];
MethodNode[shape=record,label="{public void javax.microedition.media.Player.setLoopCount((r3v0 'this' javax.microedition.media.Player A[IMMUTABLE_TYPE, THIS]), (r4v0 'count' int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/lang\/IllegalArgumentException;, Ljava\/lang\/IllegalStateException;]\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:8:0x0018 \-\> B:5:?, CROSS_EDGE: B:15:0x0025 \-\> B:5:?, CROSS_EDGE: B:12:0x0026 \-\> B:15:0x0025, CROSS_EDGE: B:10:0x001a \-\> B:14:0x001e\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_14[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_5;
Node_14 -> Node_15;
Node_15 -> Node_5;
}

