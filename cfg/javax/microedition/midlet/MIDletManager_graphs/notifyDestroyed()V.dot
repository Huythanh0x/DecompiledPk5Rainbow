digraph "CFG forjavax.microedition.midlet.MIDletManager.notifyDestroyed()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|lif (r3.currentMidlet == null) goto L22l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|lif (r3.destroyed != false) goto L22l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|lr3.destroyed = truel}"];
Node_6 [shape=record,label="{6\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{MIDletStateChangeException \-\> 0x001c, blocks: (B:7:0x000b), top: B:6:0x000b \}\lCatch: MIDletStateChangeException \-\> 0x001c\l|lr3.currentMidlet.destroyApp(true)     \/\/ Catch: javax.microedition.midlet.MIDletStateChangeException \-\> L1cl}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l|l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|ExcHandler: MIDletStateChangeException \-\> 0x001c\l|ljavax.microedition.midlet.MIDletStateChangeException r1 = move\-exceptionl}"];
Node_10 [shape=record,label="{10\:\ 0x001d|lr1.printStackTrace()l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|lr3.jad.clear()lr3.midlets.clear()l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|RETURN\l|lreturnl}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{public final void javax.microedition.midlet.MIDletManager.notifyDestroyed((r3v0 'this' javax.microedition.midlet.MIDletManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lTryCatch #0 \{MIDletStateChangeException \-\> 0x001c, blocks: (B:7:0x000b), top: B:6:0x000b \}\lCROSS_EDGE: B:10:0x001d \-\> B:11:0x0011, CROSS_EDGE: B:6:0x000b \-\> B:9:0x001c, CROSS_EDGE: B:4:0x0007 \-\> B:11:0x0011, CROSS_EDGE: B:2:0x0003 \-\> B:11:0x0011\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

