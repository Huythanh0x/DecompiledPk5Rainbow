digraph "CFG formain.GameRun_F.loadMon(I[[B)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lr8.info = dm.Ms.i().rmsOptions(r9 + 8, null, 1)lr2 = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|lif (r9 != 0) goto L48l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|lr8.cMonsters = new dm.Monster[95]     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_6 [shape=record,label="{6\:\ 0x001d|lif (r8.info[0] != (\-1)) goto L40l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|TryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|lr8.cMon_count = 0     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_8 [shape=record,label="{8\:\ 0x0022|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|TryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|ljava.io.ByteArrayInputStream r0 = new java.io.ByteArrayInputStream(r8.info)     \/\/ Catch: java.lang.Exception \-\> L3dlr8.cMon_count = (byte) r0.read()     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_11 [shape=record,label="{11\:\ 0x0031|LOOP_START\lPHI: r2l  0x0031: PHI (r2v3 'i' int) = (r2v0 'i' int), (r2v4 'i' int) binds: [B:10:0x0023, B:13:0x0043] A[DONT_GENERATE, DONT_INLINE]\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\lLOOP:0: B:11:0x0031\-\>B:13:0x0043\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|lif (r2 \< r8.cMon_count) goto L47l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|TRY_ENTER\lLOOP_END\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\lLOOP:0: B:11:0x0031\-\>B:13:0x0043\l|lr8.cMonsters[r2] = new dm.Monster()     \/\/ Catch: java.lang.Exception \-\> L3dlloadMon(r0, r8.cMonsters[r2], r10)     \/\/ Catch: java.lang.Exception \-\> L3dlint r2 = r2 + 1     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_14 [shape=record,label="{14\:\ 0x0035|SYNTHETIC\l|l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|TRY_LEAVE\lPHI: r0l  0x0035: PHI (r0v1 'byteArray' java.io.ByteArrayInputStream) = (r0v0 'byteArray' java.io.ByteArrayInputStream), (r0v3 'byteArray' java.io.ByteArrayInputStream) binds: [B:26:0x0035, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|lr0.close()     \/\/ Catch: java.lang.Exception \-\> L3dlr8.info = null     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_17 [shape=record,label="{17\:\ 0x0056|TryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|lr8.myMonsters = new dm.Monster[5]     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_18 [shape=record,label="{18\:\ 0x0060|lif (r8.info[0] != (\-1)) goto L51l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|TryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|lr8.myMon_length = 0     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_21 [shape=record,label="{21\:\ 0x0066|TryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|ljava.io.ByteArrayInputStream r0 = new java.io.ByteArrayInputStream(r8.info)     \/\/ Catch: java.lang.Exception \-\> L3dlr8.myMon_length = (byte) r0.read()     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_22 [shape=record,label="{22\:\ 0x0074|LOOP_START\lPHI: r2l  0x0074: PHI (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:21:0x0066, B:25:0x0088] A[DONT_GENERATE, DONT_INLINE]\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\lLOOP:1: B:22:0x0074\-\>B:25:0x0088\l|l}"];
Node_23 [shape=record,label="{23\:\ 0x0076|lif (r2 \>= r8.myMon_length) goto L58l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCatch: Exception \-\> 0x003d\l|lr8.myMonsters[r2] = new dm.Monster()     \/\/ Catch: java.lang.Exception \-\> L3dlloadMon(r0, r8.myMonsters[r2], r10)     \/\/ Catch: java.lang.Exception \-\> L3dl}"];
Node_25 [shape=record,label="{25\:\ 0x0088|LOOP_END\lLOOP:1: B:22:0x0074\-\>B:25:0x0088\l|lint r2 = r2 + 1l}"];
Node_26 [shape=record,label="{26\:\ 0x0035|SYNTHETIC\l|l}"];
Node_27 [shape=record,label="{27\:\ 0x003d|ExcHandler: Exception \-\> 0x003d\l|ljava.lang.Exception r3 = move\-exceptionl}"];
Node_28 [shape=record,label="{28\:\ 0x003e|lr3.printStackTrace()l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{public void main.GameRun_F.loadMon((r8v0 'this' main.GameRun_F A[IMMUTABLE_TYPE, THIS]), (r9v0 'flag' int A[D('flag' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'data' byte[][] A[D('data' byte[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x003d, blocks: (B:5:0x0014, B:7:0x001f, B:10:0x0023, B:11:0x0031, B:15:0x0035, B:13:0x0043, B:17:0x0056, B:19:0x0062, B:21:0x0066, B:22:0x0074, B:24:0x0078), top: B:2:0x0010 \}\lCROSS_EDGE: B:15:0x0035 \-\> B:8:0x0022, BACK_EDGE: B:13:0x0043 \-\> B:11:0x0031, CROSS_EDGE: B:19:0x0062 \-\> B:8:0x0022, CROSS_EDGE: B:23:0x0076 \-\> B:15:0x0035, BACK_EDGE: B:25:0x0088 \-\> B:22:0x0074, CROSS_EDGE: B:28:0x003e \-\> B:8:0x0022\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_27;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_9;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_9;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_22;
Node_26 -> Node_15;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_9;
}

