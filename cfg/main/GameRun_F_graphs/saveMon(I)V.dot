digraph "CFG formain.GameRun_F.saveMon(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|ljava.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream()lr2 = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|lif (r8 != 0) goto L36l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\l|lr0.write(r7.cMon_count)     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_START\lPHI: r2l  0x000d: PHI (r2v3 'i' int) = (r2v0 'i' int), (r2v4 'i' int) binds: [B:4:0x0008, B:7:0x0024] A[DONT_GENERATE, DONT_INLINE]\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\lLOOP:0: B:5:0x000d\-\>B:7:0x0024\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|lif (r2 \< r7.cMon_count) goto L35l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|LOOP_END\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\lLOOP:0: B:5:0x000d\-\>B:7:0x0024\l|lsaveMon(r0, r7.cMonsters[r2])     \/\/ Catch: java.lang.Exception \-\> L46lint r2 = r2 + 1     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|SYNTHETIC\l|l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|TryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\l|ldm.Ms.i().rmsOptions(8, r0.toByteArray(), 2)     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|TryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\l|lr0.close()     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l|l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|TryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\l|lr0.write(r7.myMon_length)     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|LOOP_START\lPHI: r2l  0x0033: PHI (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:14:0x002e, B:18:0x0053] A[DONT_GENERATE, DONT_INLINE]\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\lLOOP:1: B:15:0x0033\-\>B:18:0x0053\l|l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|lif (r2 \< r7.myMon_length) goto L43l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\l|lsaveMon(r0, r7.myMonsters[r2])     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|LOOP_END\lLOOP:1: B:15:0x0033\-\>B:18:0x0053\l|lint r2 = r2 + 1l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|SYNTHETIC\l|l}"];
Node_20 [shape=record,label="{20\:\ 0x0037|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCatch: Exception \-\> 0x0046\l|ldm.Ms.i().rmsOptions(9, r0.toByteArray(), 2)     \/\/ Catch: java.lang.Exception \-\> L46l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|ExcHandler: Exception \-\> 0x0046\l|ljava.lang.Exception r3 = move\-exceptionl}"];
Node_22 [shape=record,label="{22\:\ 0x0047|lr3.printStackTrace()l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{public void main.GameRun_F.saveMon((r7v0 'this' main.GameRun_F A[IMMUTABLE_TYPE, THIS]), (r8v0 'flag' int A[D('flag' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0046, blocks: (B:4:0x0008, B:5:0x000d, B:9:0x0011, B:10:0x001f, B:7:0x0024, B:14:0x002e, B:15:0x0033, B:20:0x0037, B:17:0x004c), top: B:2:0x0006 \}\lCROSS_EDGE: B:22:0x0047 \-\> B:11:0x0023, BACK_EDGE: B:7:0x0024 \-\> B:5:0x000d, CROSS_EDGE: B:20:0x0037 \-\> B:10:0x001f, BACK_EDGE: B:18:0x0053 \-\> B:15:0x0033, CROSS_EDGE: B:2:0x0006 \-\> B:21:0x0046\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_21;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_10;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_12;
}

