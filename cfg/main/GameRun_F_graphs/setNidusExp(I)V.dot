digraph "CFG formain.GameRun_F.setNidusExp(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|lif ((r8 \/ 10) \>= 1) goto L29l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|lr8 = 1l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|PHI: r8l  0x0007: PHI (r8v2 'exp' int) = (r8v1 'exp' int), (r8v3 'exp' int) binds: [B:19:0x000c, B:3:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|lr0 = 0l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|LOOP_START\lPHI: r0l  0x0008: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v2 'i' byte) binds: [B:4:0x0007, B:13:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0008\-\>B:13:0x0017\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|lif (r0 \< 5) goto L30l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|lif (getRid(r0) != (\-2)) goto L33l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ldm.Ms.i().putShort(getNexp(r0, 1) + r8, r7.rmsNidus, (r0 * 5) + 1)l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|lif (getNexp(r0, 1) \<= getNexp(r0, 3)) goto L38l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|ldm.Ms.i().putShort(getNexp(r0, 3), r7.rmsNidus, (r0 * 5) + 1)l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|SYNTHETIC\l|l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|LOOP_END\lLOOP:0: B:5:0x0008\-\>B:13:0x0017\l|lbyte r0 = (byte) (r0 + 1)l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|SYNTHETIC\l|l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|SYNTHETIC\l|l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|SYNTHETIC\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|RETURN\l|lreturnl}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|lr8 = r8 \/ 10l}"];
MethodNode[shape=record,label="{public void main.GameRun_F.setNidusExp((r7v0 'this' main.GameRun_F A[IMMUTABLE_TYPE, THIS]), (r8v0 'exp' int A[D('exp' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:13:0x0017 \-\> B:5:0x0008, CROSS_EDGE: B:10:0x0035 \-\> B:13:0x0017, CROSS_EDGE: B:11:0x0037 \-\> B:13:0x0017, CROSS_EDGE: B:19:0x000c \-\> B:4:0x0007\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_16[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_5;
Node_14 -> Node_13;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_4;
}

