digraph "CFG formain.GameRun.aiEnemy()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lr3 = 5ldm.Ms.i()lbyte r1 = (byte) dm.Ms.getRandom(100)l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|LOOP_START\lPHI: r3l  0x0010: PHI (r3v1 'skill_num' byte) = (r3v0 'skill_num' byte), (r3v3 'skill_num' byte) binds: [B:1:0x0000, B:6:0x004c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0010\-\>B:6:0x004c\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|lif (r3 \<= (\-1)) goto L173l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|lif (r11.enB.getMon().monster[r3 + 8] == (\-1)) goto L106l}"];
Node_6 [shape=record,label="{6\:\ 0x004c|LOOP_END\lLOOP:0: B:2:0x0010\-\>B:6:0x004c\l|lbyte r3 = (byte) (r3 \- 1)l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|SYNTHETIC\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|lbyte r3 = (byte) (r3 + 1)l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|lif (r11.battle_type != 4) goto L126l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|lswitch(r3) \{l    case 1: goto L107;l    case 2: goto L108;l    case 3: goto L112;l    default: goto L101;l\}l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|lif (r1 \>= 45) goto L119l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|lbyte r5 = (byte) (r3 \- 1)lr11.enB.skill = r5l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|ldm.Battle r4 = r11.enBlr4.skill = r11.enB.getMon().monster[r11.enB.skill + 8]l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|RETURN\l|lreturnl}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x007a|l}"];
Node_18 [shape=record,label="{18\:\ 0x007c|lif (r1 \>= 75) goto L122l}"];
Node_19 [shape=record,label="{19\:\ 0x007e|lbyte r5 = (byte) (r3 \- 2)lr11.enB.skill = r5l}"];
Node_20 [shape=record,label="{20\:\ 0x0086|l}"];
Node_21 [shape=record,label="{21\:\ 0x0088|lif (r1 \>= 95) goto L125l}"];
Node_22 [shape=record,label="{22\:\ 0x008a|lbyte r5 = (byte) (r3 \- 3)lr11.enB.skill = r5l}"];
Node_23 [shape=record,label="{23\:\ 0x0092|lbyte r5 = (byte) (r3 \- 4)lr11.enB.skill = r5l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|lr11.enB.skill = 0l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|l}"];
Node_26 [shape=record,label="{26\:\ 0x0057|lif (r1 \>= 65) goto L111l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|lr11.enB.skill = 1l}"];
Node_28 [shape=record,label="{28\:\ 0x005e|lr11.enB.skill = 0l}"];
Node_29 [shape=record,label="{29\:\ 0x0063|l}"];
Node_30 [shape=record,label="{30\:\ 0x0065|lif (r1 \>= 45) goto L115l}"];
Node_31 [shape=record,label="{31\:\ 0x0067|lr11.enB.skill = 2l}"];
Node_32 [shape=record,label="{32\:\ 0x006c|l}"];
Node_33 [shape=record,label="{33\:\ 0x006e|lif (r1 \<= 75) goto L118l}"];
Node_34 [shape=record,label="{34\:\ 0x0070|lr11.enB.skill = 1l}"];
Node_35 [shape=record,label="{35\:\ 0x0075|lr11.enB.skill = 0l}"];
Node_36 [shape=record,label="{36\:\ 0x009a|lr0 = 0ldm.Ms.i()lbyte r2 = (byte) dm.Ms.getRandom(100)l}"];
Node_37 [shape=record,label="{37\:\ 0x00a5|LOOP_START\lPHI: r0l  0x00a5: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v2 'i' byte) binds: [B:36:0x009a, B:78:0x00c7] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:37:0x00a5\-\>B:78:0x00c7\l|lif (r0 \< 2) goto L133l}"];
Node_38 [shape=record,label="{38\:\ 0x00b8|l}"];
Node_39 [shape=record,label="{39\:\ 0x00c4|lswitch(r11.enB.getMon().monster[r0 + 14]) \{l    case 27: goto L136;l    case 28: goto L141;l    default: goto L177;l\}l}"];
Node_40 [shape=record,label="{40\:\ 0x00cb|l}"];
Node_41 [shape=record,label="{41\:\ 0x00d7|lif (isMonHp(r11.enB.getMon(), 50) == false) goto L178l}"];
Node_42 [shape=record,label="{42\:\ 0x00d9|l}"];
Node_43 [shape=record,label="{43\:\ 0x00db|lif (r2 \>= 30) goto L179l}"];
Node_44 [shape=record,label="{44\:\ 0x00dd|SYNTHETIC\l|l}"];
Node_45 [shape=record,label="{45\:\ 0x00dd|lbyte r5 = (byte) (r0 + 6)lr11.enB.skill = r5l}"];
Node_46 [shape=record,label="{46\:\ 0x00a7|lif (r0 \<= 1) goto L104l}"];
Node_47 [shape=record,label="{47\:\ 0x00a9|lswitch(r3) \{l    case 1: goto L146;l    case 2: goto L147;l    case 3: goto L151;l    case 4: goto L158;l    default: goto L130;l\}l}"];
Node_48 [shape=record,label="{48\:\ 0x00ac|l}"];
Node_49 [shape=record,label="{49\:\ 0x00ae|lif (r1 \>= 60) goto L165l}"];
Node_50 [shape=record,label="{50\:\ 0x00b0|lbyte r5 = (byte) (r3 \- 1)lr11.enB.skill = r5l}"];
Node_51 [shape=record,label="{51\:\ 0x0141|l}"];
Node_52 [shape=record,label="{52\:\ 0x0143|lif (r1 \>= 85) goto L168l}"];
Node_53 [shape=record,label="{53\:\ 0x0145|lbyte r5 = (byte) (r3 \- 2)lr11.enB.skill = r5l}"];
Node_54 [shape=record,label="{54\:\ 0x014e|l}"];
Node_55 [shape=record,label="{55\:\ 0x0150|lif (r1 \>= 95) goto L171l}"];
Node_56 [shape=record,label="{56\:\ 0x0152|lbyte r5 = (byte) (r3 \- 3)lr11.enB.skill = r5l}"];
Node_57 [shape=record,label="{57\:\ 0x015b|lbyte r5 = (byte) (r3 \- 4)lr11.enB.skill = r5l}"];
Node_58 [shape=record,label="{58\:\ 0x00f8|lr11.enB.skill = 0l}"];
Node_59 [shape=record,label="{59\:\ 0x00fe|l}"];
Node_60 [shape=record,label="{60\:\ 0x0100|lif (r1 \>= 20) goto L150l}"];
Node_61 [shape=record,label="{61\:\ 0x0102|lr11.enB.skill = 0l}"];
Node_62 [shape=record,label="{62\:\ 0x0108|lr11.enB.skill = 1l}"];
Node_63 [shape=record,label="{63\:\ 0x010e|l}"];
Node_64 [shape=record,label="{64\:\ 0x010f|lif (r1 \>= 5) goto L154l}"];
Node_65 [shape=record,label="{65\:\ 0x0111|lr11.enB.skill = 0l}"];
Node_66 [shape=record,label="{66\:\ 0x0117|l}"];
Node_67 [shape=record,label="{67\:\ 0x0119|lif (r1 \<= 40) goto L157l}"];
Node_68 [shape=record,label="{68\:\ 0x011b|lr11.enB.skill = 2l}"];
Node_69 [shape=record,label="{69\:\ 0x0121|lr11.enB.skill = 1l}"];
Node_70 [shape=record,label="{70\:\ 0x0127|l}"];
Node_71 [shape=record,label="{71\:\ 0x0129|lif (r1 \>= 15) goto L161l}"];
Node_72 [shape=record,label="{72\:\ 0x012b|lr11.enB.skill = 1l}"];
Node_73 [shape=record,label="{73\:\ 0x0131|l}"];
Node_74 [shape=record,label="{74\:\ 0x0133|lif (r1 \>= 40) goto L164l}"];
Node_75 [shape=record,label="{75\:\ 0x0135|lr11.enB.skill = 2l}"];
Node_76 [shape=record,label="{76\:\ 0x013b|lr11.enB.skill = 3l}"];
Node_77 [shape=record,label="{77\:\ 0x00c7|SYNTHETIC\l|l}"];
Node_78 [shape=record,label="{78\:\ 0x00c7|LOOP_END\lLOOP:1: B:37:0x00a5\-\>B:78:0x00c7\l|lbyte r0 = (byte) (r0 + 1)l}"];
Node_79 [shape=record,label="{79\:\ 0x00c7|SYNTHETIC\l|l}"];
Node_80 [shape=record,label="{80\:\ 0x00e5|l}"];
Node_81 [shape=record,label="{81\:\ 0x00f1|lif (isMonHp(r11.enB.getMon(), 30) == false) goto L180l}"];
Node_82 [shape=record,label="{82\:\ 0x00f3|l}"];
Node_83 [shape=record,label="{83\:\ 0x00f5|lif (r2 \>= 30) goto L181l}"];
Node_84 [shape=record,label="{84\:\ 0x00dd|SYNTHETIC\l|l}"];
Node_85 [shape=record,label="{85\:\ 0x00c7|SYNTHETIC\l|l}"];
Node_86 [shape=record,label="{86\:\ 0x00c7|SYNTHETIC\l|l}"];
Node_87 [shape=record,label="{87\:\ 0x00c7|SYNTHETIC\l|l}"];
Node_88 [shape=record,label="{88\:\ 0x00a7|SYNTHETIC\l|l}"];
Node_89 [shape=record,label="{89\:\ 0x0022|SYNTHETIC\l|l}"];
MethodNode[shape=record,label="{private void main.GameRun.aiEnemy((r11v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCOMPUTE_POST_DOM\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:19:0x007e \-\> B:14:0x0037, CROSS_EDGE: B:22:0x008a \-\> B:14:0x0037, CROSS_EDGE: B:23:0x0092 \-\> B:14:0x0037, CROSS_EDGE: B:24:0x0050 \-\> B:14:0x0037, CROSS_EDGE: B:27:0x0059 \-\> B:14:0x0037, CROSS_EDGE: B:28:0x005e \-\> B:14:0x0037, CROSS_EDGE: B:31:0x0067 \-\> B:14:0x0037, CROSS_EDGE: B:34:0x0070 \-\> B:14:0x0037, CROSS_EDGE: B:35:0x0075 \-\> B:14:0x0037, CROSS_EDGE: B:46:0x00a7 \-\> B:14:0x0037, CROSS_EDGE: B:50:0x00b0 \-\> B:14:0x0037, CROSS_EDGE: B:53:0x0145 \-\> B:14:0x0037, CROSS_EDGE: B:56:0x0152 \-\> B:14:0x0037, CROSS_EDGE: B:57:0x015b \-\> B:14:0x0037, CROSS_EDGE: B:58:0x00f8 \-\> B:14:0x0037, CROSS_EDGE: B:61:0x0102 \-\> B:14:0x0037, CROSS_EDGE: B:62:0x0108 \-\> B:14:0x0037, CROSS_EDGE: B:65:0x0111 \-\> B:14:0x0037, CROSS_EDGE: B:68:0x011b \-\> B:14:0x0037, CROSS_EDGE: B:69:0x0121 \-\> B:14:0x0037, CROSS_EDGE: B:72:0x012b \-\> B:14:0x0037, CROSS_EDGE: B:75:0x0135 \-\> B:14:0x0037, CROSS_EDGE: B:76:0x013b \-\> B:14:0x0037, BACK_EDGE: B:78:0x00c7 \-\> B:37:0x00a5, CROSS_EDGE: B:41:0x00d7 \-\> B:78:0x00c7, CROSS_EDGE: B:43:0x00db \-\> B:78:0x00c7, CROSS_EDGE: B:45:0x00dd \-\> B:46:0x00a7, CROSS_EDGE: B:81:0x00f1 \-\> B:78:0x00c7, CROSS_EDGE: B:83:0x00f5 \-\> B:78:0x00c7, CROSS_EDGE: B:83:0x00f5 \-\> B:45:0x00dd, BACK_EDGE: B:6:0x004c \-\> B:2:0x0010, CROSS_EDGE: B:3:0x0011 \-\> B:8:0x0022\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_89;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_2;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_36;
Node_10 -> Node_11;
Node_10 -> Node_24;
Node_10 -> Node_25;
Node_10 -> Node_29;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_14;
Node_23 -> Node_14;
Node_24 -> Node_14;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_14;
Node_28 -> Node_14;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_14;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_14;
Node_35 -> Node_14;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_88[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_80;
Node_39 -> Node_87;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_79;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_77;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_14;
Node_46 -> Node_47[style=dashed];
Node_47 -> Node_48;
Node_47 -> Node_58;
Node_47 -> Node_59;
Node_47 -> Node_63;
Node_47 -> Node_70;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_14;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_14;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_14;
Node_57 -> Node_14;
Node_58 -> Node_14;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_14;
Node_62 -> Node_14;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_14;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_14;
Node_69 -> Node_14;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_14;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_14;
Node_76 -> Node_14;
Node_77 -> Node_78;
Node_78 -> Node_37;
Node_79 -> Node_78;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_86;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_85;
Node_84 -> Node_45;
Node_85 -> Node_78;
Node_86 -> Node_78;
Node_87 -> Node_78;
Node_88 -> Node_46;
Node_89 -> Node_8;
}

