digraph "CFG formain.GameRun.arangeMonster()V" {
subgraph cluster_Region_1420375408 {
label = "R(1:(1:(2:3|(3:6|(2:7|(2:(1:1)|(2:(1:11)(0)|13)))|16))))";
node [shape=record,color=blue];
subgraph cluster_Region_543346171 {
label = "R(1:(2:3|(3:6|(2:7|(2:(1:1)|(2:(1:11)(0)|13)))|16)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2109517591 {
label = "IF [B:2:0x0003] THEN: R(2:3|(3:6|(2:7|(2:(1:1)|(2:(1:11)(0)|13)))|16)) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|lif (r5.myMon_length \> 1) goto L25l}"];
subgraph cluster_Region_981593160 {
label = "R(2:3|(3:6|(2:7|(2:(1:1)|(2:(1:11)(0)|13)))|16))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|lbyte r0 = 0l}"];
subgraph cluster_LoopRegion_1402651702 {
label = "LOOP:0: (3:6|(2:7|(2:(1:1)|(2:(1:11)(0)|13)))|16)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|ADDED_TO_REGION\l|lif (r0 \< (r5.myMon_length \- 1)) goto L29l}"];
subgraph cluster_Region_210672851 {
label = "R(3:6|(2:7|(2:(1:1)|(2:(1:11)(0)|13)))|16)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000c|lint int r2 = r0 + 1l}"];
subgraph cluster_LoopRegion_1940131878 {
label = "LOOP:1: (2:7|(2:(1:1)|(2:(1:11)(0)|13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1490418498 {
label = "R(2:7|(2:(1:1)|(2:(1:11)(0)|13)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|LOOP_START\lPHI: r2l  0x000f: PHI (r2v4 int) = (r2v3 int), (r2v11 int) binds: [B:6:0x000c, B:13:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x000f\-\>B:13:0x0034\l|lbyte byte r1 = (byte) r2l}"];
subgraph cluster_Region_1849403799 {
label = "R(2:(1:1)|(2:(1:11)(0)|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_539786452 {
label = "IF [B:8:0x0011] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|EDGE_INSN: B:8:0x0011\-\>B:15:0x0013 BREAK  A[LOOP:1: B:7:0x000f\-\>B:13:0x0034]\l|lif (r1 \>= r5.myMon_length) goto L38l}"];
subgraph cluster_Region_1484827838 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1088189614 [shape=record,label="{|lbreakl}"];
}
}
subgraph cluster_Region_549819277 {
label = "R(2:(1:11)(0)|13)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_279774593 {
label = "IF [B:10:0x0027] THEN: R(1:11) ELSE: R(0)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0027|lif (r5.myMonsters[r0].monster[1] \> r5.myMonsters[r1].monster[1]) goto L35l}"];
subgraph cluster_Region_637225072 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0029|lchangeMonster(r5.myMonsters[r0], r5.myMonsters[r1])l}"];
}
subgraph cluster_Region_329935283 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_13 [shape=record,label="{13\:\ 0x0034|LOOP_END\lLOOP:1: B:7:0x000f\-\>B:13:0x0034\l|lint r2 = r1 + 1l}"];
}
}
}
}
Node_16 [shape=record,label="{16\:\ 0x0013|LOOP_END\lLOOP:0: B:4:0x0006\-\>B:16:0x0013\l|lbyte r0 = (byte) (r0 + 1)l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006|LOOP_START\lPHI: r0l  0x0006: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v2 'i' byte) binds: [B:3:0x0005, B:16:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0006\-\>B:16:0x0013\l|l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0034|SYNTHETIC\l|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0034|SYNTHETIC\l|l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0013|SYNTHETIC\lEDGE_INSN: B:8:0x0011\-\>B:15:0x0013 BREAK  A[LOOP:1: B:7:0x000f\-\>B:13:0x0034]\l|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000b|SYNTHETIC\l|l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l|l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000b|ORIG_RETURN\l|l}"];
MethodNode[shape=record,label="{private void main.GameRun.arangeMonster((r5v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:16:0x0013 \-\> B:4:0x0006, BACK_EDGE: B:13:0x0034 \-\> B:7:0x000f, CROSS_EDGE: B:10:0x0027 \-\> B:13:0x0034, CROSS_EDGE: B:2:0x0003 \-\> B:20:0x000b\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_20[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_17[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_10 -> Node_11;
Node_10 -> Node_14[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_7;
Node_16 -> Node_4;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_19;
}

