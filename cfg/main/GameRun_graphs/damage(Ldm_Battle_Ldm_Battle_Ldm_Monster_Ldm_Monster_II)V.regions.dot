digraph "CFG formain.GameRun.damage(Ldm\/Battle;Ldm\/Battle;Ldm\/Monster;Ldm\/Monster;II)V" {
subgraph cluster_Region_383644857 {
label = "R(12:1|(1:3)(1:(1:34))|4|5|7|(1:9)|(1:25)|(2:29|(1:31))|(1:16)|17|(1:19)|20)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|lint r6 = r20.monster[2]lint r7 = r21.monster[2]lshort short r10 = r20.monsterPro[6]lshort short r5 = r21.monsterPro[7]lint r9 = r17.skill[r22][0]lint int r8 = r6 \- r7lbyte r12 = 100lint int r13 = ((((r10 * r9) * (com.uc.paymentsdk.util.Constants.PAYMENT_MAX \- (r5 * 5))) \/ com.uc.paymentsdk.util.Constants.PAYMENT_JIFENGQUAN_MAX) \- (r5 \/ 10)) \- (r6 \/ (r9 * 2))lint int r13 = (r13 + 6) \- ((r6 \- 1) \/ 10)l}"];
subgraph cluster_IfRegion_1975796647 {
label = "IF [B:2:0x004e] THEN: R(1:3) ELSE: R(1:(1:34))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x004e|lif (r8 \> 10) goto L39l}"];
subgraph cluster_Region_90743063 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0050|lr8 = 10l}"];
}
subgraph cluster_Region_2060613920 {
label = "R(1:(1:34)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_214239642 {
label = "IF [B:33:0x00eb] THEN: R(1:34) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00eb|lif (r8 \< (\-10)) goto L64l}"];
subgraph cluster_Region_1029354492 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00ed|lr8 = \-10l}"];
}
}
}
}
Node_4 [shape=record,label="{4\:\ 0x0052|PHI: r8l  0x0052: PHI (r8v2 'LevelCha' int) = (r8v0 'LevelCha' int), (r8v1 'LevelCha' int), (r8v3 'LevelCha' int) binds: [B:33:0x00eb, B:34:0x00ed, B:3:0x0050] A[DONT_GENERATE, DONT_INLINE]\l|lint int r13 = (((r8 * 4) + 100) * r13) \/ 100l}"];
Node_5 [shape=record,label="{5\:\ 0x005e|lint r4 = r21.effect == 0 ? \-30 : 0l}"];
Node_7 [shape=record,label="{7\:\ 0x0062|PHI: r4l  0x0062: PHI (r4 I:??) = (r4v2 'DebuffB' int) binds: [B:6:0x0060] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|lint int r13 = (((r18.countS[1] + r4) + 100) * r13) \/ 100lbyte r11 = 1l}"];
subgraph cluster_IfRegion_1524133472 {
label = "IF [B:8:0x007a] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x007a|lif (r20.isBuffRate(9) != false) goto L45l}"];
subgraph cluster_Region_910939720 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x007c|ldm.Ms.i()l}"];
}
}
subgraph cluster_IfRegion_162286666 {
label = "IF [B:24:0x0099] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0099|lif (r21.isMonReel(48) != false) goto L49l}"];
subgraph cluster_Region_1616789286 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x009b|ldm.Ms.i()l}"];
}
}
subgraph cluster_IfRegion_2037184035 {
label = "IF [B:28:0x00fa] THEN: R(2:29|(1:31)) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00fa|lif (r20.isBuffRate(10) != false) goto L67l}"];
subgraph cluster_Region_293439184 {
label = "R(2:29|(1:31))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00fc|ldm.Ms.i()l}"];
subgraph cluster_IfRegion_2052609705 {
label = "IF [B:30:0x010e] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x010e|lif (dm.Ms.getRandom(100) \< r17.inhesion[10]) goto L69l}"];
subgraph cluster_Region_617151294 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0110|lint r13 = (r13 * 15) \/ 10lr11 = 2l}"];
}
}
}
}
subgraph cluster_IfRegion_1802428875 {
label = "IF [B:13:0x00be, B:15:0x00c9] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x00be|lif (r21.monster[3] == 1) goto L54l}"];
Node_15 [shape=record,label="{15\:\ 0x00c9|ADDED_TO_REGION\l|lif (r21.isMonReel(33) != false) goto L56l}"];
subgraph cluster_Region_1692966573 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x00cb|lr12 = r17.skill[33][0]l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x00d7|PHI: r12l  0x00d7: PHI (r12v1 'buff' byte) = (r12v0 'buff' byte), (r12v0 'buff' byte), (r12v2 'buff' byte) binds: [B:13:0x00be, B:15:0x00c9, B:16:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|lint int r13 = (r13 * r12) \/ 100l}"];
subgraph cluster_IfRegion_1475019600 {
label = "IF [B:18:0x00dc] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x00dc|lif (r13 \< 1) goto L59l}"];
subgraph cluster_Region_1933987195 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x00de|lr13 = 1l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x00df|PHI: r13l  0x00df: PHI (r13v7 'hit' int) = (r13v6 'hit' int), (r13v8 'hit' int) binds: [B:18:0x00dc, B:19:0x00de] A[DONT_GENERATE, DONT_INLINE]\l|lr19.addHit(r13, r11, 0)l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0060|l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x008e|lif (dm.Ms.getRandom(100) \>= r17.inhesion[9]) goto L47l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x00b3|lr13 \>\>= 1l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x00b5|PHI: r11 r13l  0x00b5: PHI (r11v2 'baoji' byte) = (r11v0 'baoji' byte), (r11v0 'baoji' byte), (r11v1 'baoji' byte), (r11v0 'baoji' byte) binds: [B:28:0x00fa, B:30:0x010e, B:31:0x0110, B:11:0x00b3] A[DONT_GENERATE, DONT_INLINE]l  0x00b5: PHI (r13v5 'hit' int) = (r13v3 'hit' int), (r13v3 'hit' int), (r13v4 'hit' int), (r13v9 'hit' int) binds: [B:28:0x00fa, B:30:0x010e, B:31:0x0110, B:11:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x00c0|l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x00e8|l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0090|l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00b1|lif (dm.Ms.getRandom(100) \< r17.skill[48][0]) goto L51l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00f1|l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00e9|l}"];
MethodNode[shape=record,label="{private void main.GameRun.damage((r17v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]), (r18v0 'amB' dm.Battle A[D('amB' dm.Battle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'dmB' dm.Battle A[D('dmB' dm.Battle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'am' dm.Monster A[D('am' dm.Monster), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'dm' dm.Monster A[D('dm' dm.Monster), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'skill_no' int A[D('skill_no' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'mini' int A[D('mini' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{l WARN: l \-\> Code restructure failed: missing block: B:10:0x008e, code lost:ll    if (dm.Ms.getRandom(100) \>= r17.inhesion[9]) goto L47;ll \-\> Code restructure failed: missing block: B:11:0x00b3, code lost:ll    r13 = r13 \>\> 1;ll \-\> Code restructure failed: missing block: B:26:0x00b1, code lost:ll    if (dm.Ms.getRandom(100) \< r17.skill[48][0]) goto L51;l\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:18:0x00dc \-\> B:20:0x00df, CROSS_EDGE: B:15:0x00c9 \-\> B:17:0x00d7, CROSS_EDGE: B:13:0x00be \-\> B:17:0x00d7, CROSS_EDGE: B:28:0x00fa \-\> B:12:0x00b5, CROSS_EDGE: B:30:0x010e \-\> B:12:0x00b5, CROSS_EDGE: B:31:0x0110 \-\> B:12:0x00b5, CROSS_EDGE: B:24:0x0099 \-\> B:27:0x00f1, CROSS_EDGE: B:10:0x008e \-\> B:11:0x00b3, CROSS_EDGE: B:8:0x007a \-\> B:23:0x0090, CROSS_EDGE: B:5:0x005e \-\> B:7:0x0062, CROSS_EDGE: B:33:0x00eb \-\> B:4:0x0052, CROSS_EDGE: B:34:0x00ed \-\> B:4:0x0052\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_32[style=dashed];
Node_3 -> Node_4;
Node_33 -> Node_4[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_23[style=dashed];
Node_9 -> Node_10;
Node_24 -> Node_25;
Node_24 -> Node_27[style=dashed];
Node_25 -> Node_26;
Node_28 -> Node_12[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_12[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_10 -> Node_23;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_26 -> Node_11;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_28;
Node_32 -> Node_33;
}

