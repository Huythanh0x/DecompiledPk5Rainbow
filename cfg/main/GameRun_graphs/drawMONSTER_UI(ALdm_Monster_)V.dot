digraph "CFG formain.GameRun.drawMONSTER_UI([Ldm\/Monster;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lint r5 = main.Constants_H.WIDTH_H_ \- 140ldm.Ui.i().fillRectB()ldm.Ui.i().drawK2(r5, 2, 280, main.Constants_H.HEIGHT_ \- 2, 0)lint r9 = r5 + 6ldm.Ui.i().drawK1(r9, 5 + 6, 118, 116, 1)l}"];
Node_2 [shape=record,label="{2\:\ 0x0038|lif (r29.t_length == 0) goto L45l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|ldrawMonsterHp(r30[r29.select[0][0]], r9 + 30, 5, 74, 2, 2, r30[r29.select[0][0]].monsterPro[4])ldm.Ui.i().drawNum(new java.lang.StringBuilder(java.lang.String.valueOf(r30[r29.select[0][0]].monster[2])).append(main.Constants_H.TXT_9).toString(), r9 + 2, 5 + 10, 0, 0)ldm.Ui.i().drawUi(r30[r29.select[0][0]].monster[3] + 5, r9 + 9, 5 + 11, 17, 0)lint r20 = (r29.mList_id[r30[r29.select[0][0]].monster[0]][1] * 3) + r29.mon_actionl}"];
Node_4 [shape=record,label="{4\:\ 0x00f0|lif (r29.mon_action != 1) goto L66l}"];
Node_5 [shape=record,label="{5\:\ 0x00f2|lr23 = falsel}"];
Node_6 [shape=record,label="{6\:\ 0x00f5|PHI: r23l  0x00f5: PHI (r23v8 boolean) = (r23v7 boolean), (r23v9 boolean) binds: [B:9:0x02e4, B:5:0x00f2] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_7 [shape=record,label="{7\:\ 0x00fd|lif (drawCartoonOne(1, 1, r20, 248, 111, r23, 0) == false) goto L45l}"];
Node_8 [shape=record,label="{8\:\ 0x00ff|lr29.mon_action = 0l}"];
Node_9 [shape=record,label="{9\:\ 0x02e4|lr23 = truel}"];
Node_10 [shape=record,label="{10\:\ 0x0105|lint r4 = 116 + 22lint r0 = 5 + 138lshort r11 = (short) (main.Constants_H.WIDTH_ \- (r9 \<\< 1))ldm.Ui.i().drawK1(r9, r0, r11, (main.Constants_H.HEIGHT_ \- 116) \- 32, 1)ldm.Ui.i().drawK(r9 + 8, r0 + 10, r11 \- 16, 33, 3)ldm.Ui.i().drawK(r9 + 8, (r0 + 150) + 11, r11 \- 16, 33, 3)l}"];
Node_11 [shape=record,label="{11\:\ 0x0154|lif (r29.t_length == 0) goto L50l}"];
Node_12 [shape=record,label="{12\:\ 0x0156|lgogoWord(getNameMonsterInfo(r30[r29.select[0][0]].monster[0]), r9 + 9, (r0 + 150) + 13, r11 \- 70, 0, 1, 2)ldrawMonsterFealty(r30[r29.select[0][0]], r9 + 2, r0 \- 14)ldm.Ui.i().drawString(r29.monsterT[r30[r29.select[0][0]].monster[3]].toString(), r9 + 25, r0 + 12, 0, 0, 1)l}"];
Node_13 [shape=record,label="{13\:\ 0x01e2|lif (r30[r29.select[0][0]].monster[5] != 0) goto L67l}"];
Node_14 [shape=record,label="{14\:\ 0x01e4|ldm.Ui.i().drawString(main.Constants_H.TXT_84, r9 + 115, r0 + 12, 0, 0, 1)l}"];
Node_15 [shape=record,label="{15\:\ 0x02e9|ldm.Ui.i().drawString(new java.lang.StringBuilder(main.Constants_H.TXT_15).append(r30[r29.select[0][0]].monster[5]).append(\"æ¬¡\").toString(), r9 + 115, r0 + 12, 0, 0, 1)l}"];
Node_16 [shape=record,label="{16\:\ 0x01f7|ldrawMonPro(r30, r9, r0)lint r9 = ((280 + main.Constants_H.HEIGHT_H_) \- 75) \- 15l}"];
Node_17 [shape=record,label="{17\:\ 0x0213|lif (r29.t_length == 0) goto L53l}"];
Node_18 [shape=record,label="{18\:\ 0x0215|ldrawMonList(r30, r9 + 2, 0 + 13, r29.list_rows, r29.t_length, r29.select[0])l}"];
Node_19 [shape=record,label="{19\:\ 0x0234|ldm.Ui.i().sliding((280 + main.Constants_H.HEIGHT_H_) \- 17, 0 + 12, 116 + 6, r29.select[0][0], r29.t_length, true)ldm.Ui r17 = dm.Ui.i()ljava.lang.StringBuilder r4 = new java.lang.StringBuilder(java.lang.String.valueOf(r29.t_length)).append(\"\/\")l}"];
Node_20 [shape=record,label="{20\:\ 0x0276|lif (r29.mini_state != 6) goto L68l}"];
Node_21 [shape=record,label="{21\:\ 0x0278|lr5 = r29.max_monstersl}"];
Node_22 [shape=record,label="{22\:\ 0x027d|PHI: r5l  0x027d: PHI (r5v12 byte) = (r5v11 byte), (r5v22 byte) binds: [B:34:0x0323, B:21:0x0278] A[DONT_GENERATE, DONT_INLINE]\l|lr17.drawNum(r4.append(r5).toString(), (280 + main.Constants_H.HEIGHT_H_) \- 40, 0 + 12, 0, 0)l}"];
Node_23 [shape=record,label="{23\:\ 0x029a|lif (r29.popMenu == (\-1)) goto L61l}"];
Node_24 [shape=record,label="{24\:\ 0x029c|ldrawSelectMenu(r29.about_d, main.Constants_H.WIDTH_H_ \- 25, 30, 75, 2, 0, r29.popMenu)l}"];
Node_25 [shape=record,label="{25\:\ 0x02bf|lif (r29.buyOk != 1) goto L61l}"];
Node_26 [shape=record,label="{26\:\ 0x02c1|lshowString(r29.gogoString, main.Constants_H.HEIGHT_H_ \- 25, 0)l}"];
Node_27 [shape=record,label="{27\:\ 0x02d3|ldm.Ui r4 = dm.Ui.i()l}"];
Node_28 [shape=record,label="{28\:\ 0x02dc|lif (r29.t_length == 0) goto L69l}"];
Node_29 [shape=record,label="{29\:\ 0x02de|lr5 = truel}"];
Node_30 [shape=record,label="{30\:\ 0x02df|PHI: r5l  0x02df: PHI (r5v17 boolean) = (r5v16 boolean), (r5v18 boolean) binds: [B:33:0x032a, B:29:0x02de] A[DONT_GENERATE, DONT_INLINE]\l|lr4.drawYesNo(r5, true)l}"];
Node_31 [shape=record,label="{31\:\ 0x02e3|RETURN\l|lreturnl}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_33 [shape=record,label="{33\:\ 0x032a|lr5 = falsel}"];
Node_34 [shape=record,label="{34\:\ 0x0323|lr5 = r29.max_takesl}"];
MethodNode[shape=record,label="{private void main.GameRun.drawMONSTER_UI((r29v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]), (r30v0 'monsters' dm.Monster[] A[D('monsters' dm.Monster[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:33:0x032a \-\> B:30:0x02df, CROSS_EDGE: B:25:0x02bf \-\> B:27:0x02d3, CROSS_EDGE: B:23:0x029a \-\> B:27:0x02d3, CROSS_EDGE: B:34:0x0323 \-\> B:22:0x027d, CROSS_EDGE: B:17:0x0213 \-\> B:19:0x0234, CROSS_EDGE: B:15:0x02e9 \-\> B:16:0x01f7, CROSS_EDGE: B:11:0x0154 \-\> B:16:0x01f7, CROSS_EDGE: B:7:0x00fd \-\> B:10:0x0105, CROSS_EDGE: B:9:0x02e4 \-\> B:6:0x00f5, CROSS_EDGE: B:2:0x0038 \-\> B:10:0x0105\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_34;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_33 -> Node_30;
Node_34 -> Node_22;
}

