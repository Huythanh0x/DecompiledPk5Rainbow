digraph "CFG formain.GameRun.enemy_init()V" {
subgraph cluster_Region_1681122160 {
label = "R(3:1|(3:7|(2:(1:16)(1:19)|17)(1:11)|13)|22)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|ldm.Monster[] dm.Monster[] r0 = new dm.Monster[r12.enemyList.length]lint r1 = 0l}"];
subgraph cluster_LoopRegion_1384128443 {
label = "LOOP:0: (3:7|(2:(1:16)(1:19)|17)(1:11)|13)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|lif (r1 \< r12.enemyList.length) goto L32l}"];
subgraph cluster_Region_1962262740 {
label = "R(3:7|(2:(1:16)(1:19)|17)(1:11)|13)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0036|PHI: r5l  0x0036: PHI (r5v4 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr0[r1] = new dm.Monster(r12, r12.enemyList[r1][0], r12.enemyList[r1][1], r12.myMonsters[0].isMonReel(39) ? 1 : 0)l}"];
subgraph cluster_IfRegion_1180755746 {
label = "IF [B:8:0x003d, B:10:0x0041] THEN: R(2:(1:16)(1:19)|17) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003d|lif (r12.battle_type == 3) goto L39l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|ADDED_TO_REGION\l|lif (r12.battle_type == 0) goto L39l}"];
subgraph cluster_Region_2089368377 {
label = "R(2:(1:16)(1:19)|17)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1248119523 {
label = "IF [B:15:0x0049] THEN: R(1:16) ELSE: R(1:19)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0049|lif (r0[r1].monster[3] == (\-1)) goto L41l}"];
subgraph cluster_Region_1576271076 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x004b|lr0[r1].resetBoss(r12.enemyList[r1][4])l}"];
}
subgraph cluster_Region_639675465 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0060|lr0[r1].resetMonster(r12.enemyList[r1][2], r12.enemyList[r1][3], r12.enemyList[r1][4])l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0056|lr0[r1].resetPro(r12)l}"];
}
subgraph cluster_Region_282514841 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0079|lr0[r1].resetMonster(r12, \-1)l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x005b|LOOP_END\lLOOP:0: B:2:0x000b\-\>B:13:0x005b\l|lr1++l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0010|lr12.enemyList = nulllr12.enB = new dm.Battle(r0)l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000b|LOOP_START\lPHI: r1l  0x000b: PHI (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:1:0x0000, B:13:0x005b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x000b\-\>B:13:0x005b\l|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001b|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0033|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0035|l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x003f|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x005b|SYNTHETIC\l|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0043|l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x005b|SYNTHETIC\l|l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005e|l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0010|SYNTHETIC\l|l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x001a|l}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{private void main.GameRun.enemy_init((r12v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:13:0x005b \-\> B:2:0x000b, CROSS_EDGE: B:19:0x0060 \-\> B:17:0x0056, CROSS_EDGE: B:11:0x0079 \-\> B:13:0x005b, CROSS_EDGE: B:8:0x003d \-\> B:14:0x0043, CROSS_EDGE: B:20:0x005e \-\> B:7:0x0036\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_21[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_10 -> Node_14;
Node_10 -> Node_11[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_19 -> Node_17;
Node_17 -> Node_18;
Node_11 -> Node_12;
Node_13 -> Node_2;
Node_22 -> Node_23;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_18 -> Node_13;
Node_20 -> Node_7;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

