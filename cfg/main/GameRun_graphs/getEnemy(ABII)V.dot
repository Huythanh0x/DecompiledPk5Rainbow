digraph "CFG formain.GameRun.getEnemy([BII)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|lif (r7 != (\-1)) goto L35l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ldm.Ms.i()l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|lif (dm.Ms.getRandom(100) \>= 5) goto L30l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|lif (r5.monPro.length \<= 6) goto L30l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|lr7 = 6l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|PHI: r7l  0x0018: PHI (r7v3 int) = (r7v2 int), (r7v4 int) binds: [B:15:0x003e, B:7:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|ldm.Ms.i()lr6[1] = (byte) (dm.Ms.getRandom(r5.monPro[2] + 1) + r5.monPro[1])l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|PHI: r7l  0x002e: PHI (r7v1 int) = (r7v0 int), (r7v3 int) binds: [B:17:0x004c, B:8:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|lr6[0] = (byte) r7l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|RETURN\l|lreturnl}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|lbyte[] r0 = r5.monProldm.Ms.i()l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|lif (r5.monPro.length \<= 6) goto L34l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|lr1 = 3l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|PHI: r1l  0x003e: PHI (r1v7 int) = (r1v6 int), (r1v10 int) binds: [B:16:0x0047, B:14:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|lr7 = r0[dm.Ms.getRandom(r1) + 3]l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|lint r1 = r5.monPro.length \- 3l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|lr6[1] = (byte) r8l}"];
MethodNode[shape=record,label="{public void main.GameRun.getEnemy((r5v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]), (r6v0 'enemy_list' byte[] A[D('enemy_list' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'level' int A[D('level' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:15:0x003e \-\> B:8:0x0018, CROSS_EDGE: B:16:0x0047 \-\> B:15:0x003e, CROSS_EDGE: B:4:0x0010 \-\> B:12:0x0033, CROSS_EDGE: B:17:0x004c \-\> B:9:0x002e\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_8;
Node_16 -> Node_15;
Node_17 -> Node_9;
}

