digraph "CFG formain.GameRun.getEnemy([BII)V" {
subgraph cluster_Region_1994523457 {
label = "R(2:(3:3|(2:12|15)(1:7)|8)(1:17)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2008696887 {
label = "IF [B:2:0x0004] THEN: R(3:3|(2:12|15)(1:7)|8) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|lif (r7 == (\-1)) goto L22l}"];
subgraph cluster_Region_1829756519 {
label = "R(3:3|(2:12|15)(1:7)|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ldm.Ms.i()l}"];
subgraph cluster_IfRegion_111872449 {
label = "IF [B:4:0x0010, B:6:0x0015] THEN: R(2:12|15) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|lif (dm.Ms.getRandom(100) \>= 5) goto L30l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ADDED_TO_REGION\l|lif (r5.monPro.length \<= 6) goto L30l}"];
subgraph cluster_Region_401652762 {
label = "R(2:12|15)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0033|lbyte[] byte[] r0 = r5.monProldm.Ms.i()l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|PHI: r1l  0x003e: PHI (r1v7 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr7 = r0[dm.Ms.getRandom(r5.monPro.length \> 6 ? 3 : r5.monPro.length \- 3) + 3]l}"];
}
subgraph cluster_Region_1614146142 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|lr7 = 6l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0018|PHI: r7l  0x0018: PHI (r7v3 int) = (r7v2 int), (r7v4 int) binds: [B:15:0x003e, B:7:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|ldm.Ms.i()lr6[1] = (byte) (dm.Ms.getRandom(r5.monPro[2] + 1) + r5.monPro[1])l}"];
}
subgraph cluster_Region_1164705183 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004c|lr6[1] = (byte) r8l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x002e|PHI: r7l  0x002e: PHI (r7v1 int) = (r7v0 int), (r7v3 int) binds: [B:17:0x004c, B:8:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|lr6[0] = (byte) r7l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012|l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0032|l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003b|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003d|l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0047|l}"];
MethodNode[shape=record,label="{public void main.GameRun.getEnemy((r5v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]), (r6v0 'enemy_list' byte[] A[D('enemy_list' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'level' int A[D('level' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:15:0x003e \-\> B:8:0x0018, CROSS_EDGE: B:16:0x0047 \-\> B:15:0x003e, CROSS_EDGE: B:4:0x0010 \-\> B:12:0x0033, CROSS_EDGE: B:17:0x004c \-\> B:9:0x002e\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_17[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_12 -> Node_13;
Node_15 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_17 -> Node_9;
Node_9 -> Node_10;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_15;
}

