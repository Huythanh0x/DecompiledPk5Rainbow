digraph "CFG formain.GameRun.goVIEW_MONSTER()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lmain.GameRun.run_state = 35lr5.cur_c = 0lr5.selecty = 0lr5.selectx = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|lif (r5.mini_state != 6) goto L27l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|lbyte r0 = r5.cMon_countl}"];
Node_4 [shape=record,label="{4\:\ 0x0013|PHI: r0l  0x0013: PHI (r0v3 byte) = (r0v2 byte), (r0v19 byte) binds: [B:14:0x0061, B:3:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|lr5.t_length = r0lbyte[] r0 = r5.select[0]lr5.select[0][1] = 0lr0[0] = 0lr5.popMenu = \-1lr5.list_rows = 5lr5.mon_action = 0lsetStringB(\"生命#n能量#n档次\", main.Constants_H.WIDTH, 0)lsetStringB(\"力量#n防御#n敏捷\", main.Constants_H.WIDTH, 1)l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|lif (r5.mini_state != 6) goto L28l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|lr0 = r5.cMonsters[r5.select[0][0]]l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|PHI: r0l  0x0045: PHI (r0v13 dm.Monster) = (r0v12 dm.Monster), (r0v18 dm.Monster) binds: [B:13:0x0064, B:6:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|lr5.cur_mon = r0l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|lif (r5.t_length == 0) goto L29l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|lsetShowPro(r5.cur_mon)linitMonStream(2, r5.mList_id[r5.cur_mon.monster[0]][0], 1)l}"];
Node_10 [shape=record,label="{10\:\ 0x0060|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_13 [shape=record,label="{13\:\ 0x0064|lr0 = r5.myMonsters[r5.select[0][0]]l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|lbyte r0 = r5.myMon_lengthl}"];
MethodNode[shape=record,label="{public void main.GameRun.goVIEW_MONSTER((r5v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:8:0x0049 \-\> B:10:0x0060, CROSS_EDGE: B:13:0x0064 \-\> B:7:0x0045, CROSS_EDGE: B:14:0x0061 \-\> B:4:0x0013\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_11;
Node_13 -> Node_7;
Node_14 -> Node_4;
}

