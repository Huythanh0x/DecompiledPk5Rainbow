digraph "CFG formain.GameRun.isBagUse(I)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|lif (r4.view_state != (\-1)) goto L35l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|lif (r5 == 14) goto L34l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|lif (r5 == 15) goto L34l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|RETURN\lORIG_RETURN\l|lreturn truel}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|lreturn falsel}"];
Node_12 [shape=record,label="{12\:\ 0x0013|l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|lif (r5 == 9) goto L44l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|lif (r5 == 10) goto L44l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|l}"];
Node_17 [shape=record,label="{17\:\ 0x001d|lif (r5 == 11) goto L44l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|lif (r5 == 8) goto L44l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|lreturn truel}"];
Node_22 [shape=record,label="{22\:\ 0x0025|l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturn falsel}"];
MethodNode[shape=record,label="{private boolean main.GameRun.isBagUse((r4v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]), (r5v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:10:0x0011 \-\> B:8:0x0010, CROSS_EDGE: B:4:0x0009 \-\> B:10:0x0011, CROSS_EDGE: B:20:0x0023 \-\> B:8:0x0010, CROSS_EDGE: B:22:0x0025 \-\> B:8:0x0010, CROSS_EDGE: B:17:0x001d \-\> B:22:0x0025, CROSS_EDGE: B:15:0x0019 \-\> B:22:0x0025, CROSS_EDGE: B:13:0x0015 \-\> B:22:0x0025\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_9;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_9;
Node_22 -> Node_23;
Node_23 -> Node_9;
}

