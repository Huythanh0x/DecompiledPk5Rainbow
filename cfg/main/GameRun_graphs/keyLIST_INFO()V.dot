digraph "CFG formain.GameRun.keyLIST_INFO()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|lif (dm.Ms.i().key_delay() == false) goto L37l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_4 [shape=record,label="{4\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|lif (dm.Ms.i().key_S1_Num5() == false) goto L42l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|lif (r6.monInfoList[getMonInfo_dir()] == 0) goto L58l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|lgoMONSTER_INFO(getMonInfo_dir())l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_12 [shape=record,label="{12\:\ 0x0029|l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|lif (dm.Ms.i().key_S2() == false) goto L45l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|lr6.action_str = nulllr6.monInfo_dir = nullldoPaint(0)lgoYouPAUSE(3)l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_16 [shape=record,label="{16\:\ 0x003f|l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|lif (dm.Ms.i().key_Left_Right() == false) goto L54l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|lr6.cur_a = dm.Ms.i().select(r6.cur_a, 0, 4)lr6.infoStart = 0l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|lif (r6.cur_a \<= 0) goto L52l}"];
Node_20 [shape=record,label="{20\:\ 0x005c|lr0 = 0l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|LOOP_START\lPHI: r0l  0x005d: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v2 'i' byte) binds: [B:20:0x005c, B:23:0x0079] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:21:0x005d\-\>B:23:0x0079\l|l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|lif (r0 \< r6.cur_a) goto L53l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|LOOP_END\lLOOP:0: B:21:0x005d\-\>B:23:0x0079\l|lr6.infoStart = (byte) (r6.infoStart + r6.monInfo_dir[r0].length)lbyte r0 = (byte) (r0 + 1)l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|SYNTHETIC\l|l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|lr6.t_length = (byte) r6.monInfo_dir[r6.cur_a].lengthlbyte[] r1 = r6.select[0]lr6.select[0][1] = 0lr1[0] = 0l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_27 [shape=record,label="{27\:\ 0x0088|l}"];
Node_28 [shape=record,label="{28\:\ 0x0090|lif (dm.Ms.i().key_Up_Down() == false) goto L62l}"];
Node_29 [shape=record,label="{29\:\ 0x0092|ldm.Ms.i().selectS(r6.select[0], 0, r6.t_length, r6.list_rows)l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{public void main.GameRun.keyLIST_INFO((r6v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:8:0x001f \-\> B:3:0x000c, CROSS_EDGE: B:9:0x0021 \-\> B:3:0x000c, CROSS_EDGE: B:14:0x0033 \-\> B:3:0x000c, CROSS_EDGE: B:25:0x0061 \-\> B:3:0x000c, BACK_EDGE: B:23:0x0079 \-\> B:21:0x005d, CROSS_EDGE: B:19:0x005a \-\> B:25:0x0061, CROSS_EDGE: B:28:0x0090 \-\> B:3:0x000c, CROSS_EDGE: B:29:0x0092 \-\> B:3:0x000c\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_4;
Node_11 -> Node_4;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_4;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_21;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_4;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_4;
Node_31 -> Node_4;
}

