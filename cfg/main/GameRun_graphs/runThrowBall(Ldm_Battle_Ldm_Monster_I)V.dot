digraph "CFG formain.GameRun.runThrowBall(Ldm\/Battle;Ldm\/Monster;I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|lif (r7.src_c[r10 + 2] != 0) goto L50l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|lif (r8.throw_state != (\-1)) goto L50l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|lif (r7.src_c[r10] != 12) goto L50l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|lr8.throw_state = 0l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|lif (r8.throw_state != 0) goto L55l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|lr8.cThrow[0] = (byte) dm.Ms.i().mathSpeedN(r8.cThrow[0], 0, 6, false)lr8.cThrow[1] = (byte) dm.Ms.i().mathSpeedUp(r8.cThrow[1], 62, 2)l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|lif (r8.cThrow[0] != 0) goto L61l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|lif (r8.cThrow[1] != 0) goto L62l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|lr8.throw_state = 1l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_19 [shape=record,label="{19\:\ 0x006a|l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|lif (r8.throw_state != 1) goto L63l}"];
Node_21 [shape=record,label="{21\:\ 0x006e|l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|lif (r8.cThrow[2] \>= 12) goto L60l}"];
Node_23 [shape=record,label="{23\:\ 0x0074|lshort[] r0 = r8.cThrowlr0[2] = (short) (r0[2] + 1)l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_25 [shape=record,label="{25\:\ 0x007e|lr8.throw_state = 2l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_28 [shape=record,label="{28\:\ 0x0052|l}"];
Node_29 [shape=record,label="{29\:\ 0x0058|lif (r7.src_c[r10 + 2] != 1) goto L42l}"];
Node_30 [shape=record,label="{30\:\ 0x005a|l}"];
Node_31 [shape=record,label="{31\:\ 0x005e|lif (r7.src_c[r10] != 0) goto L42l}"];
Node_32 [shape=record,label="{32\:\ 0x0060|lr7.src_c[r10 + 2] = 0lgetBattleBG(r8, r9)l}"];
MethodNode[shape=record,label="{private void main.GameRun.runThrowBall((r7v0 'this' main.GameRun A[IMMUTABLE_TYPE, THIS]), (r8v0 'be' dm.Battle A[D('be' dm.Battle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'mon' dm.Monster A[D('mon' dm.Monster), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'mini' int A[D('mini' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:13:0x004d \-\> B:15:0x0051, CROSS_EDGE: B:11:0x0047 \-\> B:15:0x0051, CROSS_EDGE: B:20:0x006c \-\> B:15:0x0051, CROSS_EDGE: B:23:0x0074 \-\> B:15:0x0051, CROSS_EDGE: B:25:0x007e \-\> B:15:0x0051, CROSS_EDGE: B:29:0x0058 \-\> B:8:0x001a, CROSS_EDGE: B:31:0x005e \-\> B:8:0x001a, CROSS_EDGE: B:32:0x0060 \-\> B:8:0x001a, CROSS_EDGE: B:4:0x0010 \-\> B:28:0x0052, CROSS_EDGE: B:2:0x000b \-\> B:28:0x0052\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_28;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_28;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_28;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_16;
Node_18 -> Node_16;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_8;
Node_29 -> Node_30[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_8;
Node_31 -> Node_32[style=dashed];
Node_32 -> Node_8;
}

