digraph "CFG formain.MainCanvas.hideNotifyMy()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|ljava.lang.System.out.println(new java.lang.StringBuilder(\"hideNotifyMy() run_state= \").append(main.GameRun.run_state).append(\" game_state= \").append(r4.game_state).toString())ldm.Ms.keyRepeat = falsel}"];
Node_2 [shape=record,label="{2\:\ 0x0029|lif (r4.game_state == 98) goto L30l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|lif (main.GameRun.run_state == 98) goto L31l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|lr4.haveSoundBeforeHideNotify = dm.Sound.i().getHaveSoundPlayState()ldm.Sound.i().soundStop()l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|lif (r4.game_state == 98) goto L25l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|lr4.temp_gamestate = r4.game_statel}"];
Node_8 [shape=record,label="{8\:\ 0x0048|l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|lif (main.GameRun.run_state == 98) goto L28l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|lr4.temp_state = main.GameRun.run_statel}"];
Node_11 [shape=record,label="{11\:\ 0x0050|lmain.GameRun.run_state = 98lr4.game_state = 98l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{public void main.MainCanvas.hideNotifyMy((r4v0 'this' main.MainCanvas A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:9:0x004a \-\> B:11:0x0050, CROSS_EDGE: B:6:0x0042 \-\> B:8:0x0048, CROSS_EDGE: B:4:0x002d \-\> B:12:0x0054, CROSS_EDGE: B:2:0x0029 \-\> B:12:0x0054\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_13;
Node_15 -> Node_13;
}

