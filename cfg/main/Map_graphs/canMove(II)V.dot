digraph "CFG formain.Map.canMove(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lbyte r1 = (byte) r7lr6.my.speed_x = r1lbyte r1 = (byte) r8lr6.my.speed_y = r1l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|lif ((r6.my.x + r6.my.speed_x) \< 0) goto L74l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|lif (((r6.my.x + r6.my.speed_x) + 19) \>= (r6.cols * 20)) goto L74l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|lif ((r6.my.y + r6.my.speed_y) \< 0) goto L74l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|lif (((r6.my.y + r6.my.speed_y) + 19) \>= (r6.rows * 20)) goto L74l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|lr6.roadType = checkMap(r6.my.x, r6.my.y, r6.my.speed_x, r6.my.speed_y)l}"];
Node_10 [shape=record,label="{10\:\ 0x005d|lif (r6.roadType != 0) goto L59l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|linitMoveMy()l}"];
Node_12 [shape=record,label="{12\:\ 0x0062|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_14 [shape=record,label="{14\:\ 0x0063|l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|lif (checkMoveOff(r6.checkNpcT) == false) goto L62l}"];
Node_16 [shape=record,label="{16\:\ 0x006b|linitMoveMy()l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_18 [shape=record,label="{18\:\ 0x006f|l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|lif (r6.checkNpcT == (\-1)) goto L66l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|lif (isCheckNpcOff() == false) goto L73l}"];
Node_22 [shape=record,label="{22\:\ 0x00a2|ldm.Ms.i().keyRelease()lsetMoveStop_m()l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_24 [shape=record,label="{24\:\ 0x0079|lr6.roadType = isMapChenk(r6.roadType)l}"];
Node_25 [shape=record,label="{25\:\ 0x0083|lif (r6.roadType != (\-1)) goto L69l}"];
Node_26 [shape=record,label="{26\:\ 0x0085|lmoveOff((byte) 3, (byte) 1, \-r6.my.speed)l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_28 [shape=record,label="{28\:\ 0x0090|l}"];
Node_29 [shape=record,label="{29\:\ 0x0093|lif (r6.roadType != (\-2)) goto L72l}"];
Node_30 [shape=record,label="{30\:\ 0x0095|lmoveOff((byte) 4, (byte) 2, r6.my.speed)l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_32 [shape=record,label="{32\:\ 0x009e|lcheckAnole()l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_34 [shape=record,label="{34\:\ 0x00ad|lsetMoveStop_m()lr6.checkType = checkIfOther(r6.door, r6.my.x, r6.my.y)l}"];
Node_35 [shape=record,label="{35\:\ 0x00c2|lif (r6.checkType == (\-1)) goto L86l}"];
Node_36 [shape=record,label="{36\:\ 0x00c4|l}"];
Node_37 [shape=record,label="{37\:\ 0x00cc|lif (r6.door[r6.checkType][5] != 0) goto L87l}"];
Node_38 [shape=record,label="{38\:\ 0x00ce|l}"];
Node_39 [shape=record,label="{39\:\ 0x00d8|lif (r6.map_key != r6.door[r6.checkType][2]) goto L88l}"];
Node_40 [shape=record,label="{40\:\ 0x00da|lr6.my.state = 5lr6.get_meet = r6.checkTypel}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{private void main.Map.canMove((r6v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r7v0 'temp_xspeed' int A[D('temp_xspeed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'temp_yspeed' int A[D('temp_yspeed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:16:0x006b \-\> B:12:0x0062, CROSS_EDGE: B:26:0x0085 \-\> B:12:0x0062, CROSS_EDGE: B:30:0x0095 \-\> B:12:0x0062, CROSS_EDGE: B:32:0x009e \-\> B:12:0x0062, CROSS_EDGE: B:22:0x00a2 \-\> B:12:0x0062, CROSS_EDGE: B:19:0x0071 \-\> B:24:0x0079, CROSS_EDGE: B:35:0x00c2 \-\> B:12:0x0062, CROSS_EDGE: B:37:0x00cc \-\> B:12:0x0062, CROSS_EDGE: B:39:0x00d8 \-\> B:12:0x0062, CROSS_EDGE: B:40:0x00da \-\> B:12:0x0062, CROSS_EDGE: B:6:0x0032 \-\> B:34:0x00ad, CROSS_EDGE: B:4:0x0027 \-\> B:34:0x00ad, CROSS_EDGE: B:2:0x0016 \-\> B:34:0x00ad\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_34;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_34;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_34;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_34;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_24[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_13;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_13;
Node_32 -> Node_33;
Node_33 -> Node_13;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_43;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_13;
Node_42 -> Node_13;
Node_43 -> Node_13;
Node_44 -> Node_13;
}

