digraph "CFG formain.Map.checkMap(IIII)B" {
subgraph cluster_Region_553871077 {
label = "R(2:1|(2:(2:3|4)|(1:(2:(1:34)|(2:14|(2:(2:(1:22)|21)|(2:23|(2:(2:29|30)|(1:32)))))))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|lr8.checkNpcT = (byte) \-1lr8.checkType = checkIfOther(r8.item, r9 + r11, r10 + r12)l}"];
subgraph cluster_Region_1572219616 {
label = "R(2:(2:3|4)|(1:(2:(1:34)|(2:14|(2:(2:(1:22)|21)|(2:23|(2:(2:29|30)|(1:32))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_423081553 {
label = "IF [B:2:0x0015] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0015|lif (r8.checkType != (\-1)) goto L39l}"];
subgraph cluster_Region_913858963 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|lr8.checkNpcT = (byte) \-2l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|RETURN\lORIG_RETURN\l|lreturn (byte) 1l}"];
}
}
subgraph cluster_Region_217456119 {
label = "R(1:(2:(1:34)|(2:14|(2:(2:(1:22)|21)|(2:23|(2:(2:29|30)|(1:32))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_Region_1627113379 {
label = "R(2:(1:34)|(2:14|(2:(2:(1:22)|21)|(2:23|(2:(2:29|30)|(1:32))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1146777811 {
label = "IF [B:7:0x001e, B:9:0x0026, B:11:0x002a, B:13:0x0032] THEN: R(1:34) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|lif ((r9 + r11) \< 0) goto L49l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|ADDED_TO_REGION\l|lif ((r9 + r11) \>= (r8.cols * 20)) goto L49l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|ADDED_TO_REGION\l|lif ((r10 + r12) \< 0) goto L49l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|ADDED_TO_REGION\l|lif ((r10 + r12) \>= (r8.rows * 20)) goto L49l}"];
subgraph cluster_Region_836498738 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|lreturn (byte) 1l}"];
}
}
subgraph cluster_Region_234774363 {
label = "R(2:14|(2:(2:(1:22)|21)|(2:23|(2:(2:29|30)|(1:32)))))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0036|lr8.checkType = checkIfNpc(r8.npc[0], r9 + r11, r10 + r12)l}"];
subgraph cluster_Region_864442264 {
label = "R(2:(2:(1:22)|21)|(2:23|(2:(2:29|30)|(1:32))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_617440723 {
label = "IF [B:15:0x0046] THEN: R(2:(1:22)|21) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0046|lif (r8.checkType != (\-1)) goto L52l}"];
subgraph cluster_Region_1255237149 {
label = "R(2:(1:22)|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_900398235 {
label = "IF [B:17:0x0054, B:19:0x0062] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0054|lif (r8.npcNameData[r8.checkType].equals(\"路人\") == false) goto L56l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|ADDED_TO_REGION\l|lif (r8.npc[0][r8.checkType].other[5] \> 0) goto L56l}"];
subgraph cluster_Region_881936161 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0064|lr8.checkNpcT = r8.checkTypel}"];
}
}
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|lreturn (byte) 1l}"];
}
}
subgraph cluster_Region_2076004253 {
label = "R(2:23|(2:(2:29|30)|(1:32)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x006a|lr8.checkType = checkIfOther(r8.door, r9 + r11, r10 + r12)l}"];
subgraph cluster_Region_974991225 {
label = "R(2:(2:29|30)|(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1488011909 {
label = "IF [B:24:0x0078, B:26:0x0082, B:28:0x008e] THEN: R(2:29|30) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0078|lif (r8.checkType != (\-1)) goto L60l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|ADDED_TO_REGION\l|lif (r8.door[r8.checkType][5] == 2) goto L64l}"];
Node_28 [shape=record,label="{28\:\ 0x008e|ADDED_TO_REGION\l|lif (r8.map_key == r8.door[r8.checkType][2]) goto L64l}"];
subgraph cluster_Region_1713880829 {
label = "R(2:29|30)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0090|lr8.my.state = (byte) 5lr8.get_meet = r8.checkTypel}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|lreturn (byte) 0l}"];
}
}
subgraph cluster_Region_2004337667 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|lreturn checkWorld(r9, r10, r11, r12, false)l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001c|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020|l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002c|l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0048|l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0056|l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0068|l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x007a|l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0084|l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x009a|l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0034|l}"];
MethodNode[shape=record,label="{private byte main.Map.checkMap((r8v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r9v0 'A_X' int A[D('A_X' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'A_Y' int A[D('A_Y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 '_speed_x' int A[D('_speed_x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 '_speed_y' int A[D('_speed_y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:33:0x0034 \-\> B:4:0x001b, CROSS_EDGE: B:20:0x0068 \-\> B:4:0x001b, CROSS_EDGE: B:19:0x0062 \-\> B:20:0x0068, CROSS_EDGE: B:17:0x0054 \-\> B:22:0x0064, CROSS_EDGE: B:29:0x0090 \-\> B:4:0x001b, CROSS_EDGE: B:31:0x009a \-\> B:4:0x001b, CROSS_EDGE: B:26:0x0082 \-\> B:29:0x0090, CROSS_EDGE: B:24:0x0078 \-\> B:31:0x009a, CROSS_EDGE: B:11:0x002a \-\> B:33:0x0034, CROSS_EDGE: B:9:0x0026 \-\> B:33:0x0034, CROSS_EDGE: B:7:0x001e \-\> B:33:0x0034\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_33;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_33;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_33;
Node_13 -> Node_33;
Node_13 -> Node_14[style=dashed];
Node_34 -> Node_5;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_23[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_19 -> Node_22;
Node_19 -> Node_20[style=dashed];
Node_22 -> Node_20;
Node_21 -> Node_5;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_31[style=dashed];
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_28 -> Node_29;
Node_28 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_5;
Node_32 -> Node_5;
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_31 -> Node_32;
Node_33 -> Node_34;
}

