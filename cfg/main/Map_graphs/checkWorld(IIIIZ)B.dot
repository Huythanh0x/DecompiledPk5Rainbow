digraph "CFG formain.Map.checkWorld(IIIIZ)B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lr1 = 0lr0 = 1l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|lif (r8 != 0) goto L46l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|lif ((r6 % 20) != 0) goto L49l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|lr0 = 2l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|SYNTHETIC\lPHI: r0l  0x000f: PHI (r0v1 'check_n' byte) = (r0v0 'check_n' byte), (r0v0 'check_n' byte), (r0v2 'check_n' byte) binds: [B:35:0x0008, B:37:0x000c, B:5:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|LOOP_START\lPHI: r1l  0x000f: PHI (r1v1 'i' byte) = (r1v0 'i' byte), (r1v2 'i' byte) binds: [B:6:0x000f, B:21:0x0058] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x000f\-\>B:21:0x0058\l|lif (r1 \< r0) goto L53l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|lif (r9 != 0) goto L63l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|lbyte r3 = (byte) (((r1 * 20) + r7) \/ 20)l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|lif (r8 \< 0) goto L62l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|lint r4 = ((r6 + r8) + 19) \/ 20l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|PHI: r4l  0x0023: PHI (r4v26 int) = (r4v25 int), (r4v29 int) binds: [B:27:0x0036, B:11:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|lbyte r2 = (byte) r4l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|PHI: r2 r3l  0x0024: PHI (r2v1 'ix' byte) = (r2v0 'ix' byte), (r2v2 'ix' byte) binds: [B:31:0x0049, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]l  0x0024: PHI (r3v1 'iy' byte) = (r3v0 'iy' byte), (r3v2 'iy' byte) binds: [B:31:0x0049, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|lif (r10 == false) goto L68l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|lif (r5.worldData[r2][r3] == 0) goto L75l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|SYNTHETIC\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|lreturn (byte) r5.worldData[r2][r3]l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|SYNTHETIC\l|l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|LOOP_END\lLOOP:0: B:7:0x000f\-\>B:21:0x0058\l|lbyte r1 = (byte) (r1 + 1)l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|l}"];
Node_23 [shape=record,label="{23\:\ 0x0054|lif (isCan_not_pass(r2, r3) == false) goto L76l}"];
Node_24 [shape=record,label="{24\:\ 0x0056|SYNTHETIC\l|l}"];
Node_25 [shape=record,label="{25\:\ 0x0056|SYNTHETIC\lRETURN\l|lreturn 1l}"];
Node_26 [shape=record,label="{26\:\ 0x0058|SYNTHETIC\l|l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|lint r4 = (r6 + r8) \/ 20l}"];
Node_28 [shape=record,label="{28\:\ 0x003b|lbyte r2 = (byte) (((r1 * 20) + r6) \/ 20)l}"];
Node_29 [shape=record,label="{29\:\ 0x0041|lif (r9 \< 0) goto L67l}"];
Node_30 [shape=record,label="{30\:\ 0x0043|lint r4 = ((r7 + r9) + 19) \/ 20l}"];
Node_31 [shape=record,label="{31\:\ 0x0049|PHI: r4l  0x0049: PHI (r4v7 int) = (r4v6 int), (r4v10 int) binds: [B:32:0x004b, B:30:0x0043] A[DONT_GENERATE, DONT_INLINE]\l|lbyte r3 = (byte) r4l}"];
Node_32 [shape=record,label="{32\:\ 0x004b|lint r4 = (r7 + r9) \/ 20l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|SYNTHETIC\l|l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|RETURN\lORIG_RETURN\l|lreturn 0l}"];
Node_35 [shape=record,label="{35\:\ 0x0008|lif (r9 != 0) goto L77l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|l}"];
Node_37 [shape=record,label="{37\:\ 0x000c|lif ((r7 % 20) == 0) goto L77l}"];
MethodNode[shape=record,label="{private byte main.Map.checkWorld((r5v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r6v0 'A_X' int A[D('A_X' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'A_Y' int A[D('A_Y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 '_speed_x' int A[D('_speed_x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 '_speed_y' int A[D('_speed_y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'mode' boolean A[D('mode' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:17:0x002e \-\> B:36:0x0012, BACK_EDGE: B:21:0x0058 \-\> B:7:0x000f, CROSS_EDGE: B:25:0x0056 \-\> B:36:0x0012, CROSS_EDGE: B:23:0x0054 \-\> B:21:0x0058, CROSS_EDGE: B:27:0x0036 \-\> B:12:0x0023, CROSS_EDGE: B:31:0x0049 \-\> B:13:0x0024, CROSS_EDGE: B:32:0x004b \-\> B:31:0x0049, CROSS_EDGE: B:37:0x000c \-\> B:7:0x000f, CROSS_EDGE: B:35:0x0008 \-\> B:7:0x000f, CROSS_EDGE: B:4:0x0006 \-\> B:5:0x000e, CROSS_EDGE: B:2:0x0002 \-\> B:35:0x0008\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_35;
Node_3 -> Node_4;
Node_4 -> Node_35[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_33[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_28;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_7;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_19;
Node_26 -> Node_21;
Node_27 -> Node_12;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_13;
Node_32 -> Node_31;
Node_33 -> Node_34;
Node_34 -> Node_19;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_6;
Node_36 -> Node_37;
Node_37 -> Node_5[style=dashed];
Node_37 -> Node_6;
}

