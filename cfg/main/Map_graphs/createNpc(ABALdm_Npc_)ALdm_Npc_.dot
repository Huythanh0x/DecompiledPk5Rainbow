digraph "CFG formain.Map.createNpc([B[Ldm\/Npc;)[Ldm\/Npc;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|ldm.Npc[] r8 = (dm.Npc[]) nullldm.Ms.i()lint r2 = dm.Ms.skipldm.Ms.skip = r2 + 1ldm.Npc[] r8 = new dm.Npc[r7[r2]]lr0 = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|LOOP_START\lPHI: r0l  0x0011: PHI (r0v1 'i' int) = (r0v0 'i' int), (r0v5 'i' int) binds: [B:1:0x0000, B:9:0x003d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0011\-\>B:9:0x003d\l|l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|lif (r0 \< r8.length) goto L41l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|ldm.Ms.i()lint r3 = dm.Ms.skipldm.Ms.skip = r3 + 1lr8[r0] = new dm.Npc(r7[r3])lr1 = 0l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|LOOP_START\lPHI: r1l  0x0036: PHI (r1v4 'j' int) = (r1v3 'j' int), (r1v5 'j' int) binds: [B:4:0x0023, B:7:0x0045] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0036\-\>B:7:0x0045\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|lif (r1 \< r8[r0].other.length) goto L45l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|LOOP_END\lLOOP:1: B:5:0x0036\-\>B:7:0x0045\l|lbyte[] r2 = r8[r0].otherldm.Ms.i()lint r3 = dm.Ms.skipldm.Ms.skip = r3 + 1lr2[r1] = r7[r3]lint r1 = r1 + 1l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|SYNTHETIC\l|l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|LOOP_END\lLOOP:0: B:2:0x0011\-\>B:9:0x003d\l|lr8[r0].setXY_npc()lint r0 = r0 + 1l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|SYNTHETIC\l|l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|lif (r6.mapInfo[r6.mapNo * 2] \<= 0) goto L40l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|lr0 = 0l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|LOOP_START\lPHI: r0l  0x001f: PHI (r0v3 'i' int) = (r0v2 'i' int), (r0v4 'i' int) binds: [B:13:0x001e, B:25:0x0071] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:14:0x001f\-\>B:25:0x0071\l|l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|lif (r0 \< r8.length) goto L46l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|l}"];
Node_17 [shape=record,label="{17\:\ 0x0062|lif (r8[r0].other[9] != 1) goto L58l}"];
Node_18 [shape=record,label="{18\:\ 0x0064|lr1 = 0l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|LOOP_START\lPHI: r1l  0x0065: PHI (r1v1 'j' int) = (r1v0 'j' int), (r1v2 'j' int) binds: [B:18:0x0064, B:21:0x0074] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:19:0x0065\-\>B:21:0x0074\l|l}"];
Node_20 [shape=record,label="{20\:\ 0x006a|lif (r1 \< r8[r0].other.length) goto L53l}"];
Node_21 [shape=record,label="{21\:\ 0x0074|LOOP_END\lLOOP:3: B:19:0x0065\-\>B:21:0x0074\l|lbyte[] r2 = r8[r0].otherlbyte[] r3 = r6.mapTemp[r6.mapNo]ldm.Ms.i()lint r4 = dm.Ms.skip2ldm.Ms.skip2 = r4 + 1lr2[r1] = r3[r4]lint r1 = r1 + 1l}"];
Node_22 [shape=record,label="{22\:\ 0x006c|SYNTHETIC\l|l}"];
Node_23 [shape=record,label="{23\:\ 0x006c|lr8[r0].setXY_npc()l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|SYNTHETIC\l|l}"];
Node_25 [shape=record,label="{25\:\ 0x0071|LOOP_END\lLOOP:2: B:14:0x001f\-\>B:25:0x0071\l|lint r0 = r0 + 1l}"];
Node_26 [shape=record,label="{26\:\ 0x0071|SYNTHETIC\l|l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|SYNTHETIC\l|l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|RETURN\l|lreturn r8l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{dm.Npc[] main.Map.createNpc((r6v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r7v0 byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'npc' dm.Npc[] A[D('npc' dm.Npc[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:25:0x0071 \-\> B:14:0x001f, BACK_EDGE: B:21:0x0074 \-\> B:19:0x0065, CROSS_EDGE: B:17:0x0062 \-\> B:25:0x0071, CROSS_EDGE: B:12:0x001c \-\> B:28:0x0022, BACK_EDGE: B:9:0x003d \-\> B:2:0x0011, BACK_EDGE: B:7:0x0045 \-\> B:5:0x0036\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_2;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_28;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_27[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_26 -> Node_25;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

