digraph "CFG formain.Map.drawMapRect(BBIZ)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lint r4 = r13 * 6lint r5 = r14 * 6l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|lif (r12.miniMapMode == false) goto L26l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|lint r4 = r12.mapdataMap[r15][6] * r13lint r5 = r12.mapdataMap[r15][7] * r14l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|PHI: r4 r5l  0x001a: PHI (r4v1 'width' int) = (r4v0 'width' int), (r4v2 'width' int) binds: [B:2:0x0006, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]l  0x001a: PHI (r5v1 'height' int) = (r5v0 'height' int), (r5v2 'height' int) binds: [B:2:0x0006, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|lif (r16 == false) goto L29l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|ldm.Ui.i().drawRectZ(12352252, (r12.mapdataMap[r15][0] * r13) + r12.mapoffx, (r12.mapdataMap[r15][1] * r14) + r12.mapoffy, r4, r5, 5)l}"];
Node_6 [shape=record,label="{6\:\ 0x003d|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|lif (r15 != r12.myMiniMap) goto L38l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|ldm.Ui r1 = dm.Ui.i()lint r0 = r12.mapdataMap[r15][0] * r13lint r2 = r12.mapoffx + r0lint r0 = r12.mapdataMap[r15][1] * r14lr1.drawK1(r2, r12.mapoffy + r0, r4, r5, 4)l}"];
Node_11 [shape=record,label="{11\:\ 0x0060|lmain.GameRun r6 = r12.grljava.lang.String r7 = r12.gr.getNameCity(r15)lint r8 = ((r12.mapdataMap[r15][0] * r13) + r12.mapoffx) + (r4 \>\> 1)lint r9 = (((r12.mapdataMap[r15][1] * r14) + r12.mapoffy) + (r5 \>\> 1)) \- 25l}"];
Node_12 [shape=record,label="{12\:\ 0x008c|lif (r15 != r12.myMiniMap) goto L39l}"];
Node_13 [shape=record,label="{13\:\ 0x008e|lr11 = 0l}"];
Node_14 [shape=record,label="{14\:\ 0x0090|PHI: r11l  0x0090: PHI (r11v1 int) = (r11v0 int), (r11v3 int) binds: [B:19:0x00e1, B:13:0x008e] A[DONT_GENERATE, DONT_INLINE]\l|lr6.showStringM(r7, r8, r9, 4, r11)l}"];
Node_15 [shape=record,label="{15\:\ 0x0095|lif (r15 != r12.myMiniMap) goto L40l}"];
Node_16 [shape=record,label="{16\:\ 0x0097|ldm.Ui.i().drawUi(67, ((r12.mapdataMap[r15][0] * r13) + r12.mapoffx) + (r4 \>\> 1), ((r12.mapdataMap[r15][1] * r14) + r12.mapoffy) + (r5 \>\> 1), 3, 0)l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_19 [shape=record,label="{19\:\ 0x00e1|lr11 = 3l}"];
Node_20 [shape=record,label="{20\:\ 0x00c2|ldm.Ui r1 = dm.Ui.i()lint r0 = r12.mapdataMap[r15][0] * r13lint r2 = r12.mapoffx + r0lint r0 = r12.mapdataMap[r15][1] * r14lr1.drawK0(r2, r12.mapoffy + r0, r4, r5, 2)l}"];
MethodNode[shape=record,label="{private void main.Map.drawMapRect((r12v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r13v0 'ww' byte A[D('ww' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'hh' byte A[D('hh' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'tmap' int A[D('tmap' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'select' boolean A[D('select' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:15:0x0095 \-\> B:6:0x003d, CROSS_EDGE: B:16:0x0097 \-\> B:6:0x003d, CROSS_EDGE: B:19:0x00e1 \-\> B:14:0x0090, CROSS_EDGE: B:20:0x00c2 \-\> B:11:0x0060, CROSS_EDGE: B:2:0x0006 \-\> B:4:0x001a\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_7;
Node_18 -> Node_7;
Node_19 -> Node_14;
Node_20 -> Node_11;
}

