digraph "CFG formain.Map.drawMapRect(BBIZ)V" {
subgraph cluster_Region_1548156191 {
label = "R(3:1|(1:3)|(2:(2:5|6)|(3:(1:10)(1:20)|14|(1:(1:16)))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|lint int r4 = r13 * 6lint int r5 = r14 * 6l}"];
subgraph cluster_IfRegion_982357973 {
label = "IF [B:2:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|lif (r12.miniMapMode != false) goto L25l}"];
subgraph cluster_Region_353816637 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|lint r4 = r12.mapdataMap[r15][6] * r13lint r5 = r12.mapdataMap[r15][7] * r14l}"];
}
}
subgraph cluster_Region_1228248683 {
label = "R(2:(2:5|6)|(3:(1:10)(1:20)|14|(1:(1:16))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1808164604 {
label = "IF [B:4:0x001a] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001a|PHI: r4 r5l  0x001a: PHI (r4v1 'width' int) = (r4v0 'width' int), (r4v2 'width' int) binds: [B:2:0x0006, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]l  0x001a: PHI (r5v1 'height' int) = (r5v0 'height' int), (r5v2 'height' int) binds: [B:2:0x0006, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|lif (r16 != false) goto L27l}"];
subgraph cluster_Region_1734513035 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001c|ldm.Ui.i().drawRectZ(12352252, (r12.mapdataMap[r15][0] * r13) + r12.mapoffx, (r12.mapdataMap[r15][1] * r14) + r12.mapoffy, r4, r5, 5)l}"];
Node_6 [shape=record,label="{6\:\ 0x003d|RETURN\lORIG_RETURN\l|lreturnl}"];
}
}
subgraph cluster_Region_2120936198 {
label = "R(3:(1:10)(1:20)|14|(1:(1:16)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1008528715 {
label = "IF [B:9:0x0040] THEN: R(1:10) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0040|lif (r15 == r12.myMiniMap) goto L31l}"];
subgraph cluster_Region_907797089 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0042|ldm.Ui.i().drawK1(r12.mapoffx + (r12.mapdataMap[r15][0] * r13), r12.mapoffy + (r12.mapdataMap[r15][1] * r14), r4, r5, 4)l}"];
}
subgraph cluster_Region_1574854584 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00c2|ldm.Ui.i().drawK0(r12.mapoffx + (r12.mapdataMap[r15][0] * r13), r12.mapoffy + (r12.mapdataMap[r15][1] * r14), r4, r5, 2)l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0090|PHI: r11l  0x0090: PHI (r11v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr12.gr.showStringM(r12.gr.getNameCity(r15), (r12.mapdataMap[r15][0] * r13) + r12.mapoffx + (r4 \>\> 1), (((r12.mapdataMap[r15][1] * r14) + r12.mapoffy) + (r5 \>\> 1)) \- 25, 4, r15 == r12.myMiniMap ? 0 : 3)l}"];
subgraph cluster_Region_1794762274 {
label = "R(1:(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_261796824 {
label = "IF [B:15:0x0095] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0095|lif (r15 == r12.myMiniMap) goto L37l}"];
subgraph cluster_Region_234345353 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0097|ldm.Ui.i().drawUi(67, (r12.mapdataMap[r15][0] * r13) + r12.mapoffx + (r4 \>\> 1), (r12.mapdataMap[r15][1] * r14) + r12.mapoffy + (r5 \>\> 1), 3, 0)l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x003e|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0060|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x008c|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x008e|l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l|l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l|l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00e1|l}"];
MethodNode[shape=record,label="{private void main.Map.drawMapRect((r12v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r13v0 'ww' byte A[D('ww' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'hh' byte A[D('hh' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'tmap' int A[D('tmap' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'select' boolean A[D('select' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:15:0x0095 \-\> B:6:0x003d, CROSS_EDGE: B:16:0x0097 \-\> B:6:0x003d, CROSS_EDGE: B:19:0x00e1 \-\> B:14:0x0090, CROSS_EDGE: B:20:0x00c2 \-\> B:11:0x0060, CROSS_EDGE: B:2:0x0006 \-\> B:4:0x001a\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_20[style=dashed];
Node_10 -> Node_11;
Node_20 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_17 -> Node_7;
Node_18 -> Node_7;
Node_19 -> Node_14;
}

