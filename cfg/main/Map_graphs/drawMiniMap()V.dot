digraph "CFG formain.Map.drawMiniMap()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lmain.MainCanvas r5 = main.GameRun.mclr5.keyxx = main.MainCanvas.mainxxlmain.MainCanvas r5 = main.GameRun.mclr5.keyyy = main.MainCanvas.mainyyldm.Ui.i().fillRectB()ldm.Ui.i().drawK2(1, 2, main.Constants_H.WIDTH_ \- 2, main.Constants_H.HEIGHT_ \- 2, 0)ldm.Ui.i().drawK1(6, 33, main.Constants_H.WIDTH_ \- 12, (main.Constants_H.HEIGHT_ \- (29 * 3)) \- 15, 1)ldm.Ui.i().drawK1(6, (main.Constants_H.HEIGHT_ \- 6) \- (29 * 2), main.Constants_H.WIDTH_ \- 12, 29 * 2, 2)ldm.Ui.i().drawYesNo(false, true)ldm.Ui.i().drawString(main.Constants_H.TXT_78, main.Constants_H.WIDTH_H_, 4, 17, 1, 2)l}"];
Node_2 [shape=record,label="{2\:\ 0x0076|lif (r22.showArea != (\-1)) goto L46l}"];
Node_3 [shape=record,label="{3\:\ 0x0078|ldm.Ui.i().drawString(main.Constants_H.TXT_79, main.Constants_H.WIDTH_H_, (main.Constants_H.HEIGHT_ \- 4) \- (29 * 2), 16 \| 1, 3, 0)l}"];
Node_4 [shape=record,label="{4\:\ 0x008f|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x0090|lr22.gr.showStringM(new java.lang.StringBuilder(main.Constants_H.TXT_80).append(r22.gr.getNameCity(r22.myMiniMap)).toString(), main.Constants_H.WIDTH_H_, (main.Constants_H.HEIGHT_ \- 4) \- (29 * 2), 10, 3)lmain.Map.g.setClip(6, 33, main.Constants_H.WIDTH_ \- 12, (main.Constants_H.HEIGHT_ \- 15) \- (29 * 3))lr17 = 0lint r5 = main.Constants_H.WIDTH_H_ \- (r22.mapdataMap[r22.selectMap][0] * 18)l}"];
Node_7 [shape=record,label="{7\:\ 0x00f1|lif (r22.miniMapMode == false) goto L59l}"];
Node_8 [shape=record,label="{8\:\ 0x00f3|lint r6 = (r22.mapdataMap[r22.selectMap][6] * 18) \/ 2l}"];
Node_9 [shape=record,label="{9\:\ 0x0106|PHI: r6l  0x0106: PHI (r6v16 int) = (r6v15 int), (r6v45 int) binds: [B:39:0x01b7, B:8:0x00f3] A[DONT_GENERATE, DONT_INLINE]\l|lint r18 = r5 \- r6lr22.mapoffx = dm.Ms.i().mathSpeedN(r22.mapoffx, r18, 10, false)lint r5 = (r22.littleMapClipY \/ 2) \- (r22.mapdataMap[r22.selectMap][1] * 12)l}"];
Node_10 [shape=record,label="{10\:\ 0x0141|lif (r22.miniMapMode == false) goto L60l}"];
Node_11 [shape=record,label="{11\:\ 0x0143|lint r6 = (r22.mapdataMap[r22.selectMap][7] * 12) \/ 2l}"];
Node_12 [shape=record,label="{12\:\ 0x0156|PHI: r6l  0x0156: PHI (r6v24 int) = (r6v23 int), (r6v40 int) binds: [B:38:0x01bb, B:11:0x0143] A[DONT_GENERATE, DONT_INLINE]\l|lint r18 = r5 \- r6lr22.mapoffy = dm.Ms.i().mathSpeedN(r22.mapoffy, r18, 10, false)l}"];
Node_13 [shape=record,label="{13\:\ 0x0173|LOOP_START\lPHI: r17l  0x0173: PHI (r17v1 'j' byte) = (r17v0 'j' byte), (r17v2 'j' byte) binds: [B:12:0x0156, B:27:0x01ce] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:13:0x0173\-\>B:27:0x01ce\l|l}"];
Node_14 [shape=record,label="{14\:\ 0x0183|lif (r17 \< r22.mapdataArea[r22.showArea].length) goto L61l}"];
Node_15 [shape=record,label="{15\:\ 0x01be|lr19 = r22.mapdataArea[r22.showArea][r17]l}"];
Node_16 [shape=record,label="{16\:\ 0x01cc|lif (r19 \>= 0) goto L64l}"];
Node_17 [shape=record,label="{17\:\ 0x01d5|l}"];
Node_18 [shape=record,label="{18\:\ 0x01dd|lif (r22.mapdataMap[r19].length \<= 0) goto L76l}"];
Node_19 [shape=record,label="{19\:\ 0x01df|l}"];
Node_20 [shape=record,label="{20\:\ 0x0210|lif (r22.pkey.isSelect((r22.mapdataMap[r19][0] * 18) + r22.mapoffx, (r22.mapdataMap[r19][1] * 12) + r22.mapoffy, 18 * 6, 12 * 6) == false) goto L69l}"];
Node_21 [shape=record,label="{21\:\ 0x0212|lr22.selectMap = r19l}"];
Node_22 [shape=record,label="{22\:\ 0x0218|l}"];
Node_23 [shape=record,label="{23\:\ 0x021d|lif (r22.miniMapMode != false) goto L73l}"];
Node_24 [shape=record,label="{24\:\ 0x021f|l}"];
Node_25 [shape=record,label="{25\:\ 0x0227|lif (r19 == r22.myMiniMap) goto L77l}"];
Node_26 [shape=record,label="{26\:\ 0x01ce|SYNTHETIC\l|l}"];
Node_27 [shape=record,label="{27\:\ 0x01ce|LOOP_END\lLOOP:0: B:13:0x0173\-\>B:27:0x01ce\l|lr17 = (byte) (r17 + 1)l}"];
Node_28 [shape=record,label="{28\:\ 0x0229|ldrawMapRect((byte) 18, (byte) 12, r19, false)l}"];
Node_29 [shape=record,label="{29\:\ 0x01ce|SYNTHETIC\l|l}"];
Node_30 [shape=record,label="{30\:\ 0x01ce|SYNTHETIC\l|l}"];
Node_31 [shape=record,label="{31\:\ 0x01ce|SYNTHETIC\l|l}"];
Node_32 [shape=record,label="{32\:\ 0x0185|SYNTHETIC\l|l}"];
Node_33 [shape=record,label="{33\:\ 0x0185|l}"];
Node_34 [shape=record,label="{34\:\ 0x018a|lif (r22.miniMapMode != false) goto L58l}"];
Node_35 [shape=record,label="{35\:\ 0x018c|ldrawMapRect((byte) 18, (byte) 12, r22.myMiniMap, false)l}"];
Node_36 [shape=record,label="{36\:\ 0x019d|ldrawMapRect((byte) 18, (byte) 12, r22.selectMap, true)lmain.Map.g.setClip(0, 0, main.Constants_H.WIDTH_, main.Constants_H.HEIGHT_)l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_38 [shape=record,label="{38\:\ 0x01bb|lr6 = 15l}"];
Node_39 [shape=record,label="{39\:\ 0x01b7|lr6 = 25l}"];
MethodNode[shape=record,label="{private void main.Map.drawMiniMap((r22v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:36:0x019d \-\> B:4:0x008f, CROSS_EDGE: B:34:0x018a \-\> B:36:0x019d, BACK_EDGE: B:27:0x01ce \-\> B:13:0x0173, CROSS_EDGE: B:18:0x01dd \-\> B:27:0x01ce, CROSS_EDGE: B:25:0x0227 \-\> B:27:0x01ce, CROSS_EDGE: B:28:0x0229 \-\> B:27:0x01ce, CROSS_EDGE: B:23:0x021d \-\> B:28:0x0229, CROSS_EDGE: B:20:0x0210 \-\> B:22:0x0218, CROSS_EDGE: B:38:0x01bb \-\> B:12:0x0156, CROSS_EDGE: B:39:0x01b7 \-\> B:9:0x0106\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_39;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_38;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_32[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_31[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_30;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_28[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_13;
Node_28 -> Node_29;
Node_29 -> Node_27;
Node_30 -> Node_27;
Node_31 -> Node_27;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_5;
Node_38 -> Node_12;
Node_39 -> Node_9;
}

