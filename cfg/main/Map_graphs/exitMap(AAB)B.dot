digraph "CFG formain.Map.exitMap([[B)B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|lif (r5[r4.get_meet][3] != (\-1)) goto L14l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|lbyte r0 = r4.mapNolr4.mapNo = r4.lastMaplr4.lastMap = r0lr4.lastExit = r4.get_meetl}"];
Node_4 [shape=record,label="{4\:\ 0x0017|RETURN\lORIG_RETURN\l|lreturn \-1l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|lbyte r0 = r4.mapNolr4.mapNo = r5[r4.get_meet][4]lr4.lastMap = r0lr4.lastExit = r4.get_meetlr0 = r5[r4.get_meet][3]l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|lreturn r0l}"];
MethodNode[shape=record,label="{public byte main.Map.exitMap((r4v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r5v0 'door' byte[][] A[D('door' byte[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:6:0x0018 \-\> B:4:0x0017\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

