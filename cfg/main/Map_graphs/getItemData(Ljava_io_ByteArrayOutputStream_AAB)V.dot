digraph "CFG formain.Map.getItemData(Ljava\/io\/ByteArrayOutputStream;[[B)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l|l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0017, blocks: (B:2:0x0000, B:3:0x0005, B:5:0x0009), top: B:1:0x0000 \}\lCatch: Exception \-\> 0x0017\l|lr4.write(r5.length)     \/\/ Catch: java.lang.Exception \-\> L17lr1 = 0l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|LOOP_START\lPHI: r1l  0x0005: PHI (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:2:0x0000, B:6:0x0014] A[DONT_GENERATE, DONT_INLINE]\lTryCatch #0 \{Exception \-\> 0x0017, blocks: (B:2:0x0000, B:3:0x0005, B:5:0x0009), top: B:1:0x0000 \}\lCatch: Exception \-\> 0x0017\lLOOP:0: B:3:0x0005\-\>B:6:0x0014\l|l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|lif (r1 \< r5.length) goto L20l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0017, blocks: (B:2:0x0000, B:3:0x0005, B:5:0x0009), top: B:1:0x0000 \}\lCatch: Exception \-\> 0x0017\l|lr4.write(r5[r1].length)     \/\/ Catch: java.lang.Exception \-\> L17lr4.write(r5[r1])     \/\/ Catch: java.lang.Exception \-\> L17l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|LOOP_END\lLOOP:0: B:3:0x0005\-\>B:6:0x0014\l|lint r1 = r1 + 1l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|SYNTHETIC\l|l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l|l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|ExcHandler: Exception \-\> 0x0017\l|ljava.lang.Exception r2 = move\-exceptionl}"];
Node_12 [shape=record,label="{12\:\ 0x0018|lr2.printStackTrace()l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|RETURN\lORIG_RETURN\l|lreturnl}"];
MethodNode[shape=record,label="{private void main.Map.getItemData((r3v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r4v0 'byteArray' java.io.ByteArrayOutputStream A[D('byteArray' java.io.ByteArrayOutputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'data' byte[][] A[D('data' byte[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0017, blocks: (B:2:0x0000, B:3:0x0005, B:5:0x0009), top: B:1:0x0000 \}\lBACK_EDGE: B:6:0x0014 \-\> B:3:0x0005, CROSS_EDGE: B:12:0x0018 \-\> B:13:0x0008, CROSS_EDGE: B:1:0x0000 \-\> B:11:0x0017\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_9;
}

