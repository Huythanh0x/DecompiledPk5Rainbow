digraph "CFG formain.Map.getMySpeed()B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|lif (r5.anole_type != 0) goto L30l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|RETURN\lORIG_RETURN\l|lreturn 6l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|lif (r5.anole_type != 1) goto L33l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|lreturn 6l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|lif (r5.anole_type != 2) goto L36l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|lreturn 10l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|lif (r5.anole_type != 4) goto L39l}"];
Node_16 [shape=record,label="{16\:\ 0x001d|l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|lreturn 5l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|lif (r5.anole_type != 3) goto L42l}"];
Node_20 [shape=record,label="{20\:\ 0x0024|l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|lreturn 10l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturn 5l}"];
MethodNode[shape=record,label="{public byte main.Map.getMySpeed((r5v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:8:0x000f \-\> B:4:0x0009, CROSS_EDGE: B:12:0x0016 \-\> B:4:0x0009, CROSS_EDGE: B:16:0x001d \-\> B:4:0x0009, CROSS_EDGE: B:20:0x0024 \-\> B:4:0x0009, CROSS_EDGE: B:22:0x0026 \-\> B:4:0x0009\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_5;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_5;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_5;
Node_22 -> Node_23;
Node_23 -> Node_5;
}

