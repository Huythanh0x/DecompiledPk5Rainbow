digraph "CFG formain.Map.goMission(IZ)V" {
subgraph cluster_Region_383713109 {
label = "R(1:(1:(2:7|(2:(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23)|(3:24|(1:26)(1:29)|27)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1301150580 {
label = "R(1:(2:7|(2:(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23)|(3:24|(1:26)(1:29)|27))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1223881306 {
label = "IF [B:2:0x0008, B:4:0x000e] THEN: R(2:7|(2:(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23)|(3:24|(1:26)(1:29)|27))) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|lif (r11.my.state == 18) goto L37l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|ADDED_TO_REGION\l|lif (r11.my.state == 0) goto L37l}"];
subgraph cluster_Region_1127768447 {
label = "R(2:7|(2:(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23)|(3:24|(1:26)(1:29)|27)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|ldm.Ms.i().keyRelease()lr11.bPause = r13lmain.GameRun.run_state = \-10lr11.my.state = (byte) 18lr11.gr.cur_a = (byte) r12lbyte[] byte[] r6 = r11.gr.select[0]lr11.gr.select[0][1] = 0lr6[0] = 0ldm.Ms.i()ldm.Ms.skip = 0lbyte[] byte[] r1 = dm.Ms.i().getStream(\"data\/mission\" + r12 + \".t\", \-1)lr11.sMission = dm.Ms.i().createString2Array(r1)lr11.gr.line_max = (byte) 6lr11.gr.about_a = nulll}"];
subgraph cluster_Region_1685113399 {
label = "R(2:(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23)|(3:24|(1:26)(1:29)|27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_95794619 {
label = "IF [B:8:0x0077] THEN: R(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0077|lif (r12 == 1) goto L39l}"];
subgraph cluster_Region_193275021 {
label = "R(6:9|(2:(1:14)(0)|16)|19|(1:21)|22|23)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0079|lbyte r2 = 0lint r3 = 0lbyte[] byte[] r5 = new byte[50]l}"];
subgraph cluster_LoopRegion_626026280 {
label = "LOOP:0: (2:(1:14)(0)|16)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0082|ADDED_TO_REGION\l|lif (r2 \< r11.sMission.length) goto L46l}"];
subgraph cluster_Region_590753436 {
label = "R(2:(1:14)(0)|16)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_595955740 {
label = "IF [B:13:0x00c6] THEN: R(1:14) ELSE: R(0)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x00c6|lif (isMission(r2) != false) goto L48l}"];
subgraph cluster_Region_17201581 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x00c8|lbyte byte r4 = (byte) (r3 + 1)lr5[r3] = r2lr3 = r4l}"];
}
subgraph cluster_Region_658614306 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_16 [shape=record,label="{16\:\ 0x00ce|LOOP_END\lPHI: r3l  0x00ce: PHI (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:17:0x00ce, B:15:0x00ce] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x007f\-\>B:16:0x00ce\l|lbyte r2 = (byte) (r2 + 1)l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0084|lr11.mDirect = nulllr11.mDirect = new byte[r3]ljava.lang.System.arraycopy(r5, 0, r11.mDirect, 0, r11.mDirect.length)l}"];
subgraph cluster_IfRegion_2029973170 {
label = "IF [B:20:0x0098] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0098|lif (r11.mDirect.length \> 0) goto L44l}"];
subgraph cluster_Region_440247016 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x009a|lr11.gr.setStringB(r11.sMission[r11.mDirect[r11.gr.select[0][0]]][1].toString(), main.Constants_H.WIDTH_ \- 50, 0)l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x00bd|l(byte[]) nulll}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
}
}
subgraph cluster_Region_839767161 {
label = "R(3:24|(1:26)(1:29)|27)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x00d2|lr11.gr.select[0][0] = r11.bMission[14]l}"];
subgraph cluster_IfRegion_405236386 {
label = "IF [B:25:0x00ec] THEN: R(1:26) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00ec|lif (r11.bMission[14] \>= r11.gr.line_max) goto L52l}"];
subgraph cluster_Region_396598378 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00ee|lr11.gr.select[0][1] = (byte) ((r11.gr.select[0][0] \- r11.gr.line_max) + 1)l}"];
}
subgraph cluster_Region_1618892436 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x012b|lr11.gr.select[0][1] = 0l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x010a|lr11.gr.setStringB(r11.sMission[r11.gr.select[0][0]][1].toString(), main.Constants_H.WIDTH_ \- 50, 0)l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0010|ORIG_RETURN\l|l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x007f|LOOP_START\lPHI: r2 r3l  0x007f: PHI (r2v1 'i' byte A[IMMUTABLE_TYPE]) = (r2v0 'i' byte), (r2v2 'i' byte) binds: [B:9:0x0079, B:16:0x00ce] A[DONT_GENERATE, DONT_INLINE]l  0x007f: PHI (r3v1 int A[IMMUTABLE_TYPE]) = (r3v0 int), (r3v2 int) binds: [B:9:0x0079, B:16:0x00ce] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x007f\-\>B:16:0x00ce\l|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x00c2|l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00ce|SYNTHETIC\l|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x00ce|SYNTHETIC\l|l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0084|SYNTHETIC\l|l}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|SYNTHETIC\l|l}"];
MethodNode[shape=record,label="{public void main.Map.goMission((r11v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r12v0 'type' int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'b' boolean A[D('b' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:22:0x00bd \-\> B:5:0x0010, CROSS_EDGE: B:20:0x0098 \-\> B:22:0x00bd, BACK_EDGE: B:16:0x00ce \-\> B:10:0x007f, CROSS_EDGE: B:13:0x00c6 \-\> B:16:0x00ce, CROSS_EDGE: B:27:0x010a \-\> B:5:0x0010, CROSS_EDGE: B:29:0x012b \-\> B:27:0x010a, CROSS_EDGE: B:2:0x0008 \-\> B:7:0x0011\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_24[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_18[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_10;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_6;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_29[style=dashed];
Node_26 -> Node_27;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_16;
Node_18 -> Node_19;
Node_28 -> Node_6;
}

