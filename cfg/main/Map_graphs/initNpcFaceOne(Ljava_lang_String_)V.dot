digraph "CFG formain.Map.initNpcFaceOne(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lif (r5 != null) goto L48l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_3 [shape=record,label="{3\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|lr0 = \-1lr4.faceDir = truel}"];
Node_5 [shape=record,label="{5\:\ 0x000d|lif (r5.equals(main.Constants_H.NAME_TXT_0) == false) goto L61l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|lr0 = 0lr4.faceDir = falsel}"];
Node_7 [shape=record,label="{7\:\ 0x0013|PHI: r0l  0x0013: PHI (r0v7 'id' byte) = l  (r0v1 'id' byte)l  (r0v2 'id' byte)l  (r0v0 'id' byte)l  (r0v3 'id' byte)l  (r0v4 'id' byte)l  (r0v5 'id' byte)l  (r0v6 'id' byte)l  (r0v8 'id' byte)l binds: [B:43:0x0056, B:42:0x007c, B:40:0x008e, B:41:0x0090, B:38:0x0086, B:31:0x006a, B:28:0x0060, B:6:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|lif (r0 \<= (\-1)) goto L84l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|lif (r4.imgFace == null) goto L57l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|lif (r4.faceLast == r0) goto L85l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_14 [shape=record,label="{14\:\ 0x001e|l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|lif (r4.faceDir == false) goto L83l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|lr1 = 50l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|PHI: r1l  0x0024: PHI (r1v23 int) = (r1v22 int), (r1v28 int) binds: [B:19:0x0092, B:16:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|lr4.face_c = (short) r1lr4.faceLast = r0lr4.imgFace = nulllr4.imgFace = dm.Ms.i().createImage(new java.lang.StringBuilder(\"data\/face\/\").append(r0).toString())l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_19 [shape=record,label="{19\:\ 0x0092|lr1 = \-50l}"];
Node_20 [shape=record,label="{20\:\ 0x0095|lnullNpcFace()l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_22 [shape=record,label="{22\:\ 0x0046|l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|lif (r5.equals(main.Constants_H.NAME_TXT_1) != false) goto L65l}"];
Node_24 [shape=record,label="{24\:\ 0x004e|l}"];
Node_25 [shape=record,label="{25\:\ 0x0054|lif (r5.equals(main.Constants_H.NAME_TXT_11) == false) goto L66l}"];
Node_26 [shape=record,label="{26\:\ 0x0058|l}"];
Node_27 [shape=record,label="{27\:\ 0x005e|lif (r5.equals(main.Constants_H.NAME_TXT_2) == false) goto L69l}"];
Node_28 [shape=record,label="{28\:\ 0x0060|lr0 = 2l}"];
Node_29 [shape=record,label="{29\:\ 0x0062|l}"];
Node_30 [shape=record,label="{30\:\ 0x0068|lif (r5.equals(main.Constants_H.NAME_TXT_4) == false) goto L72l}"];
Node_31 [shape=record,label="{31\:\ 0x006a|lr0 = 3l}"];
Node_32 [shape=record,label="{32\:\ 0x006c|l}"];
Node_33 [shape=record,label="{33\:\ 0x0072|lif (r5.equals(main.Constants_H.NAME_TXT_5) != false) goto L76l}"];
Node_34 [shape=record,label="{34\:\ 0x0074|l}"];
Node_35 [shape=record,label="{35\:\ 0x007a|lif (r5.equals(main.Constants_H.NAME_TXT_3) == false) goto L77l}"];
Node_36 [shape=record,label="{36\:\ 0x007e|l}"];
Node_37 [shape=record,label="{37\:\ 0x0084|lif (r5.equals(main.Constants_H.NAME_TXT_12) == false) goto L80l}"];
Node_38 [shape=record,label="{38\:\ 0x0086|lr0 = 5l}"];
Node_39 [shape=record,label="{39\:\ 0x0088|l}"];
Node_40 [shape=record,label="{40\:\ 0x008e|lif (r5.equals(main.Constants_H.NAME_TXT_13) == false) goto L51l}"];
Node_41 [shape=record,label="{41\:\ 0x0090|lr0 = 6l}"];
Node_42 [shape=record,label="{42\:\ 0x007c|lr0 = 4l}"];
Node_43 [shape=record,label="{43\:\ 0x0056|lr0 = 1l}"];
MethodNode[shape=record,label="{public void main.Map.initNpcFaceOne((r4v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r5v0 'name' java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:12:0x001c \-\> B:2:0x0002, CROSS_EDGE: B:17:0x0024 \-\> B:2:0x0002, CROSS_EDGE: B:19:0x0092 \-\> B:17:0x0024, CROSS_EDGE: B:10:0x0018 \-\> B:14:0x001e, CROSS_EDGE: B:20:0x0095 \-\> B:2:0x0002, CROSS_EDGE: B:43:0x0056 \-\> B:7:0x0013, CROSS_EDGE: B:28:0x0060 \-\> B:7:0x0013, CROSS_EDGE: B:31:0x006a \-\> B:7:0x0013, CROSS_EDGE: B:42:0x007c \-\> B:7:0x0013, CROSS_EDGE: B:38:0x0086 \-\> B:7:0x0013, CROSS_EDGE: B:40:0x008e \-\> B:7:0x0013, CROSS_EDGE: B:41:0x0090 \-\> B:7:0x0013, CROSS_EDGE: B:33:0x0072 \-\> B:42:0x007c, CROSS_EDGE: B:23:0x004c \-\> B:43:0x0056\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_22;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_3;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_3;
Node_19 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_3;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_43;
Node_24 -> Node_25;
Node_25 -> Node_43[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_7;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_7;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_42[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_7;
Node_39 -> Node_40;
Node_40 -> Node_7;
Node_40 -> Node_41[style=dashed];
Node_41 -> Node_7;
Node_42 -> Node_7;
Node_43 -> Node_7;
}

