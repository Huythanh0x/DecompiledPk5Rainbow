digraph "CFG formain.Map.insertNpc()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|lif (r9.npc != null) goto L31l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_4 [shape=record,label="{4\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|lr0 = 1l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|LOOP_START\lPHI: r0l  0x0008: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v2 'i' byte) binds: [B:5:0x0006, B:22:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0008\-\>B:22:0x0010\l|l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|lif (r0 \>= r9.npcList.length) goto L45l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|lr1 = r0l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|LOOP_START\lPHI: r1l  0x000e: PHI (r1v1 'j' byte) = (r1v0 'j' byte), (r1v2 'j' byte) binds: [B:8:0x000d, B:17:0x0041] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x000e\-\>B:17:0x0041\l|lif (r1 \> 0) goto L37l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|lshort r3 = getNpcListY(r1)lshort r4 = getNpcListY(r1 \- 1)l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|lif (r3 \> r4) goto L47l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|lif (r3 != r4) goto L43l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|lif (r3 != r4) goto L49l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|lif (r9.npcList[r1 \- 1] != (\-1)) goto L50l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|SYNTHETIC\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|LOOP_END\lLOOP:1: B:9:0x000e\-\>B:17:0x0041\l|lbyte r1 = (byte) (r1 \- 1)l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|SYNTHETIC\l|l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|lbyte r2 = r9.npcList[r1]lr9.npcList[r1] = r9.npcList[r1 \- 1]lr9.npcList[r1 \- 1] = r2l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|SYNTHETIC\l|l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|SYNTHETIC\l|l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|LOOP_END\lLOOP:0: B:6:0x0008\-\>B:22:0x0010\l|lbyte r0 = (byte) (r0 + 1)l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|SYNTHETIC\l|l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|SYNTHETIC\l|l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{public void main.Map.insertNpc((r9v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:7:0x000b \-\> B:3:0x0005, BACK_EDGE: B:22:0x0010 \-\> B:6:0x0008, CROSS_EDGE: B:11:0x001e \-\> B:22:0x0010, BACK_EDGE: B:17:0x0041 \-\> B:9:0x000e, CROSS_EDGE: B:15:0x002b \-\> B:17:0x0041, CROSS_EDGE: B:13:0x0022 \-\> B:17:0x0041, CROSS_EDGE: B:12:0x0020 \-\> B:19:0x002d\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_24;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_23[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_19[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_9;
Node_18 -> Node_17;
Node_19 -> Node_20;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_6;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_25 -> Node_4;
}

