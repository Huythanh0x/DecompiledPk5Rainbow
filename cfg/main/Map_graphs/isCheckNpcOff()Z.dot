digraph "CFG formain.Map.isCheckNpcOff()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|lif (r8.checkNpcT \>= 0) goto L28l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|RETURN\lORIG_RETURN\l|lreturn falsel}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|lif (r8.my.speed_x == 0) goto L34l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|ldm.Ms.i()lbyte r0 = (byte) (20 \- dm.Ms.abs(r8.my.y \- r8.npc[0][r8.checkNpcT].y))l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|lif (r0 \<= 0) goto L40l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|lif (r0 \>= 11) goto L40l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|lreturn truel}"];
Node_13 [shape=record,label="{13\:\ 0x0056|l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|lreturn falsel}"];
Node_15 [shape=record,label="{15\:\ 0x0031|l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|lif (r8.my.speed_y == 0) goto L40l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|ldm.Ms.i()lbyte r0 = (byte) (20 \- dm.Ms.abs(r8.my.x \- r8.npc[0][r8.checkNpcT].x))l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|lif (r0 \<= 0) goto L40l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|lif (r0 \>= 11) goto L40l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|lreturn truel}"];
MethodNode[shape=record,label="{private boolean main.Map.isCheckNpcOff((r8v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:11:0x002f \-\> B:4:0x000b, CROSS_EDGE: B:13:0x0056 \-\> B:4:0x000b, CROSS_EDGE: B:9:0x002b \-\> B:13:0x0056, CROSS_EDGE: B:20:0x0054 \-\> B:4:0x000b, CROSS_EDGE: B:19:0x0052 \-\> B:13:0x0056, CROSS_EDGE: B:18:0x0050 \-\> B:13:0x0056, CROSS_EDGE: B:16:0x0035 \-\> B:13:0x0056\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_13 -> Node_14;
Node_14 -> Node_5;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_13;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_5;
}

