digraph "CFG formain.Map.moveOff(BBI)V" {
subgraph cluster_Region_1411328338 {
label = "R(3:(1:3)(1:(1:17))|7|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1110145720 {
label = "IF [B:2:0x0005] THEN: R(1:3) ELSE: R(1:(1:17))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|lif (r3.my.speed_x == 0) goto L22l}"];
subgraph cluster_Region_1804351099 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|lr3.my.dir = r4l}"];
}
subgraph cluster_Region_1414039720 {
label = "R(1:(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2033217226 {
label = "IF [B:16:0x0030] THEN: R(1:17) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0030|lif (r3.my.speed_y == 0) goto L33l}"];
subgraph cluster_Region_1624712686 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0032|lr3.my.dir = r5l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0014|PHI: r1l  0x0014: PHI (r1v3 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr3.my.speed_x = (byte) (r3.my.speed_x != 0 ? 0 : r6)l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|PHI: r1l  0x0020: PHI (r1v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr3.my.speed_y = (byte) (r3.my.speed_y != 0 ? 0 : r6)lcheckMoveOff(r3.checkNpcT)linitMoveMy()l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0011|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001d|l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002b|l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0039|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0037|l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002c|l}"];
MethodNode[shape=record,label="{private void main.Map.moveOff((r3v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r4v0 'dirx' byte A[D('dirx' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'diry' byte A[D('diry' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'speed' int A[D('speed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:13:0x0039 \-\> B:10:0x0020, CROSS_EDGE: B:14:0x0037 \-\> B:7:0x0014, CROSS_EDGE: B:16:0x0030 \-\> B:4:0x000b, CROSS_EDGE: B:17:0x0032 \-\> B:4:0x000b\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_15[style=dashed];
Node_3 -> Node_4;
Node_16 -> Node_4[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_4;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_10;
Node_14 -> Node_7;
Node_15 -> Node_16;
}

