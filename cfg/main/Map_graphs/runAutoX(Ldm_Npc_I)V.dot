digraph "CFG formain.Map.runAutoX(Ldm\/Npc;I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|lif (r7.timeMove != 0) goto L53l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|ldm.Ms.i()l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|lif (dm.Ms.getRandom(100) \>= 50) goto L50l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|lr1 = 3l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|PHI: r1l  0x0017: PHI (r1v22 byte) = (r1v21 byte), (r1v40 byte) binds: [B:16:0x0031, B:5:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|lr7.dir = r1l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|lif (r7.dir != 3) goto L51l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|lshort r0 = (short) (r7.x \- (r7.other[0] * 20))l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|PHI: r0l  0x0027: PHI (r0v1 't' short) = (r0v0 't' short), (r0v2 't' short) binds: [B:15:0x0033, B:8:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|lif (r0 \> 20) goto L52l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|lr7.timeMove = (byte) (r0 \/ r7.speed)l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|ldm.Ms.i()lr7.timeMove = (byte) (dm.Ms.getRandom(((r0 \- 20) \/ r7.speed) + 1) + (20 \/ r7.speed))l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_15 [shape=record,label="{15\:\ 0x0033|lshort r0 = (short) (((r7.other[0] + r8) * 20) \- r7.x)l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|lr1 = 4l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|lif (r7.timeMove \<= 0) goto L70l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|l}"];
Node_20 [shape=record,label="{20\:\ 0x005c|lif (r7.frame_c \>= 1) goto L71l}"];
Node_21 [shape=record,label="{21\:\ 0x005e|l}"];
Node_22 [shape=record,label="{22\:\ 0x0060|lif (r7.dir != 3) goto L66l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|lint r1 = \-r7.speedl}"];
Node_24 [shape=record,label="{24\:\ 0x0065|PHI: r1l  0x0065: PHI (r1v5 int) = (r1v4 int), (r1v18 int) binds: [B:34:0x0081, B:23:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|l}"];
Node_25 [shape=record,label="{25\:\ 0x0069|lif (isAuto_canMove(r7, r1, 0) == false) goto L68l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|l}"];
Node_27 [shape=record,label="{27\:\ 0x006d|lif (r7.dir != 3) goto L67l}"];
Node_28 [shape=record,label="{28\:\ 0x006f|lint r1 = \-r7.speedl}"];
Node_29 [shape=record,label="{29\:\ 0x0072|PHI: r1l  0x0072: PHI (r1v11 int) = (r1v10 int), (r1v16 int) binds: [B:31:0x0084, B:28:0x006f] A[DONT_GENERATE, DONT_INLINE]\l|lr7.setSpeedXY(r1, 0)lr7.timeMove = (byte) (r7.timeMove \- 1)lr7.frame_c = 1lr7.setActionNo(true)l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_31 [shape=record,label="{31\:\ 0x0084|lbyte r1 = r7.speedl}"];
Node_32 [shape=record,label="{32\:\ 0x0087|lr7.timeMove = main.Constants_H.SMS_PAUSElr7.frame_c = \-1lr7.setActionNo(false)l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_34 [shape=record,label="{34\:\ 0x0081|lbyte r1 = r7.speedl}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{private void main.Map.runAutoX((r6v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r7v0 '_npc' dm.Npc A[D('_npc' dm.Npc), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'w' int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:13:0x003f \-\> B:11:0x0030, CROSS_EDGE: B:15:0x0033 \-\> B:9:0x0027, CROSS_EDGE: B:16:0x0031 \-\> B:6:0x0017, CROSS_EDGE: B:18:0x0058 \-\> B:11:0x0030, CROSS_EDGE: B:20:0x005c \-\> B:11:0x0030, CROSS_EDGE: B:29:0x0072 \-\> B:11:0x0030, CROSS_EDGE: B:31:0x0084 \-\> B:29:0x0072, CROSS_EDGE: B:32:0x0087 \-\> B:11:0x0030, CROSS_EDGE: B:34:0x0081 \-\> B:24:0x0065\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_12;
Node_15 -> Node_9;
Node_16 -> Node_6;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_36;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_35;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_12;
Node_31 -> Node_29;
Node_32 -> Node_33;
Node_33 -> Node_12;
Node_34 -> Node_24;
Node_35 -> Node_12;
Node_36 -> Node_12;
}

