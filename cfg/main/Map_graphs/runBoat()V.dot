digraph "CFG formain.Map.runBoat()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|lif (r4.boatSelect == (\-1)) goto L28l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|lif (r4.my.ix != (\-1)) goto L36l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|lif (r4.my.iy == (\-1)) goto L29l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|lr4.my.state = 9lmain.GameRun r0 = r4.grlbyte r1 = (byte) (r0.cur_a + 2)lr0.cur_a = r1l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|lif (r1 \< r4.boatCourse[r4.boatSelect].length) goto L32l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|lr4.boatSelect = \-1lr4.my.state = 0lr4.anole_type = \-1lsetAnole()l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|lr4.checkType = checkIfOther(r4.door, r4.my.x, r4.my.y)l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|lif (r4.checkType == (\-1)) goto L35l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|lr4.my.state = 5lr4.get_meet = r4.checkTypel}"];
Node_15 [shape=record,label="{15\:\ 0x0054|lr4.my.setIXY(r4.boatCourse[r4.boatSelect][r4.gr.cur_a], r4.boatCourse[r4.boatSelect][r4.gr.cur_a + 1])l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_19 [shape=record,label="{19\:\ 0x0011|RETURN\lORIG_RETURN\l|lreturnl}"];
MethodNode[shape=record,label="{private void main.Map.runBoat((r4v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:9:0x002a \-\> B:19:0x0011, CROSS_EDGE: B:15:0x0054 \-\> B:19:0x0011, CROSS_EDGE: B:13:0x0049 \-\> B:15:0x0054, CROSS_EDGE: B:4:0x0009 \-\> B:19:0x0011, CROSS_EDGE: B:2:0x0003 \-\> B:19:0x0011\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_17[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_11;
Node_17 -> Node_11;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

