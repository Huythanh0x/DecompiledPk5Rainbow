digraph "CFG formain.Map.runEvent_item_add_del(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|lr0 = 0l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|lif (r7.eventGoing != 0) goto L46l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|lr7.now_eV1 = r7.event[r8][r7.event_now[r8] + 2]lr7.now_eV2 = r7.event[r8][r7.event_now[r8] + 3]l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|lif (r7.event[r8][r7.event_now[r8] + 3] \< 0) goto L41l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|lbyte r0 = r7.gr.addItem(r7.now_eV1, r7.now_eV2)l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|PHI: r0l  0x003c: PHI (r0v2 'event_temp' int) = (r0v1 'event_temp' int), (r0v0 'event_temp' int), (r0v3 'event_temp' int) binds: [B:18:0x009d, B:17:0x008c, B:5:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|lif (r0 == (\-1)) goto L39l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|lmain.GameRun r1 = r7.grl}"];
Node_8 [shape=record,label="{8\:\ 0x0044|lif (r7.now_eV2 \< 0) goto L45l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|ljava.lang.String r3 = main.Constants_H.MONEY_TXT_7l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|PHI: r3l  0x0048: PHI (r3v5 java.lang.String) = (r3v4 java.lang.String), (r3v12 java.lang.String) binds: [B:11:0x00a6, B:9:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|ljava.lang.StringBuilder r2 = new java.lang.StringBuilder(java.lang.String.valueOf(r3)).append(r7.gr.getNameItem(r7.now_eV1)).append(\"x\")ldm.Ms.i()lr1.say(r2.append(dm.Ms.abs(r7.now_eV2)).toString(), 0)l}"];
Node_11 [shape=record,label="{11\:\ 0x00a6|ljava.lang.String r3 = main.Constants_H.MONEY_TXT_13l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|lr7.eventGoing = 1l}"];
Node_13 [shape=record,label="{13\:\ 0x0077|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_15 [shape=record,label="{15\:\ 0x0078|lbyte r1 = r7.gr.findItem(\-2, r7.now_eV1, true)ldm.Ms.i()l}"];
Node_16 [shape=record,label="{16\:\ 0x008a|lif (r1 \< dm.Ms.abs(r7.now_eV2)) goto L44l}"];
Node_17 [shape=record,label="{17\:\ 0x008c|lmain.GameRun r1 = r7.grlbyte r2 = r7.now_eV1ldm.Ms.i()lr1.deleteItems(r2, dm.Ms.abs(r7.now_eV2))l}"];
Node_18 [shape=record,label="{18\:\ 0x009d|lr0 = \-1lr7.gr.say(main.Constants_H.TXT_58, 0)l}"];
Node_19 [shape=record,label="{19\:\ 0x00a9|l}"];
Node_20 [shape=record,label="{20\:\ 0x00ad|lif (r7.gr.say_c != 0) goto L51l}"];
Node_21 [shape=record,label="{21\:\ 0x00af|lif (0 != (\-1)) goto L50l}"];
Node_22 [shape=record,label="{22\:\ 0x00b1|lsetEventNow(r8, true)l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_24 [shape=record,label="{24\:\ 0x00b5|lshort[] r1 = r7.event_nowlr1[r8] = (short) (r1[r8] + 4)lnextEvent(4368)l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{private void main.Map.runEvent_item_add_del((r7v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r8v0 'i' int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:11:0x00a6 \-\> B:10:0x0048, CROSS_EDGE: B:6:0x003c \-\> B:12:0x0075, CROSS_EDGE: B:17:0x008c \-\> B:6:0x003c, CROSS_EDGE: B:18:0x009d \-\> B:6:0x003c, CROSS_EDGE: B:20:0x00ad \-\> B:13:0x0077, CROSS_EDGE: B:22:0x00b1 \-\> B:13:0x0077, CROSS_EDGE: B:24:0x00b5 \-\> B:13:0x0077\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_6;
Node_18 -> Node_6;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_26 -> Node_14;
}

