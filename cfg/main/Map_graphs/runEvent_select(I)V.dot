digraph "CFG formain.Map.runEvent_select(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|lif (r11.my.state == 12) goto L45l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|lif (r11.my.state == 13) goto L45l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|lif (r11.my.state == 14) goto L45l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|lr11.sEvent_eV2 = r11.event[r12][r11.event_now[r12] + 1]lr11.sEvent_eV1 = 0lr11.gr.action_str = nulllmain.GameRun r4 = r11.grlr4.action_str = new java.lang.String[r11.sEvent_eV2]lr3 = 0l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|LOOP_START\lPHI: r3l  0x0037: PHI (r3v1 'j' byte) = (r3v0 'j' byte), (r3v2 'j' byte) binds: [B:7:0x0018, B:10:0x0058] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0037\-\>B:10:0x0058\l|l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|lif (r3 \< r11.sEvent_eV2) goto L43l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|LOOP_END\lLOOP:0: B:8:0x0037\-\>B:10:0x0058\l|lr11.gr.action_str[r3] = dm.Ms.i().getDialogs(r11.event[r12], ((r11.event_now[r12] + 2) + r11.sEvent_eV1) + 1, r11.event[r12][(r11.event_now[r12] + 2) + r11.sEvent_eV1])lr11.sEvent_eV1 = (byte) (r11.sEvent_eV1 + ((r11.event[r12][(r11.event_now[r12] + 2) + r11.sEvent_eV1] \<\< 1) + 1))lbyte r3 = (byte) (r3 + 1)l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|SYNTHETIC\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|lif (r11.sIfElse == (\-1)) goto L44l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|lr11.event_state = 1lmain.GameRun r4 = r11.grlr4.cur_a = r11.sIfElselr11.my.state = 13lr11.gr.action_str = nulllr11.sIfElse = \-1l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|RETURN\lORIG_RETURN\l|lreturnl}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x00a1|lr11.gr.cur_a = 0lr11.my.state = 12l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_19 [shape=record,label="{19\:\ 0x00ad|l}"];
Node_20 [shape=record,label="{20\:\ 0x00b3|lif (r11.my.state != 13) goto L48l}"];
Node_21 [shape=record,label="{21\:\ 0x00b5|lr11.sEvent_eV1 = (byte) (r11.sEvent_eV1 + 2)lr0 = r11.event[r12][(r11.event_now[r12] + r11.sEvent_eV1) + (r11.gr.cur_a \<\< 1)]lr1 = r11.event[r12][((r11.event_now[r12] + r11.sEvent_eV1) + (r11.gr.cur_a \<\< 1)) + 1]lshort r2 = (short) (((r0 & 255) \<\< 8) \| (r1 & 255))lshort[] r4 = r11.event_nowlr4[r12] = (short) (r4[r12] + ((r11.sEvent_eV1 + (r11.sEvent_eV2 \<\< 1)) + r2))lnextEvent(17)l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_23 [shape=record,label="{23\:\ 0x0105|l}"];
Node_24 [shape=record,label="{24\:\ 0x010b|lif (r11.my.state != 14) goto L54l}"];
Node_25 [shape=record,label="{25\:\ 0x010d|lsetEventNow(r12, true)l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
MethodNode[shape=record,label="{private void main.Map.runEvent_select((r11v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r12v0 'i' int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:17:0x00a1 \-\> B:15:0x0057, BACK_EDGE: B:10:0x0058 \-\> B:8:0x0037, CROSS_EDGE: B:21:0x00b5 \-\> B:15:0x0057, CROSS_EDGE: B:24:0x010b \-\> B:15:0x0057, CROSS_EDGE: B:25:0x010d \-\> B:15:0x0057, CROSS_EDGE: B:4:0x000e \-\> B:19:0x00ad, CROSS_EDGE: B:2:0x0006 \-\> B:19:0x00ad\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_16;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_16;
}

