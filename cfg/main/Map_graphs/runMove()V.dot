digraph "CFG formain.Map.runMove()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|lif (r7.my.ix != (\-1)) goto L41l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|lif (r7.my.iy == (\-1)) goto L47l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|lrunBoat()l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|loneMove(r7.my, \-1)lr1 = 0l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|LOOP_START\lPHI: r1l  0x001b: PHI (r1v1 'j' byte) = (r1v0 'j' byte), (r1v2 'j' byte) binds: [B:6:0x0015, B:29:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001b\-\>B:29:0x002e\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|lif (r1 \< 3) goto L48l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|lr0 = 0l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|LOOP_START\lPHI: r0l  0x0027: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v2 'i' byte) binds: [B:9:0x0026, B:17:0x004b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:10:0x0027\-\>B:17:0x004b\l|l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|lif (r0 \< r7.npc[r1].length) goto L52l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|lif (r7.npc[r1][r0].other[4] == 1) goto L57l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|lif (r7.npc[r1][r0].other[4] == 2) goto L57l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|SYNTHETIC\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|LOOP_END\lLOOP:1: B:10:0x0027\-\>B:17:0x004b\l|lbyte r0 = (byte) (r0 + 1)l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|lif (r7.npc[r1][r0].other[8] \< 5) goto L61l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|lrunAutoMoveNpc(r7.npc[r1][r0], r0)l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|loneMove(r7.npc[r1][r0], r0)l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|SYNTHETIC\l|l}"];
Node_23 [shape=record,label="{23\:\ 0x0071|l}"];
Node_24 [shape=record,label="{24\:\ 0x0079|lif (r7.npc[r1][r0].ix != (\-1)) goto L65l}"];
Node_25 [shape=record,label="{25\:\ 0x007b|l}"];
Node_26 [shape=record,label="{26\:\ 0x0083|lif (r7.npc[r1][r0].iy == (\-1)) goto L60l}"];
Node_27 [shape=record,label="{27\:\ 0x0085|lrunSeek(r7.npc[r1][r0], true)l}"];
Node_28 [shape=record,label="{28\:\ 0x002e|SYNTHETIC\l|l}"];
Node_29 [shape=record,label="{29\:\ 0x002e|LOOP_END\lLOOP:0: B:7:0x001b\-\>B:29:0x002e\l|lbyte r1 = (byte) (r1 + 2)l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|SYNTHETIC\l|l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|linsertNpc()l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|RETURN\l|lreturnl}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_34 [shape=record,label="{34\:\ 0x000f|lrunSeek(r7.my, false)l}"];
MethodNode[shape=record,label="{private void main.Map.runMove((r7v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:29:0x002e \-\> B:7:0x001b, BACK_EDGE: B:17:0x004b \-\> B:10:0x0027, CROSS_EDGE: B:21:0x0067 \-\> B:17:0x004b, CROSS_EDGE: B:26:0x0083 \-\> B:21:0x0067, CROSS_EDGE: B:27:0x0085 \-\> B:21:0x0067, CROSS_EDGE: B:24:0x0079 \-\> B:27:0x0085, CROSS_EDGE: B:13:0x003c \-\> B:18:0x004f, CROSS_EDGE: B:5:0x0022 \-\> B:6:0x0015, CROSS_EDGE: B:2:0x0007 \-\> B:34:0x000f\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_34;
Node_3 -> Node_4;
Node_4 -> Node_34[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_30[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_28[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_10;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_21;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_21;
Node_28 -> Node_29;
Node_29 -> Node_7;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_6;
}

