digraph "CFG formain.Map.runNpcAniOne([Ldm\/Npc;I)V" {
subgraph cluster_Region_843045927 {
label = "R(4:1|(1:3)|4|(1:(1:6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|lbyte byte r2 = (byte) (r9[r10].other[3] \- 1)lbyte r1 = r9[r10].other[2]ldm.Ms.i()lbyte byte r0 = (byte) dm.Ms.abs(r9[r10].other[7])l}"];
subgraph cluster_IfRegion_95950453 {
label = "IF [B:2:0x002f] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x002f|lif (r9[r10].now_action \>= main.Map.npcSp[r2][r1].aLength(r0)) goto L14l}"];
subgraph cluster_Region_1472074684 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0031|lr9[r10].now_action = (byte) 0lsetlastA(r9, r10)l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0038|ldm.Npc r3 = r9[r10]lbyte byte r4 = (byte) (r3.now_time + 1)lr3.now_time = r4l}"];
subgraph cluster_Region_1185740204 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2038534477 {
label = "IF [B:5:0x004f] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x004f|lif (r4 \>= main.Map.npcSp[r2][r1].action(r0, r9[r10].now_action, 1)) goto L17l}"];
subgraph cluster_Region_1256177623 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0051|ldm.Npc r3 = r9[r10]lr3.now_action = (byte) (r3.now_action + 1)lr9[r10].now_time = (byte) 0l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x005e|ORIG_RETURN\l|l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l|l}"];
MethodNode[shape=record,label="{private void main.Map.runNpcAniOne((r8v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r9v0 'npc' dm.Npc[] A[D('npc' dm.Npc[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'i' int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:5:0x004f \-\> B:7:0x005e, CROSS_EDGE: B:2:0x002f \-\> B:4:0x0038\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_8;
}

