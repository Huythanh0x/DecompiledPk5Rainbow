digraph "CFG formain.Map.setSIfElse(IZZ)Z" {
subgraph cluster_Region_1596212153 {
label = "R(1:(2:(2:5|6)|(1:(2:(1:12)|(1:13)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1412444942 {
label = "R(2:(2:5|6)|(1:(2:(1:12)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1777307292 {
label = "IF [B:2:0x0003] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|lif (r4 == 2) goto L23l}"];
subgraph cluster_Region_1806175771 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|PHI: r0l  0x0008: PHI (r0v5 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|lr3.sIfElse = (byte) (r5 ? 0 : 1)l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|RETURN\lORIG_RETURN\l|lreturn truel}"];
}
}
subgraph cluster_Region_376222044 {
label = "R(1:(2:(1:12)|(1:13))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_Region_1133594844 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1453303132 {
label = "IF [B:9:0x000f, B:10:0x0011] THEN: R(1:12) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x000f|lif (r6 == true) goto L29l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|ADDED_TO_REGION\l|lif (r5 == true) goto L30l}"];
subgraph cluster_Region_2104271170 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|lreturn truel}"];
}
}
subgraph cluster_Region_242817506 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0015|RETURN\l|lreturn !r6 && r4 == 1l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005|l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0007|l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000d|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0013|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0017|REMOVE\lADDED_TO_REGION\l|l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0019|l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001b|l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l|l}"];
MethodNode[shape=record,label="{private boolean main.Map.setSIfElse((r3v0 'this' main.Map A[IMMUTABLE_TYPE, THIS]), (r4v0 '_mode' int A[D('_mode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 '_bt' boolean A[D('_bt' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 '_bmode' boolean A[D('_bmode' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:8:0x000d \-\> B:5:0x0008, CROSS_EDGE: B:11:0x0013 \-\> B:6:0x000c, CROSS_EDGE: B:15:0x0019 \-\> B:6:0x000c, CROSS_EDGE: B:17:0x001b \-\> B:6:0x000c, CROSS_EDGE: B:13:0x0015 \-\> B:17:0x001b, CROSS_EDGE: B:9:0x000f \-\> B:13:0x0015\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_7;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_8 -> Node_5;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_7;
Node_17 -> Node_18;
Node_18 -> Node_7;
}

