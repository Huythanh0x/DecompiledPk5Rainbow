digraph "CFG forminigame.Guess.draw()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|lif (r30.state != 0) goto L35l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ldm.Ui.i().drawString(main.Constants_H.GAME_TXT_7, main.Constants_H.WIDTH_H_, 4, 17, 3, 1)ldm.Ui.i().drawUi(7, main.Constants_H.WIDTH_H_ \- 75, 27, 40, 0)ldm.Ui.i().drawUi(7, main.Constants_H.WIDTH_H_ + 75, 27, 36, 4)l}"];
Node_4 [shape=record,label="{4\:\ 0x003d|lint r12 = 29 * 10ldm.Ui.i().drawK(10, 25 + 10, javax.microedition.media.Player.REALIZED, r12, 4)ldm.Ui.i().drawK((10 + javax.microedition.media.Player.REALIZED) + 10, 25 + 10, javax.microedition.media.Player.REALIZED, r12, 4)ldm.Ui r13 = dm.Ui.i()lint r5 = (javax.microedition.media.Player.REALIZED + 10) * 2lr13.drawK(10 + 420, 25 + 10, javax.microedition.media.Player.REALIZED, r12, 4)ldm.Ui.i().drawStringY(r30.gr.about_a, 10 + 6, 25 + 10, 29, 0, 0)l}"];
Node_5 [shape=record,label="{5\:\ 0x0096|lif (r30.state != 0) goto L40l}"];
Node_6 [shape=record,label="{6\:\ 0x0098|lr30.gr.showStringM(new java.lang.StringBuilder(main.Constants_H.GAME_TXT_12).append(r30.sell_money).append(main.Constants_H.MONEY_TXT_0).toString(), main.Constants_H.WIDTH_H_, (25 + 290) \- 50, 7, 0)lint r16 = (25 + 75) + 5ldm.Ui.i().drawListKY(2, ((10 + javax.microedition.media.Player.REALIZED) + 12) + 25, r16, javax.microedition.media.Player.REALIZED \- 50, 3, 30, 10, r30.sel, 4, 2)lr28 = 0l}"];
Node_7 [shape=record,label="{7\:\ 0x00f0|LOOP_START\lPHI: r28l  0x00f0: PHI (r28v1 'i' int) = (r28v0 'i' int), (r28v2 'i' int) binds: [B:6:0x0098, B:18:0x0185] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x00f0\-\>B:18:0x0185\l|l}"];
Node_8 [shape=record,label="{8\:\ 0x00fb|lif (r28 \< r30.gr.about_b.length) goto L45l}"];
Node_9 [shape=record,label="{9\:\ 0x011e|ldm.Ui r17 = dm.Ui.i()ljava.lang.String r18 = r30.gr.about_b[r28].toString()lint r19 = (((10 + javax.microedition.media.Player.REALIZED) + 15) + 25) + 26lint r20 = ((r28 * 40) + 105) \- 2l}"];
Node_10 [shape=record,label="{10\:\ 0x0148|lif (r30.sel != r28) goto L54l}"];
Node_11 [shape=record,label="{11\:\ 0x014a|lr22 = 0l}"];
Node_12 [shape=record,label="{12\:\ 0x014d|PHI: r22l  0x014d: PHI (r22v2 int) = (r22v1 int), (r22v3 int) binds: [B:22:0x0189, B:11:0x014a] A[DONT_GENERATE, DONT_INLINE]\l|lr17.drawString(r18, r19, r20, 0, r22, 1)l}"];
Node_13 [shape=record,label="{13\:\ 0x016f|lif (r30.gr.pkey.isSelect(((10 + javax.microedition.media.Player.REALIZED) + 12) + 25, ((r28 * 40) + 105) \- 2, javax.microedition.media.Player.REALIZED \- 50, 40) == false) goto L58l}"];
Node_14 [shape=record,label="{14\:\ 0x0171|l}"];
Node_15 [shape=record,label="{15\:\ 0x0179|lif (r30.sel != r28) goto L55l}"];
Node_16 [shape=record,label="{16\:\ 0x017b|lr30.gr.pkey.setKey5()l}"];
Node_17 [shape=record,label="{17\:\ 0x0185|SYNTHETIC\l|l}"];
Node_18 [shape=record,label="{18\:\ 0x0185|LOOP_END\lLOOP:0: B:7:0x00f0\-\>B:18:0x0185\l|lint r28 = r28 + 1l}"];
Node_19 [shape=record,label="{19\:\ 0x018d|lr30.sel = (byte) r28l}"];
Node_20 [shape=record,label="{20\:\ 0x0185|SYNTHETIC\l|l}"];
Node_21 [shape=record,label="{21\:\ 0x0185|SYNTHETIC\l|l}"];
Node_22 [shape=record,label="{22\:\ 0x0189|lr22 = 3l}"];
Node_23 [shape=record,label="{23\:\ 0x00fd|SYNTHETIC\l|l}"];
Node_24 [shape=record,label="{24\:\ 0x00fd|l}"];
Node_25 [shape=record,label="{25\:\ 0x0102|lif (r30.state != 0) goto L43l}"];
Node_26 [shape=record,label="{26\:\ 0x0104|ldm.Ui.i().drawYesNo(true, true)l}"];
Node_27 [shape=record,label="{27\:\ 0x010d|lr30.gr.drawMoney(main.Constants_H.WIDTH_H_, main.Constants_H.HEIGHT_, 3, false)l}"];
Node_28 [shape=record,label="{28\:\ 0x011d|RETURN\l|lreturnl}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{private void minigame.Guess.draw((r30v0 'this' minigame.Guess A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:25:0x0102 \-\> B:27:0x010d, BACK_EDGE: B:18:0x0185 \-\> B:7:0x00f0, CROSS_EDGE: B:19:0x018d \-\> B:18:0x0185, CROSS_EDGE: B:13:0x016f \-\> B:18:0x0185, CROSS_EDGE: B:22:0x0189 \-\> B:12:0x014d, CROSS_EDGE: B:5:0x0096 \-\> B:24:0x00fd, CROSS_EDGE: B:2:0x000d \-\> B:4:0x003d\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_23[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_7;
Node_19 -> Node_20;
Node_20 -> Node_18;
Node_21 -> Node_18;
Node_22 -> Node_12;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

