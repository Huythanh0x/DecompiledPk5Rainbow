digraph "CFG forminigame.Guess.key()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|lif (dm.Ms.i().key_delay() == false) goto L72l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|RETURN\lORIG_RETURN\l|lreturn falsel}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|lif (r7.state != 0) goto L91l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|lif (dm.Ms.i().key_Up_Down() == false) goto L78l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|lr7.sel = (byte) (r7.sel ^ 1)l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|lreturn falsel}"];
Node_13 [shape=record,label="{13\:\ 0x0028|l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|lif (dm.Ms.i().key_S1_Num5() == false) goto L88l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|ldm.Ms.i().keyRelease()l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|lif (r7.sel != 0) goto L85l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|lif (r7.gr.isMoney(r7.sell_money, true) == false) goto L85l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|lgo(1, r7.lv)l}"];
Node_20 [shape=record,label="{20\:\ 0x004d|l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|lif (r7.sel != 1) goto L77l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|ldm.Ms.i().keyRelease()lr7.gr.about_a = nulllr7.imgBox = nulllr7.boxNum = nulllr7.gameData = nulllr7.box = nulllr7.imgMon = nulll}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|lreturn truel}"];
Node_24 [shape=record,label="{24\:\ 0x0068|l}"];
Node_25 [shape=record,label="{25\:\ 0x0070|lif (dm.Ms.i().key_S2() == false) goto L77l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|ldm.Ms.i().keyRelease()lr7.gr.about_a = nulllr7.imgBox = nulllr7.boxNum = nulllr7.gameData = nulllr7.box = nulllr7.imgMon = nulll}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|lreturn truel}"];
Node_28 [shape=record,label="{28\:\ 0x0089|l}"];
Node_29 [shape=record,label="{29\:\ 0x008b|lif (r7.state != 3) goto L103l}"];
Node_30 [shape=record,label="{30\:\ 0x008d|l}"];
Node_31 [shape=record,label="{31\:\ 0x0095|lif (dm.Ms.i().key_Left_Right() == false) goto L96l}"];
Node_32 [shape=record,label="{32\:\ 0x0097|lmain.GameRun r0 = r7.grlr0.selectx = dm.Ms.i().select(r7.gr.selectx, 0, r7.box.length \- 1)l}"];
Node_33 [shape=record,label="{33\:\ 0x00ad|l}"];
Node_34 [shape=record,label="{34\:\ 0x00b5|lif (dm.Ms.i().key_S1_Num5() == false) goto L77l}"];
Node_35 [shape=record,label="{35\:\ 0x00b7|ldm.Ms.i().keyRelease()lr7.state = 4l}"];
Node_36 [shape=record,label="{36\:\ 0x00c9|lif (r7.gr.selectx != r7.gr.selecty) goto L102l}"];
Node_37 [shape=record,label="{37\:\ 0x00cb|lr0 = 1l}"];
Node_38 [shape=record,label="{38\:\ 0x00cc|PHI: r0l  0x00cc: PHI (r0v39 int) = (r0v38 int), (r0v41 int) binds: [B:39:0x00d1, B:37:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|lr7.b_win = (byte) r0l}"];
Node_39 [shape=record,label="{39\:\ 0x00d1|lr0 = \-1l}"];
Node_40 [shape=record,label="{40\:\ 0x00d3|l}"];
Node_41 [shape=record,label="{41\:\ 0x00d6|lif (r7.state != 4) goto L77l}"];
Node_42 [shape=record,label="{42\:\ 0x00d8|l}"];
Node_43 [shape=record,label="{43\:\ 0x00e0|lif (dm.Ms.i().key_S1_Num5() == false) goto L77l}"];
Node_44 [shape=record,label="{44\:\ 0x00e2|ldm.Ms.i().keyRelease()l}"];
Node_45 [shape=record,label="{45\:\ 0x00eb|lif (r7.b_win != 1) goto L112l}"];
Node_46 [shape=record,label="{46\:\ 0x00ed|lr7.b_win = win()l}"];
Node_47 [shape=record,label="{47\:\ 0x00f5|lif (r7.b_win != 3) goto L77l}"];
Node_48 [shape=record,label="{48\:\ 0x00f7|lgo(1, r7.lv)l}"];
Node_49 [shape=record,label="{49\:\ 0x00fe|l}"];
Node_50 [shape=record,label="{50\:\ 0x0100|lif (r7.b_win == (\-1)) goto L118l}"];
Node_51 [shape=record,label="{51\:\ 0x0102|l}"];
Node_52 [shape=record,label="{52\:\ 0x0105|lif (r7.b_win != 2) goto L77l}"];
Node_53 [shape=record,label="{53\:\ 0x0107|l}"];
Node_54 [shape=record,label="{54\:\ 0x010b|lif (r7.gr.say_c != 0) goto L77l}"];
Node_55 [shape=record,label="{55\:\ 0x010d|l}"];
Node_56 [shape=record,label="{56\:\ 0x0110|lif (r7.b_win != 2) goto L124l}"];
Node_57 [shape=record,label="{57\:\ 0x0112|l}"];
Node_58 [shape=record,label="{58\:\ 0x011a|lif (r7.gr.rmsOther[11] != 3) goto L124l}"];
Node_59 [shape=record,label="{59\:\ 0x011c|lr7.gr.rmsOther[11] = 4lr7.gr.getMonster(83, 25, 0, \-1)l}"];
Node_60 [shape=record,label="{60\:\ 0x012e|lgo(0, r7.lv)l}"];
Node_61 [shape=record,label="{61\:\ 0x0135|l}"];
Node_62 [shape=record,label="{62\:\ 0x0137|lif (r7.b_win != (\-1)) goto L123l}"];
Node_63 [shape=record,label="{63\:\ 0x0139|l}"];
Node_64 [shape=record,label="{64\:\ 0x0141|lif (r7.gr.rmsOther[11] \>= 3) goto L123l}"];
Node_65 [shape=record,label="{65\:\ 0x0143|lr7.gr.rmsOther[11] = 0l}"];
MethodNode[shape=record,label="{public boolean minigame.Guess.key((r7v0 'this' minigame.Guess A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [minigame.MiniGame_H.key():boolean]\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:11:0x0026 \-\> B:4:0x0010, CROSS_EDGE: B:19:0x0047 \-\> B:11:0x0026, CROSS_EDGE: B:21:0x004f \-\> B:11:0x0026, CROSS_EDGE: B:22:0x0051 \-\> B:4:0x0010, CROSS_EDGE: B:16:0x003b \-\> B:20:0x004d, CROSS_EDGE: B:25:0x0070 \-\> B:11:0x0026, CROSS_EDGE: B:26:0x0072 \-\> B:4:0x0010, CROSS_EDGE: B:32:0x0097 \-\> B:11:0x0026, CROSS_EDGE: B:34:0x00b5 \-\> B:11:0x0026, CROSS_EDGE: B:38:0x00cc \-\> B:11:0x0026, CROSS_EDGE: B:39:0x00d1 \-\> B:38:0x00cc, CROSS_EDGE: B:41:0x00d6 \-\> B:11:0x0026, CROSS_EDGE: B:43:0x00e0 \-\> B:11:0x0026, CROSS_EDGE: B:47:0x00f5 \-\> B:11:0x0026, CROSS_EDGE: B:48:0x00f7 \-\> B:11:0x0026, CROSS_EDGE: B:52:0x0105 \-\> B:11:0x0026, CROSS_EDGE: B:54:0x010b \-\> B:11:0x0026, CROSS_EDGE: B:60:0x012e \-\> B:11:0x0026, CROSS_EDGE: B:62:0x0137 \-\> B:60:0x012e, CROSS_EDGE: B:64:0x0141 \-\> B:60:0x012e, CROSS_EDGE: B:65:0x0143 \-\> B:60:0x012e, CROSS_EDGE: B:56:0x0110 \-\> B:61:0x0135, CROSS_EDGE: B:50:0x0100 \-\> B:55:0x010d\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_28;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_11;
Node_20 -> Node_21;
Node_21 -> Node_11;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_5;
Node_24 -> Node_25;
Node_25 -> Node_11;
Node_25 -> Node_26[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_5;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_40;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_11;
Node_33 -> Node_34;
Node_34 -> Node_11;
Node_34 -> Node_35[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_11;
Node_39 -> Node_38;
Node_40 -> Node_41;
Node_41 -> Node_11;
Node_41 -> Node_42[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_11;
Node_43 -> Node_44[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_49;
Node_46 -> Node_47;
Node_47 -> Node_11;
Node_47 -> Node_48[style=dashed];
Node_48 -> Node_11;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_55;
Node_51 -> Node_52;
Node_52 -> Node_11;
Node_52 -> Node_53[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_11;
Node_54 -> Node_55[style=dashed];
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_61;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_60;
Node_60 -> Node_11;
Node_61 -> Node_62;
Node_62 -> Node_60;
Node_62 -> Node_63[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_60;
Node_64 -> Node_65[style=dashed];
Node_65 -> Node_60;
}

