digraph "CFG forminigame.Racing.draw0(IIII)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,label="{1\:\ 0x0000|ldm.Ui.i().fillRectB()ldm.Ui.i().drawString(main.Constants_H.GAME_TXT_7, main.Constants_H.WIDTH_H_, (r23 + r25) + 3, 33, 3, 1)ldm.Ui.i().drawUi(7, main.Constants_H.WIDTH_H_ \- 50, (r23 + r25) \- 13, 40, 0)ldm.Ui.i().drawUi(7, main.Constants_H.WIDTH_H_ + 50, (r23 + r25) \- 13, 36, 4)ldm.Ui.i().drawK(r22, (r23 + r25) + 3, javax.microedition.media.Player.REALIZED, r24, 4)ldm.Ui.i().drawK((r22 + javax.microedition.media.Player.REALIZED) + 10, (r23 + r25) + 3, javax.microedition.media.Player.REALIZED, r24, 4)lmain.GameRun r0 = r21.grlint r5 = javax.microedition.media.Player.REALIZED \>\> 1lr0.showStringM(main.Constants_H.GAME_TXT_26, r22 + 100, (r23 + r25) + 15, 7, 0)ldm.Ui r8 = dm.Ui.i()lint r5 = (javax.microedition.media.Player.REALIZED + 10) * 2lr8.drawK(r22 + 420, (r23 + r25) + 3, javax.microedition.media.Player.REALIZED, r24, 4)ldm.Ui r12 = dm.Ui.i()ljava.lang.StringBuffer[] r13 = r21.gr.about_alint r5 = (javax.microedition.media.Player.REALIZED + 10) * 2lr12.drawStringY(r13, (r22 + 420) + 25, (r23 + r25) + 15, r25, 0, 0)l}"];
Node_2 [shape=record,label="{2\:\ 0x00bd|lif (r21.state != 0) goto L29l}"];
Node_3 [shape=record,label="{3\:\ 0x00bf|ldm.Ui.i().drawString(main.Constants_H.GAME_TXT_4, (r22 + javax.microedition.media.Player.REALIZED) + 10, (r23 + r25) + 15, 0, 0, 0)lr20 = 0l}"];
Node_4 [shape=record,label="{4\:\ 0x00d8|LOOP_START\lPHI: r20l  0x00d8: PHI (r20v1 'i' int) = (r20v0 'i' int), (r20v2 'i' int) binds: [B:3:0x00bf, B:12:0x019d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x00d8\-\>B:12:0x019d\l|l}"];
Node_5 [shape=record,label="{5\:\ 0x00e0|lif (r20 \< r21.length) goto L31l}"];
Node_6 [shape=record,label="{6\:\ 0x011c|ldm.Ui.i().drawK((((r22 + javax.microedition.media.Player.REALIZED) + 10) + 25) + 14, ((r23 + r25) + 50) + ((r25 + 16) * r20), 150, r25 + 4, 1)ldm.Ui.i().drawString(r21.gr.about_b[r20].toString(), (((r22 + javax.microedition.media.Player.REALIZED) + 10) + 25) + 14, ((r23 + r25) + 50) + ((r25 + 16) * r20), 0, 3, 0)l}"];
Node_7 [shape=record,label="{7\:\ 0x0187|lif (r21.gr.pkey.isSelect((((r22 + javax.microedition.media.Player.REALIZED) + 10) + 25) + 14, ((r23 + r25) + 50) + ((r25 + 16) * r20), 150, r25 + 4) == false) goto L40l}"];
Node_8 [shape=record,label="{8\:\ 0x0189|l}"];
Node_9 [shape=record,label="{9\:\ 0x0191|lif (r21.sel != r20) goto L37l}"];
Node_10 [shape=record,label="{10\:\ 0x0193|lr21.gr.pkey.setKey5()l}"];
Node_11 [shape=record,label="{11\:\ 0x019d|SYNTHETIC\l|l}"];
Node_12 [shape=record,label="{12\:\ 0x019d|LOOP_END\lLOOP:0: B:4:0x00d8\-\>B:12:0x019d\l|lint r20 = r20 + 1l}"];
Node_13 [shape=record,label="{13\:\ 0x01a1|lr21.sel = (byte) r20l}"];
Node_14 [shape=record,label="{14\:\ 0x019d|SYNTHETIC\l|l}"];
Node_15 [shape=record,label="{15\:\ 0x019d|SYNTHETIC\l|l}"];
Node_16 [shape=record,label="{16\:\ 0x00e2|SYNTHETIC\l|l}"];
Node_17 [shape=record,label="{17\:\ 0x00e2|ldm.Ui.i().drawK4((((r22 + javax.microedition.media.Player.REALIZED) + 10) + 25) + 14, ((r23 + r25) + 50) + (r21.sel * (r25 + 16)), 150, r25 + 4)l}"];
Node_18 [shape=record,label="{18\:\ 0x0102|lr21.gr.drawMoney(main.Constants_H.WIDTH_H_, main.Constants_H.HEIGHT_, 3, false)ldm.Ui.i().drawYesNo(true, true)l}"];
Node_19 [shape=record,label="{19\:\ 0x011b|RETURN\l|lreturnl}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l|l}"];
MethodNode[shape=record,label="{private void minigame.Racing.draw0((r21v0 'this' minigame.Racing A[IMMUTABLE_TYPE, THIS]), (r22v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'h' int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'fh' int A[D('fh' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\lBACK_EDGE: B:12:0x019d \-\> B:4:0x00d8, CROSS_EDGE: B:13:0x01a1 \-\> B:12:0x019d, CROSS_EDGE: B:7:0x0187 \-\> B:12:0x019d, CROSS_EDGE: B:2:0x00bd \-\> B:18:0x0102\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_16[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_4;
Node_13 -> Node_14;
Node_14 -> Node_12;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

