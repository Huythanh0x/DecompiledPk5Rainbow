digraph "CFG forminigame.Racing.draw1(III)V" {
subgraph cluster_Region_256960870 {
label = "R(7:1|(3:4|(1:7)(1:13)|10)|(2:18|(1:(1:22)(1:23)))|24|(1:27)|(2:31|(1:(1:35)(1:36)))|40) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0000|ldm.Ui.i().drawK(com.uc.paymentsdk.util.Constants.ERROR_CODE_EMAIL_WRONG_FORMAT, 33, 210, 325, 4)lbyte r11 = 0l}"];
subgraph cluster_LoopRegion_343174014 {
label = "LOOP:0: (3:4|(1:7)(1:13)|10)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|ADDED_TO_REGION\l|lif (r11 \< r13.length) goto L71l}"];
subgraph cluster_Region_1409883688 {
label = "R(3:4|(1:7)(1:13)|10)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0117|ldm.Ui.i().drawK(r14 + 25 + (r11 * main.Key_H.KEY_NUM4), r15 + 25 + 10, 44, r16, 1)ldm.Ui dm.Ui r0 = dm.Ui.i()ldm.Sprite r1 = r13.sp[0]lint int r3 = r14 + 25 + (r11 * main.Key_H.KEY_NUM4) + 22lint int r4 = r15 + 25 + 8 + r16lbyte[] r5 = r13.now_a[r11]l}"];
subgraph cluster_IfRegion_871881131 {
label = "IF [B:5:0x014b] THEN: R(1:7) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x014b|lif (r13.state == 1) goto L73l}"];
subgraph cluster_Region_218093348 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x014f|lr7 = r13.sel == r11l}"];
}
subgraph cluster_Region_2089016173 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0180|lr7 = falsel}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0152|LOOP_END\lPHI: r7l  0x0152: PHI (r7v2 boolean) = (r7v1 boolean), (r7v5 boolean) binds: [B:14:0x0152, B:9:0x0152] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0017\-\>B:10:0x0152\l|lr0.drawActionOne(r1, 0, r3, r4, r5, 0, r7)ldm.Ui.i().drawNum(new java.lang.StringBuilder().append(r11 + 1).toString(), r14 + 25 + (r11 * main.Key_H.KEY_NUM4) + 27, r15 + 50 + 12, 20, 2)lbyte r11 = (byte) (r11 + 1)l}"];
}
}
subgraph cluster_IfRegion_1612371148 {
label = "IF [B:17:0x001e] THEN: R(2:18|(1:(1:22)(1:23))) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001e|lif (r13.state == 1) goto L51l}"];
subgraph cluster_Region_1264187877 {
label = "R(2:18|(1:(1:22)(1:23)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0020|ldm.Ui.i().drawK4(r14 + 25 + (r13.sel * main.Key_H.KEY_NUM4), r15 + 25 + 10, 44, 76)ldm.Ui.i().drawTriangle(main.Constants_H.WIDTH_H_, r15 + 25 + 49, 116, true, true)lbyte byte r12 = r13.gr.pkey.selectMenuX(4, main.Constants_H.WIDTH_H_ \- 116, r15 + 25 + 10, 52, r16)l}"];
subgraph cluster_IfRegion_856435925 {
label = "IF [B:19:0x005c] THEN: R(1:(1:22)(1:23)) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x005c|lif (r12 != (\-1)) goto L53l}"];
subgraph cluster_Region_2009784422 {
label = "R(1:(1:22)(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1825177912 {
label = "IF [B:21:0x0060] THEN: R(1:22) ELSE: R(1:23)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0060|lif (r13.sel == r12) goto L55l}"];
subgraph cluster_Region_506265201 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0062|lr13.gr.pkey.setKey5()l}"];
}
subgraph cluster_Region_2014417755 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0182|lr13.sel = r12l}"];
}
}
}
}
}
}
Node_24 [shape=record,label="{24\:\ 0x0069|ldm.Ui.i().drawString(main.Constants_H.GAME_TXT_9, r14 + 25, r15 + 25 + 13 + r16, 0, 0, 0)lr13.gr.drawFealty(6, 2, r14 + 125, r15 + 25 + 19 + r16)lr13.gr.showStringM(main.Constants_H.GAME_TXT_6, main.Constants_H.WIDTH_H_, r15 + 50 + 19 + r16, 8, 0)lint int r16 = r16 + 69 + 25 + 75ldm.Ui.i().drawString(main.Constants_H.GAME_TXT_10, r14 + 25, r15 + r16, 0, 0, 0)lint int r16 = r16 + 25 + 3lbyte r11 = 0l}"];
subgraph cluster_LoopRegion_789583115 {
label = "LOOP:1: (1:27)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00ba|ADDED_TO_REGION\l|lif (r11 \< r13.length) goto L80l}"];
subgraph cluster_Region_74187780 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0186|LOOP_END\lLOOP:1: B:25:0x00b8\-\>B:27:0x0186\l|ldm.Ui.i().drawK(r14 + 25 + (r11 * main.Key_H.KEY_NUM4), r15 + r16, 44, 34, 1)lr13.gr.drawItem(12, r14 + 25 + (r11 * main.Key_H.KEY_NUM4), r15 + r16 + 10, 0)ldm.Ui.i().drawString(\"x\" + ((int) r11), r14 + 25 + (r11 * main.Key_H.KEY_NUM4) + 16, r15 + r16 + 8, 0, 3, 1)lbyte r11 = (byte) (r11 + 1)l}"];
}
}
subgraph cluster_IfRegion_328943262 {
label = "IF [B:30:0x00bf] THEN: R(2:31|(1:(1:35)(1:36))) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00bf|lif (r13.state == 2) goto L61l}"];
subgraph cluster_Region_411607807 {
label = "R(2:31|(1:(1:35)(1:36)))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00c1|ldm.Ui.i().drawK4(r14 + 25 + (r13.sel * main.Key_H.KEY_NUM4), r15 + r16, 44, 34)ldm.Ui.i().drawTriangle(main.Constants_H.WIDTH_H_, r15 + r16 + 14, 116, true, true)lbyte byte r12 = r13.gr.pkey.selectMenuX(4, main.Constants_H.WIDTH_H_ \- 116, r15 + r16 + 8, 52, 34)l}"];
subgraph cluster_IfRegion_1562685754 {
label = "IF [B:32:0x00fb] THEN: R(1:(1:35)(1:36)) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00fb|lif (r12 != (\-1)) goto L63l}"];
subgraph cluster_Region_630283413 {
label = "R(1:(1:35)(1:36))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_957137598 {
label = "IF [B:34:0x00ff] THEN: R(1:35) ELSE: R(1:36)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00ff|lif (r13.sel == r12) goto L65l}"];
subgraph cluster_Region_91767185 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0101|lr13.gr.pkey.setKey5()l}"];
}
subgraph cluster_Region_1691226170 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x01d3|lr13.sel = r12l}"];
}
}
}
}
}
}
Node_40 [shape=record,label="{40\:\ 0x0113|PHI: r2l  0x0113: PHI (r2v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|ldm.Ui.i().drawYesNo(true, r13.state != 1)l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0017|LOOP_START\lPHI: r11l  0x0017: PHI (r11v1 'i' byte) = (r11v0 'i' byte), (r11v5 'i' byte) binds: [B:1:0x0000, B:10:0x0152] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0017\-\>B:10:0x0152\l|l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x014d|l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0151|l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0152|SYNTHETIC\l|l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x017e|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0152|SYNTHETIC\l|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0152|SYNTHETIC\l|l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x001b|SYNTHETIC\l|l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x001b|l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005e|l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00b8|LOOP_START\lPHI: r11l  0x00b8: PHI (r11v3 'i' byte) = (r11v2 'i' byte), (r11v4 'i' byte) binds: [B:24:0x0069, B:27:0x0186] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:25:0x00b8\-\>B:27:0x0186\l|l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00bc|SYNTHETIC\l|l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00bc|l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00fd|l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0108|l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0110|l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0112|l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0116|l}"];
Node_42 [shape=record,color=red,label="{42\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x01d7|l}"];
MethodNode[shape=record,label="{private void minigame.Racing.draw1((r13v0 'this' minigame.Racing A[IMMUTABLE_TYPE, THIS]), (r14v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'h' int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{l DEBUG: l \-\> TODO: convert one arg to string using `String.valueOf()`, args: (wrap:int:ARITH)\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:43:0x01d7 \-\> B:40:0x0113, CROSS_EDGE: B:36:0x01d3 \-\> B:37:0x0108, CROSS_EDGE: B:32:0x00fb \-\> B:37:0x0108, CROSS_EDGE: B:30:0x00bf \-\> B:37:0x0108, BACK_EDGE: B:27:0x0186 \-\> B:25:0x00b8, CROSS_EDGE: B:23:0x0182 \-\> B:24:0x0069, CROSS_EDGE: B:19:0x005c \-\> B:24:0x0069, CROSS_EDGE: B:17:0x001e \-\> B:24:0x0069, BACK_EDGE: B:10:0x0152 \-\> B:2:0x0017, CROSS_EDGE: B:11:0x017e \-\> B:10:0x0152, CROSS_EDGE: B:13:0x0180 \-\> B:10:0x0152\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_15[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_13[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_13 -> Node_14;
Node_10 -> Node_2;
Node_17 -> Node_18;
Node_17 -> Node_24[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_24[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_25;
Node_30 -> Node_31;
Node_30 -> Node_37[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_37[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_40 -> Node_41;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_10;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_20 -> Node_21;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_33 -> Node_34;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_43;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_43 -> Node_40;
}

