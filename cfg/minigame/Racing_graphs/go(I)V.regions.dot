digraph "CFG forminigame.Racing.go(I)V" {
subgraph cluster_Region_2132457961 {
label = "R(1:(2:(2:3|4)|(1:(2:(2:7|8)|(1:(2:(2:10|11)|(1:(1:(4:13|(1:16)|18|(1:21))))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_63593601 {
label = "R(2:(2:3|4)|(1:(2:(2:7|8)|(1:(2:(2:10|11)|(1:(1:(4:13|(1:16)|18|(1:21)))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1870236766 {
label = "IF [B:2:0x0006] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|lif (r9 \< 1) goto L29l}"];
subgraph cluster_Region_1104907397 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|lr8.sel = (byte) 0lr8.state = (byte) 0lr8.length = (byte) 3lr8.gr.setStringB(main.Constants_H.GAME_TXT_3, main.Constants_H.WIDTH \- 50, 0)lr8.gr.setStringB(main.Constants_H.GAME_TXT_8, main.Constants_H.WIDTH \- 50, 1)l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|RETURN\lORIG_RETURN\l|lreturnl}"];
}
}
subgraph cluster_Region_1805955238 {
label = "R(1:(2:(2:7|8)|(1:(2:(2:10|11)|(1:(1:(4:13|(1:16)|18|(1:21)))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_Region_987481863 {
label = "R(2:(2:7|8)|(1:(2:(2:10|11)|(1:(1:(4:13|(1:16)|18|(1:21)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_425961342 {
label = "IF [B:6:0x0023] THEN: R(2:7|8) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0023|lif (r9 == 1) goto L32l}"];
subgraph cluster_Region_79802227 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|lr8.myDate[0] = r8.sellr8.sel = (byte) 0lr8.state = (byte) 1lr8.length = (byte) 4l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
}
}
subgraph cluster_Region_1252925133 {
label = "R(1:(2:(2:10|11)|(1:(1:(4:13|(1:16)|18|(1:21)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_Region_782834528 {
label = "R(2:(2:10|11)|(1:(1:(4:13|(1:16)|18|(1:21)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_712315292 {
label = "IF [B:9:0x0033] THEN: R(2:10|11) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0033|lif (r9 == 2) goto L34l}"];
subgraph cluster_Region_591825302 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0035|lr8.myDate[1] = r8.sellr8.sel = (byte) 0lr8.state = (byte) 2l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
}
}
subgraph cluster_Region_430220101 {
label = "R(1:(1:(4:13|(1:16)|18|(1:21)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_Region_2142296330 {
label = "R(1:(4:13|(1:16)|18|(1:21)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2102120081 {
label = "IF [B:12:0x0040] THEN: R(4:13|(1:16)|18|(1:21)) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0040|lif (r9 == 3) goto L36l}"];
subgraph cluster_Region_805364626 {
label = "R(4:13|(1:16)|18|(1:21))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0042|lr8.myDate[2] = r8.sellr8.sel = (byte) 0lr8.state = (byte) 3lr8.srcY = (short) 90lr8.speedLv = (byte) 0lr8.myDate[3] = \-1lr8.time = (byte) 70lbyte r0 = 0l}"];
subgraph cluster_LoopRegion_73334259 {
label = "LOOP:0: (1:16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x005e|ADDED_TO_REGION\l|lif (r0 \< r8.length) goto L43l}"];
subgraph cluster_Region_449460018 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x006d|LOOP_END\lLOOP:0: B:14:0x005c\-\>B:16:0x006d\l|lr8.monY[r0] = 450lbyte r0 = (byte) (r0 + 1)l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0060|lbyte r0 = 0l}"];
subgraph cluster_LoopRegion_461866265 {
label = "LOOP:1: (1:21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0064|ADDED_TO_REGION\l|lif (r0 \< r8.cloud.length) goto L42l}"];
subgraph cluster_Region_741144968 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0066|LOOP_END\lLOOP:1: B:19:0x0061\-\>B:21:0x0066\l|laddCloud(r0)lbyte r0 = (byte) (r0 + 1)l}"];
}
}
}
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x005c|LOOP_START\lPHI: r0l  0x005c: PHI (r0v1 'i' byte) = (r0v0 'i' byte), (r0v5 'i' byte) binds: [B:13:0x0042, B:16:0x006d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:14:0x005c\-\>B:16:0x006d\l|l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0060|SYNTHETIC\l|l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0061|LOOP_START\lPHI: r0l  0x0061: PHI (r0v3 'i' byte) = (r0v2 'i' byte), (r0v4 'i' byte) binds: [B:18:0x0060, B:21:0x0066] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0061\-\>B:21:0x0066\l|l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0022|SYNTHETIC\l|l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\l|l}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|SYNTHETIC\l|l}"];
MethodNode[shape=record,label="{public void minigame.Racing.go((r8v0 'this' minigame.Racing A[IMMUTABLE_TYPE, THIS]), (r9v0 'mode' int A[D('mode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [minigame.MiniGame_H.go(int):void]\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:7:0x0025 \-\> B:4:0x0022, CROSS_EDGE: B:10:0x0035 \-\> B:4:0x0022, CROSS_EDGE: B:12:0x0040 \-\> B:4:0x0022, CROSS_EDGE: B:20:0x0064 \-\> B:4:0x0022, BACK_EDGE: B:21:0x0066 \-\> B:19:0x0061, BACK_EDGE: B:16:0x006d \-\> B:14:0x005c\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_5;
Node_12 -> Node_13;
Node_12 -> Node_24[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_14;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_19;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_5;
Node_24 -> Node_5;
}

