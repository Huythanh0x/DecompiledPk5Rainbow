digraph "CFG forminigame.Racing.patin()V" {
subgraph cluster_Region_1710691160 {
label = "R(1:(2:(2:10|(2:(2:15|16)|(1:14)))|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_872620954 {
label = "R(2:(2:10|(2:(2:15|16)|(1:14)))|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_428743813 {
label = "IF [B:2:0x0004, B:4:0x0008, B:6:0x000c] THEN: R(2:10|(2:(2:15|16)|(1:14))) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|lif (r6.state == 0) goto L25l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|ADDED_TO_REGION\l|lif (r6.state == 1) goto L25l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|ADDED_TO_REGION\l|lif (r6.state == 2) goto L25l}"];
subgraph cluster_Region_529684348 {
label = "R(2:10|(2:(2:15|16)|(1:14)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000e|ldraw0(10, 5, 325, 25)l}"];
subgraph cluster_Region_1109584389 {
label = "R(2:(2:15|16)|(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1863327272 {
label = "IF [B:11:0x001a, B:13:0x001e] THEN: R(2:15|16) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001a|lif (r6.state == 1) goto L29l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|ADDED_TO_REGION\l|lif (r6.state == 2) goto L29l}"];
subgraph cluster_Region_110321019 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0020|ldraw1(198, 15, 76)l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|RETURN\lORIG_RETURN\l|lreturnl}"];
}
}
subgraph cluster_Region_188203874 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|lreturnl}"];
}
}
}
}
subgraph cluster_Region_1586520771 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002a|ldrawGame()l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l|l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0000|l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006|l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a|l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l|l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l|l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001c|l}"];
MethodNode[shape=record,label="{public void minigame.Racing.patin((r6v0 'this' minigame.Racing A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [minigame.MiniGame_H.patin():void]\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:13:0x001e \-\> B:16:0x0029, CROSS_EDGE: B:11:0x001a \-\> B:15:0x0020, CROSS_EDGE: B:7:0x002a \-\> B:16:0x0029, CROSS_EDGE: B:4:0x0008 \-\> B:10:0x000e, CROSS_EDGE: B:2:0x0004 \-\> B:10:0x000e\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_6 -> Node_10;
Node_6 -> Node_7[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_13 -> Node_15;
Node_13 -> Node_14[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_9;
Node_14 -> Node_9;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_12 -> Node_13;
}

